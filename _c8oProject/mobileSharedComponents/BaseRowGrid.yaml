comment: Provides an infinite paginated Grid that can be fed by data from a BaseRow No Code database.
↓tag [ngx.components.UIUseShared-1682233502820]: 
  sharedcomponent: lib_ExtendedComponents_ui_ngx.MobileApplication.Application.agGrid
  ↓pagination [ngx.components.UIUseVariable-1682233502823]: 
    comment: 'boolean: true (default) or false'
    varValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: script:true
  ↓paginationPageSize [ngx.components.UIUseVariable-1682233502826]: 
    comment: 'integer: 10 by default'
    varValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: source:{"filter":"Shared","project":"lib_BaseRow","input":"","model":{"data":[{"priority":1682233502817,"regular":true}],"path":"?.paginationPageSize","prefix":"","suffix":"","custom":"","useCustom":false}}
  ↓rowSelection [ngx.components.UIUseVariable-1682233502829]: 
    comment: 'string: ''single'' (default) or ''multiple'''
    varValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: source:{"filter":"Shared","project":"lib_BaseRow","input":"","model":{"data":[{"priority":1682233502817,"regular":true}],"path":"?.rowSelection","prefix":"","suffix":"","custom":"","useCustom":false}}
  ↓rowDeselection [ngx.components.UIUseVariable-1682233502832]: 
    comment: 'boolean: true (default) or false'
    varValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: source:{"filter":"Shared","project":"lib_BaseRow","input":"","model":{"data":[{"priority":1682233502817,"regular":true}],"path":"?.rowDeselection","prefix":"","suffix":"","custom":"","useCustom":false}}
  ↓defaultColDef [ngx.components.UIUseVariable-1682233502835]: 
    comment: 'default is {hide: false, editable: true, sortable: true, resizable: true, filter: true, checkboxSelection: false, singleClickEdit: false}'
    varValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: source:{"filter":"Shared","project":"lib_BaseRow","input":"","model":{"data":[{"priority":1682233502817,"regular":true}],"path":"?.defaultColDef","prefix":"","suffix":"","custom":"","useCustom":false}}
  ↓columnDefs [ngx.components.UIUseVariable-1682233502838]: 
    comment: 'Array of columnDef {headerName: ''headerName'', field: ''fieldName''} objects'
    varValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: source:{"filter":"Local","project":"lib_ExtendedComponents_ui_ngx","input":"","model":{"data":[{"localObject":"local"}],"path":"?.dataDef","prefix":"","suffix":"?.columnDefs","custom":"","useCustom":false}}
  ↓rowData [ngx.components.UIUseVariable-1682233502841]: 
    comment: 'Array of row { fieldName1: ''value1'', fieldName2: ''value2'', fieldName3: true, ...} objects'
    varValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: source:{"filter":"Local","project":"lib_ExtendedComponents_ui_ngx","input":"","model":{"data":[{"localObject":"local"}],"path":"?.dataDef","prefix":"","suffix":"?.rowData","custom":"","useCustom":false}}
  ↓width [ngx.components.UIUseVariable-1682233502844]: 
    comment: width value in % or px
    varValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: source:{"filter":"Shared","project":"lib_BaseRow","input":"","model":{"data":[{"priority":1682233502817,"regular":true}],"path":"?.width","prefix":"","suffix":"","custom":"","useCustom":false}}
  ↓height [ngx.components.UIUseVariable-1682233502847]: 
    comment: height is 'auto' or value in % or px
    varValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: source:{"filter":"Shared","project":"lib_BaseRow","input":"","model":{"data":[{"priority":1682233502817,"regular":true}],"path":"?.height","prefix":"","suffix":"","custom":"","useCustom":false}}
  ↓class [ngx.components.UIUseVariable-1682233502850]: 
    comment: |
      'One of the themes provided here :
      
      https://www.ag-grid.com/javascript-grid-themes-provided/
      
      Also be shure to add the theme in the Theme object as :
      
      @import "../../node_modules/ag-grid-community/dist/styles/ag-theme-balham-dark/sass/ag-theme-balham-dark.scss";
      
      
      
      '
    varValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: source:{"filter":"Shared","project":"lib_BaseRow","input":"","model":{"data":[{"priority":1682233502817,"regular":true}],"path":"?.class","prefix":"","suffix":"","custom":"","useCustom":false}}
  ↓id [ngx.components.UIUseVariable-1682233502853]: 
    comment: An Optional ID
    varValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: source:{"filter":"Shared","project":"lib_BaseRow","input":"","model":{"data":[{"priority":1682233502817,"regular":true}],"path":"?.id","prefix":"","suffix":"","custom":"","useCustom":false}}
  ↓suppressCellSelection [ngx.components.UIUseVariable-1682233502856]: 
    varValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: source:{"filter":"Shared","project":"lib_BaseRow","input":"","model":{"data":[{"priority":1682233502817,"regular":true}],"path":"?.suppressCellSelection","prefix":"","suffix":"","custom":"","useCustom":false}}
  ↓suppressRowClickSelection [ngx.components.UIUseVariable-1682233502859]: 
    varValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: source:{"filter":"Shared","project":"lib_BaseRow","input":"","model":{"data":[{"priority":1682233502817,"regular":true}],"path":"?.suppressRowClickSelection","prefix":"","suffix":"","custom":"","useCustom":false}}
  ↓overlayLoadingTemplate [ngx.components.UIUseVariable-1682233502862]: 
    varValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: source:{"filter":"Shared","project":"lib_BaseRow","input":"","model":{"data":[{"priority":1682233502817,"regular":true}],"path":"?.overlayLoadingTemplate","prefix":"","suffix":"","custom":"","useCustom":false}}
  ↓overlayNoRowsTemplate [ngx.components.UIUseVariable-1682233502865]: 
    varValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: source:{"filter":"Shared","project":"lib_BaseRow","input":"","model":{"data":[{"priority":1682233502817,"regular":true}],"path":"?.overlayNoRowsTemplate","prefix":"","suffix":"","custom":"","useCustom":false}}
  ↓rowHeight [ngx.components.UIUseVariable-1682233502868]: 
    comment: Height of the row in pixels as a string
    varValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: source:{"filter":"Shared","project":"lib_BaseRow","input":"","model":{"data":[{"priority":1682233502817,"regular":true}],"path":"?.rowHeight","prefix":"","suffix":"","custom":"","useCustom":false}}
  ↓wrapperClass [ngx.components.UIUseVariable-1682233502871]: 
    comment: Height of the row in pixels as a string
    varValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: source:{"filter":"Shared","project":"lib_BaseRow","input":"","model":{"data":[{"priority":1682233502817,"regular":true}],"path":"?.wrapperClass","prefix":"","suffix":"","custom":"","useCustom":false}}
  ↓rowModelType [ngx.components.UIUseVariable-1682233502874]: 
    comment: Row model type
    varValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: script:'infinite'
  ↓maxBlocksInCache [ngx.components.UIUseVariable-1682233502877]: 
    comment: How many blocks to keep in the store. Default is no limit, so every requested block is kept
    varValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: script:50
  ↓autoSizeColumns [ngx.components.UIUseVariable-1682233502880]: 
    varValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: source:{"filter":"Shared","project":"lib_BaseRow","input":"","model":{"data":[{"priority":1682233502817,"regular":true}],"path":"?.autoSizeColumns","prefix":"","suffix":"","custom":"","useCustom":false}}
  ↓accessibility [ngx.components.UIUseVariable-1682233502883]: 
    comment: 'boolean: true (default) or false'
    varValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: source:{"filter":"Shared","project":"lib_BaseRow","input":"","model":{"data":[{"priority":1682233502817,"regular":true}],"path":"?.accessibility","prefix":"","suffix":"","custom":"","useCustom":false}}
  ↓ariaLabel [ngx.components.UIUseVariable-1682233502886]: 
    varValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: source:{"filter":"Shared","project":"lib_BaseRow","input":"","model":{"data":[{"priority":1682233502817,"regular":true}],"path":"?.ariaLabel","prefix":"","suffix":"","custom":"","useCustom":false}}
  ↓attr [ngx.components.UIControlEvent-1682327850637]: 
    attrName: (CellClicked)
    comment: Fired when a cell is clicked. Data will be the agGrid event
    eventName: CellClicked
  ↓attr1 [ngx.components.UIControlEvent-1682327850639]: 
    attrName: (RowClicked)
    comment: Fired when a row is clicked. Data will be the agGrid event
    eventName: RowClicked
  ↓attr2 [ngx.components.UIControlEvent-1682327850641]: 
    attrName: (RowSelected)
    comment: Fired when a row is selected. Data will be the agGrid event
    eventName: RowSelected
  ↓attr3 [ngx.components.UIControlEvent-1682327850643]: 
    attrName: (SortChanged)
    comment: Fired when a a column is sorted. Data will be the agGrid event
    eventName: SortChanged
  ↓attr4 [ngx.components.UIControlEvent-1682327850645]: 
    attrName: (RowDataChanged)
    comment: Fired when Row data changed. Data will be the agGrid event
    eventName: RowDataChanged
  ↓attr5 [ngx.components.UIControlEvent-1682327850647]: 
    attrName: (CellValueChanged)
    comment: Fired when A Cell is edited changed. Data will be the agGrid event
    eventName: CellValueChanged
  ↓attr6 [ngx.components.UIControlEvent-1682327850649]: 
    attrName: (RowDoubleClicked)
    comment: Fired when A Cell is edited changed. Data will be the agGrid event
    eventName: RowDoubleClicked
  ↓attr7 [ngx.components.UIControlEvent-1682327850651]: 
    attrName: (SelectionChanged)
    comment: Fired when selectionChange. Data will be the agGrid event
    eventName: SelectionChanged
  ↓attr8 [ngx.components.UIControlEvent-1682327850653]: 
    attrName: (GridReady)
    comment: Fired when the Grid is ready. Data will be the agGrid event
    eventName: GridReady
  ↓attr9 [ngx.components.UIControlEvent-1682327850655]: 
    attrName: (GetRows)
    comment: Fire when the RowModelType is 'infinite'. Excepts fromatted data into a agGridUpdateRows action
    eventName: GetRows
    ↓CallRequestableAndComputeIndexes [ngx.components.UICustomAction-1682850073523]: 
      actionValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
          - com.twinsoft.convertigo.beans.common.FormatedContent: 
            →: |
              '		
              		let size = vars.limit
              		let brPage = 1 + vars.skip / vars.limit
              		page.c8o.log.warn(''size is : '' + size  + '' Page is : '' + brPage)
              		
              		let args = {
              			size: size,
              			page: brPage, 
              			search: vars.search ? vars.search: null 
              		}
              		
              		if (vars.filters)
              			Object.assign(args, vars.filters)
              		
              		page.c8o.callJsonObject(vars.requestable, args)
              		.async()
              		.then((response : any)=> {
              			if (response.object.error) {
              				resolve({})	
              				return;
              			}
              			
              			let colDefs = [];
              			let rowData = [];
              			let keys = Object.keys(response.object.results[0])
              			for (let i=0; i < keys.length ; i++) {
              				if (keys[i] != ''order'')
              					colDefs.push({
              						headerName: keys[i],
              						field: keys[i]
              					})
              			}
              			
              			for (let i = 0; i < response.object.results.length; i ++) {
              				let row = {};
              				for (let j = 0; j < keys.length; j++) {
              					if (keys[j] != ''order'') {
              						//console.log(keys[j] + '' is : '' + typeof response.object.results[i][keys[j]]);
              						
              						if (typeof response.object.results[i][keys[j]] == ''object'') {
              							if (Array.isArray(response.object.results[i][keys[j]])) {
              								let text = ""
              								for (let k=0; k < response.object.results[i][keys[j]].length; k++) {
              									if (response.object.results[i][keys[j]][k])
              										text += response.object.results[i][keys[j]][k].value + '', '' 
              								}
              								row[keys[j]] = text;
              							} else {
              								if (response.object.results[i][keys[j]])
              									row[keys[j]] = response.object.results[i][keys[j]].value
              							}
              						} else {
              							row[keys[j]] = response.object.results[i][keys[j]]
              						}
              					}
              				}
              				rowData.push(row);
              			}
              	
              			let output = {
              				ColDef: colDefs,
              				RowData : rowData,
              				lastRow: response.object.count
              			}
              			
              			resolve(output);
              		})
              '
      ↓requestable [ngx.components.UIControlVariable-1682850147322]: 
        varValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: source:{"filter":"Shared","project":"lib_BaseRow","input":"","model":{"data":[{"priority":1682233502817,"regular":true}],"path":"?.ListSequenceName","prefix":"","suffix":"","custom":"","useCustom":false}}
      ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1682850406387]: 
        beanData: '{"ionBean":"InvokeAction"}'
        stack: lib_ExtendedComponents_ui_ngx.MobileApplication.Application.agGridUpdateRows
        tagName: InvokeSharedAction
        ↓data [ngx.components.UIControlVariable-1682850421636]: 
          comment: data must receive a JSON with a RowData key and an optional ColDef key
          varValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: source:{"filter":"Action","project":"lib_BaseRow","input":"","model":{"data":[{"priority":1682850073523,"rootEvent":false,"pageLocals":false},{"priority":1682327850655,"rootEvent":true,"pageLocals":false}],"path":"?.out","prefix":"","suffix":"","custom":"","useCustom":false}}
        ↓agGridEvent [ngx.components.UIControlVariable-1682850421638]: 
          comment: map agGridEvent to the TS 'event' parameter from the GetRows Control
          varValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:event
      ↓skip [ngx.components.UIControlVariable-1682917421677]: 
        varValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:out.skip
      ↓limit [ngx.components.UIControlVariable-1682917433134]: 
        varValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:out.limit
      ↓bookmark [ngx.components.UIControlVariable-1682917453119]: 
        varValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:out.bookmark
      ↓search [ngx.components.UIControlVariable-1682932112369]: 
        varValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: source:{"filter":"Shared","project":"lib_BaseRow","input":"","model":{"data":[{"priority":1682233502817,"regular":true}],"path":"?.Search","prefix":"","suffix":"","custom":"","useCustom":false}}
      ↓filters [ngx.components.UIControlVariable-1682960943468]: 
        varValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: source:{"filter":"Shared","project":"lib_BaseRow","input":"","model":{"data":[{"priority":1682233502817,"regular":true}],"path":"?.Filters","prefix":"","suffix":"","custom":"","useCustom":false}}
↓SharedComponent_Event [ngx.components.UISharedComponentEvent-1682233502889]: 
  ↓BuildDataDefs [ngx.components.UICustomAction-1682233502892]: 
    actionValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
        - com.twinsoft.convertigo.beans.common.FormatedContent: 
          →: |
            '		page.c8o.log.debug(''[MB] ''+ props.actionFunction +'': ''+ props.actionName);
            		
            		page.c8o.callJsonObject(vars.Requestable, {
            			size: vars.limit,
            			page: 1
            		})
            		.async()
            		.then((response : any)=> {
            			// page.c8o.log.warn(''OUtput'' +  JSON.stringify(response));
            			
            			let colDefs = [];
            			let rowData = [];
            			let keys = Object.keys(response.object.results[0])
            			for (let i=0; i < keys.length ; i++) {
            				if (keys[i] != ''order'')
            					colDefs.push({
            						headerName: keys[i],
            						field: keys[i]
            					})
            			}
            			
            			for (let i = 0; i < response.object.results.length; i ++) {
            				let row = {};
            				for (let j = 0; j < keys.length; j++) {
            					if (keys[j] != ''order'') {
            						console.log(keys[j] + '' is : '' + typeof response.object.results[i][keys[j]]);
            						
            						if (typeof response.object.results[i][keys[j]] == ''object'') {
            							if (Array.isArray(response.object.results[i][keys[j]])) {
            								let text = ""
            								for (let k=0; k < response.object.results[i][keys[j]].length; k++) {
            									if (response.object.results[i][keys[j]][k])
            										text += response.object.results[i][keys[j]][k].value + '', '' 
            								}
            								row[keys[j]] = text;
            							} else {
            								if (response.object.results[i][keys[j]])
            									row[keys[j]] = response.object.results[i][keys[j]].value
            							}
            						} else {
            							row[keys[j]] = response.object.results[i][keys[j]]
            						}
            					}
            				}
            				rowData.push(row);
            			}
            	
            			let output = {
            				ColDef: colDefs,
            				RowData : rowData
            			}
            			
            			// page.c8o.log.warn(''OUtput'' +  JSON.stringify(output));
            			
            			resolve(output);
            
            			});		
            '
    isEnabled: false
    ↓Data [ngx.components.UIControlVariable-1682233502895]: 
      varValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: script:out
    ↓SetLocal [ngx.components.UIDynamicAction-1682233502898]: 
      beanData: |
        '{
         "ionBean": "SetLocalAction",
         "Property": "plain:dataDef",
         "Value": "script:out"
        }'
      tagName: SetLocal
    ↓Requestable [ngx.components.UIControlVariable-1682233502901]: 
      varValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: source:{"filter":"Shared","project":"lib_ExtendedComponents_ui_ngx","input":"","model":{"data":[{"priority":1681812168270,"regular":true}],"path":"?.ListSequenceName","prefix":"","suffix":"","custom":"","useCustom":false}}
↓ListSequenceName [ngx.components.UICompVariable-1682233502904]: 
  comment: |
    The BaseRow CRUD "List" sequence name imported from the NoCode View. For example :
    
    <pre>MyProject.Hotel_BookingsRoomsList</pre>
    
    Where *MyProject* is the name of the project holding the Sequence and *Hotel_BookingsRoomsList* is the name of the Sequence in this project.
    
    
    
↓Search [ngx.components.UICompVariable-1682931994842]: 
  comment: |
    Will only return data that matches this search whatever the column is 
    
↓Filters [ngx.components.UICompVariable-1682960960466]: 
  comment: |
    'An JSON object containing the filter to apply to a BaseRow filtered view where each filter is the exact name of the filter variable attached to a filtered list sequence :
    
    <pre>
    {
    	filter&lt;And/Or&gt;&lt;Column Name 1&gt;&lt;Op&gt;: &lt;filter to apply N° 1&gt;,
    	filter&lt;And/Or&gt;&lt;Column Name 2&gt;&lt;Op&gt;: &lt;filter to apply N° 2&gt;
    }
    </pre>
    
    for example for Sequence GTFSPlacesSmallAirportsList :
    
    NB: Be sure to use simple quotes in your JSON structure for strings
    
    <pre>
    
    {
    	filterAndTypeContains: ''small_airport'',
    	filterAndIso_countryEqual: ''FR''
    }
    </pre>
    
    
    Will fill the grid with all records where column *Type* *Contains* to *small_airports* and column *Type* *Contains* to *Iso_countryEqual* equals *FR*. Filter names will be imported from the No Code Database view.
    
    
    
    '
↓paginationPageSize [ngx.components.UICompVariable-1683005576432]: 
  comment: 'integer: 10 by default'
  value: 10
↓rowSelection [ngx.components.UICompVariable-1683005576435]: 
  comment: 'string: ''single'' (default) or ''multiple'''
  value: '''single'''
↓rowDeselection [ngx.components.UICompVariable-1683005576438]: 
  comment: 'boolean: true (default) or false'
  value: true
↓defaultColDef [ngx.components.UICompVariable-1683005576441]: 
  comment: 'default is {hide: false, editable: true, sortable: true, resizable: true, filter: true, checkboxSelection: false, singleClickEdit: false}'
  value: '{hide: false, editable: true, sortable: true, resizable: true, filter: true, checkboxSelection: false, singleClickEdit: false}'
↓width [ngx.components.UICompVariable-1683005576444]: 
  comment: width value in % or px
  value: '''100%'''
↓height [ngx.components.UICompVariable-1683005576447]: 
  comment: height is 'auto' or value in % or px
  value: '''auto'''
↓class [ngx.components.UICompVariable-1683005576450]: 
  comment: |
    'One of the themes provided here :
    
    https://www.ag-grid.com/javascript-grid-themes-provided/
    
    Also be shure to add the theme in the Theme object as :
    
    @import "../../node_modules/ag-grid-community/dist/styles/ag-theme-balham-dark/sass/ag-theme-balham-dark.scss";
    
    
    
    '
  value: '''ag-theme-balham'''
↓id [ngx.components.UICompVariable-1683005576453]: 
  comment: An Optional ID
↓suppressCellSelection [ngx.components.UICompVariable-1683005576456]: 
  value: false
↓suppressRowClickSelection [ngx.components.UICompVariable-1683005576459]: 
  value: false
↓overlayLoadingTemplate [ngx.components.UICompVariable-1683005576462]: 
↓overlayNoRowsTemplate [ngx.components.UICompVariable-1683005576465]: 
↓rowHeight [ngx.components.UICompVariable-1683005576468]: 
  comment: Height of the row in pixels as a string
  value: '''25'''
↓wrapperClass [ngx.components.UICompVariable-1683005576471]: 
  comment: Height of the row in pixels as a string
↓autoSizeColumns [ngx.components.UICompVariable-1683005576474]: 
  value: true
↓accessibility [ngx.components.UICompVariable-1683005576477]: 
  comment: 'boolean: true (default) or false'
  value: false
↓ariaLabel [ngx.components.UICompVariable-1683005576480]: 