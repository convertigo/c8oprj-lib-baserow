↑isRoot: true
comment: My First Page as root page
preloadPriority: high
scriptContent: 
  - xmlizable: 
    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
    - com.twinsoft.convertigo.beans.common.FormatedContent: 
      →: |
        /*Begin_c8o_PageImport*/
        /*End_c8o_PageImport*/
        /*Begin_c8o_PageDeclaration*/
        	/*End_c8o_PageDeclaration*/
        /*Begin_c8o_PageConstructor*/
        		window["p"] = this;
        		/*End_c8o_PageConstructor*/
        /*Begin_c8o_PageFunction*/
        	addInSelectedColumn(colName) {
        		this.local.selectedColumns[colName] = false
        	}
        	
        	/**
        	 * Function to get the application ID from a table ID
        	 * 
        	 * Application is in of this structure :
        	 * 
        	 * [
        	 * 	{
        	 * 		"id":85,"name":"Entreprise de pedro","order":1,"type":"database","group":{"id":80,"name":"Rhenus Scan Tracking"},"workspace":{"id":80,"name":"Rhenus Scan Tracking"},
        	 * 	 	"tables":[
        	 * 			{"id":414,"name":"Clients","order":1,"database_id":85},
        	 * 			{"id":415,"name":"Projets","order":2,"database_id":85}]
        	 *  },
        	 * 	{
        	 * 		"id":86,"name":"Tracking","order":2,"type":"database","group":{"id":80,"name":"Rhenus Scan Tracking"},"workspace":{"id":80,"name":"Rhenus Scan Tracking"},
        	 * 		"tables":[
        	 * 			{"id":416,"name":"tracking","order":1,"database_id":86},
        	 * 			{"id":417,"name":"transporteur","order":2,"database_id":86},
        	 *           ...
        	 * 	    ]
        	 *  },
        	 *  ...
        	 * ]	 
        	 */
        	getApplicationIDFromTableId(tableId) {
        		let application = this.listen(['lib_BaseRow.forms_ApplicationsList'])?.array
        		if (application) {
        			for (let app of application) {
        				for (let table of app.tables) {
        					if (table.id == tableId) {
        						return app.id
        					}
        				}
        			}
        		}
        		return 0;
        	}
        	
        	async callParentFunction(call, ...args) {
        		return await new Promise((resolve, reject) => {
        			if (window.parent) {
        				const ts = new Date().getTime();
        				var handler;
        				window.addEventListener('message', handler = (event) => {
        					if (event.data.ts != ts || event.data.call != call) {
        						return;
        					}
        					window.removeEventListener('message', handler);
        					resolve(event.data.result);
        				});
        				setTimeout(() => {
        					window.removeEventListener('message', handler);
        					reject(new Error('Parent call timed out'));
        				}, 5000);
        				window.parent.postMessage({ts, call, args}, '*');
        			} else {
        				resolve();
        			}
        		});
        	}
        	/*End_c8o_PageFunction*/
        
segment: BrowseTables/:target/:type
title: First page
↓Header [ngx.components.UIDynamicElement-1491634212350]: 
  beanData: '{"ionBean":"Header"}'
  comment: Page header
  tagName: ion-header
  ↓ToolBar [ngx.components.UIDynamicElement-1491634231108]: 
    beanData: '{"ionBean":"ToolBar"}'
    tagName: ion-toolbar
    ↓BarTitle [ngx.components.UIDynamicElement-1491634265317]: 
      beanData: '{"ionBean":"BarTitle"}'
      tagName: ion-title
      ↓Grid [ngx.components.UIDynamicElement-1667717249971]: 
        beanData: '{"ionBean":"Grid","Height":"plain:100%"}'
        isEnabled: false
        tagName: ion-grid
        ↓GridRow [ngx.components.UIDynamicElement-1667717249973]: 
          beanData: '{"ionBean":"GridRow"}'
          tagName: ion-row
          ↓GridCol [ngx.components.UIDynamicElement-1667717249975]: 
            beanData: '{"ionBean":"GridCol"}'
            tagName: ion-col
            ↓Image [ngx.components.UIDynamicElement-1667716824139]: 
              beanData: |
                '{
                 "ionBean": "Image",
                 "url": "source:{\"filter\":\"Asset\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"asset\":\"''assets\\\/formssource_GetTableData.svg''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                 "height": "plain:50px"
                }'
              selfClose: true
              tagName: img
          ↓GridCol1 [ngx.components.UIDynamicElement-1667717249981]: 
            beanData: '{"ionBean":"GridCol","FlexAlignement":"plain:ion-align-self-center"}'
            tagName: ion-col
            ↓Text [ngx.components.UIText-1491634275121]: 
              i18n: true
              textValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:Select the Baserow database and table you want to get data from
      ↓FontStyle [ngx.components.UIFontStyle-1678903087208]: 
        fontFamily: Saira
        ruleTargets: class1491634265317
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                'font-family: Saira;
                '
      ↓Style [ngx.components.UIStyle-1678903250824]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                '/**
                 * Custom properties (sometimes referred to as CSS variables or cascading variables)
                 * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                 * They are set using custom property notation, e.g.: --main-color: black;
                 * and are accessed using the var() function, e.g.: color: var(--main-color);
                 * You can find below your component''s properties you can customize within the page.
                 * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                 * For more informations see https://ionicframework.com/docs/theming.
                **/
                //--color	//Text color of the title
                padding: 0 16px ;
                '
      ↓Div [ngx.components.UIDynamicElement-1678903341750]: 
        beanData: '{"ionBean":"DivTag"}'
        tagName: div
        ↓Style [ngx.components.UIStyle-1678903346460]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  '	display:flex;
                  	align-items: center;
                  '
        ↓Image [ngx.components.UIDynamicElement-1678903206510]: 
          beanData: |
            '{
             "ionBean": "Image",
             "url": "source:{\"filter\":\"Asset\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"asset\":\"''assets\\\/formssource_GetTableData.svg''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
             "height": "plain:50px"
            }'
          selfClose: true
          tagName: img
          ↓Style [ngx.components.UIStyle-1678903434259]: 
            styleContent: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    	padding-right:16px;
                    
        ↓Div1 [ngx.components.UIDynamicElement-1678903413658]: 
          beanData: '{"ionBean":"DivTag"}'
          tagName: div
          ↓H1 [ngx.components.UIDynamicElement-1678903366458]: 
            beanData: '{"ionBean":"Heading1"}'
            tagName: h1
            ↓Text [ngx.components.UIText-1678903203559]: 
              i18n: true
              textValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:Baserow connector
            ↓Style [ngx.components.UIStyle-1678903481774]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      'word-wrap: break-word;  
                      '
  ↓class [ngx.components.UIAttribute-1679061261733]: 
    attrName: class
    attrValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: plain:ion-no-border
↓Content [ngx.components.UIDynamicElement-1489674805352]: 
  beanData: '{"ionBean":"Content","Padding":"plain:ion-no-padding"}'
  comment: Page content
  tagName: ion-content
  ↓Grid [ngx.components.UIDynamicElement-1667635898879]: 
    beanData: '{"ionBean":"Grid","Height":"plain:100%"}'
    tagName: ion-grid
    ↓IfEditorNotOwner [ngx.components.UIControlDirective-1729527047601]: 
      directiveName: If
      directiveSource: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: source:{"filter":"Local","project":"lib_BaseRow","input":"","model":{"data":[{"localObject":"local"}],"path":"?.editorNotOwner","prefix":"","suffix":"","custom":"","useCustom":false}}
      ↓GridRow [ngx.components.UIDynamicElement-1729526402377]: 
        beanData: '{"ionBean":"GridRow","Height":"plain"}'
        tagName: ion-row
        ↓GridCol [ngx.components.UIDynamicElement-1729526402366]: 
          beanData: '{"ionBean":"GridCol"}'
          tagName: ion-col
          ↓Label [ngx.components.UIDynamicElement-1729526402368]: 
            beanData: '{"ionBean":"Label","IonColor":"plain:danger"}'
            tagName: ion-label
            ↓Text [ngx.components.UIText-1729526402370]: 
              i18n: true
              textValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:You aren't the owner of this source. If you validate settings you will become the new owner.
    ↓GridRow [ngx.components.UIDynamicElement-1667635898881]: 
      beanData: '{"ionBean":"GridRow"}'
      tagName: ion-row
      ↓GridColDatabase [ngx.components.UIDynamicElement-1667635898883]: 
        beanData: '{"ionBean":"GridCol","Size":"script:local.show ? ''4'' : ''12''"}'
        tagName: ion-col
        ↓CardContainer [ngx.components.UIDynamicElement-1667636488216]: 
          beanData: '{"ionBean":"Card"}'
          tagName: ion-card
          ↓CardHeader [ngx.components.UIDynamicElement-1667636488220]: 
            beanData: '{"ionBean":"CardHeader"}'
            tagName: ion-card-header
            ↓Div [ngx.components.UIDynamicElement-1678904595844]: 
              beanData: '{"ionBean":"DivTag"}'
              tagName: div
              ↓Style [ngx.components.UIStyle-1678904044802]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        '	border-bottom: 1px solid var(--ion-color-dark);
                        	padding:16px;
                        '
              ↓CardTitle [ngx.components.UIDynamicElement-1667636488222]: 
                beanData: '{"ionBean":"CardTitle"}'
                identifier: leftTitle
                tagName: ion-card-title
                ↓TextItem [ngx.components.UIDynamicElement-1667636488224]: 
                  beanData: '{"ionBean":"TextItem"}'
                  tagName: ion-text
                  ↓Text [ngx.components.UIText-1667636488226]: 
                    i18n: true
                    textValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:Select a database and table
                  ↓FontStyle [ngx.components.UIFontStyle-1678903775572]: 
                    fontFamily: Saira
                    fontSize: 24px
                    fontStyle: normal
                    ruleTargets: class1667636488224
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            'font-family: Saira;
                            font-size: 24px;
                            font-style: normal;
                            '
                ↓Style [ngx.components.UIStyle-1678903902352]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          	text-align:center;
                          
            ↓Style [ngx.components.UIStyle-1678904638217]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      '	padding: 0;
                      '
            ↓Div1 [ngx.components.UIDynamicElement-1678904688632]: 
              beanData: '{"ionBean":"DivTag"}'
              tagName: div
              ↓Style [ngx.components.UIStyle-1678904808912]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        'padding: 0 16px;
                        '
              ↓GenericItem [ngx.components.UIDynamicElement-1678904934871]: 
                beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
                tagName: ion-item
                ↓Icon [ngx.components.UIDynamicElement-1678904884808]: 
                  beanData: |
                    '{
                     "ionBean": "Icon",
                     "IconName": "plain:information-circle-outline",
                     "IconSlot": "plain:start"
                    }'
                  tagName: ion-icon
                ↓Label [ngx.components.UIDynamicElement-1678904934868]: 
                  beanData: '{"ionBean":"Label"}'
                  tagName: ion-label
                  ↓Paragraph [ngx.components.UIDynamicElement-1678904705989]: 
                    beanData: '{"ionBean":"Paragraph"}'
                    tagName: p
                    ↓some_text [ngx.components.UIText-1678904705988]: 
                      i18n: true
                      textValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:Please select among the following elements a database and a table
                  ↓Style [ngx.components.UIStyle-1678905088725]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            '/**
                             * Custom properties (sometimes referred to as CSS variables or cascading variables)
                             * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                             * They are set using custom property notation, e.g.: --main-color: black;
                             * and are accessed using the var() function, e.g.: color: var(--main-color);
                             * You can find below your component''s properties you can customize within the page.
                             * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                             * For more informations see https://ionicframework.com/docs/theming.
                            **/
                            //--color	//Color of the label
                            '
                  ↓FontStyle [ngx.components.UIFontStyle-1678905017337]: 
                    fontStyle: italic
                    ruleTargets: class1678904934868
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            'font-style: italic;
                            '
                  ↓class [ngx.components.UIAttribute-1678905187663]: 
                    attrName: 
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:text-wrap
              ↓attr [ngx.components.UIAttribute-1679050506218]: 
                attrName: '[ngStyle]'
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: 'script:rightDiv && rightDiv.nativeElement ? {''min-height'': rightDiv.nativeElement.clientHeight + ''px''} : {}'
          ↓CardContent [ngx.components.UIDynamicElement-1667636488234]: 
            beanData: '{"ionBean":"CardContent"}'
            tagName: ion-card-content
            ↓AccordionGroup [ngx.components.UIDynamicElement-1667634603471]: 
              beanData: '{"ionBean":"AccordionGroup","Value":"plain:"}'
              tagName: ion-accordion-group
              ↓Directive [ngx.components.UIControlDirective-1667635335398]: 
                directiveIndexName: dbIdx
                directiveItemName: database
                directiveSource: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: source:{"filter":"Sequence","project":"lib_BaseRow","input":"","model":{"data":[{"sequence":"lib_BaseRow.formscommon_ApplicationsList","marker":""}],"path":"","prefix":"","suffix":"?.array","custom":"","useCustom":false}}
                ↓Accordion [ngx.components.UIDynamicElement-1667634603474]: 
                  beanData: '{"ionBean":"Accordion","Value":"source:{\"filter\":\"Iteration\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"priority\":1667635335398}],\"path\":\"?.id\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}"}'
                  tagName: ion-accordion
                  ↓GenericItem [ngx.components.UIDynamicElement-1667634603477]: 
                    beanData: '{"ionBean":"GenericItem","IonSlot":"plain:header"}'
                    tagName: ion-item
                    ↓Icon [ngx.components.UIDynamicElement-1667634629966]: 
                      beanData: |
                        '{
                         "ionBean": "Icon",
                         "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''server''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                         "IconSlot": "plain:start"
                        }'
                      tagName: ion-icon
                    ↓Label [ngx.components.UIDynamicElement-1667634603480]: 
                      beanData: '{"ionBean":"Label"}'
                      tagName: ion-label
                      ↓Text [ngx.components.UIText-1667634603483]: 
                        textValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: source:{"filter":"Iteration","project":"lib_BaseRow","input":"","model":{"data":[{"priority":1667635335398}],"path":"?.name","prefix":"","suffix":"","custom":"","useCustom":false}}
                  ↓ListContainer [ngx.components.UIDynamicElement-1667634603486]: 
                    beanData: '{"ionBean":"List","IonSlot":"plain:content"}'
                    tagName: ion-list
                    ↓Directive [ngx.components.UIControlDirective-1667635423710]: 
                      directiveItemName: table
                      directiveSource: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: source:{"filter":"Iteration","project":"lib_BaseRow","input":"","model":{"data":[{"priority":1667635335398}],"path":"?.tables","prefix":"","suffix":"","custom":"","useCustom":false}}
                      ↓ListItem [ngx.components.UIDynamicElement-1667634603489]: 
                        beanData: '{"ionBean":"ListItem"}'
                        tagName: ion-item
                        ↓Icon [ngx.components.UIDynamicElement-1667634815038]: 
                          beanData: |
                            '{
                             "ionBean": "Icon",
                             "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''menu-outline''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                             "IconSlot": "plain:start"
                            }'
                          tagName: ion-icon
                        ↓Label [ngx.components.UIDynamicElement-1667634603492]: 
                          beanData: '{"ionBean":"Label"}'
                          tagName: ion-label
                          ↓Text [ngx.components.UIText-1667634603495]: 
                            textValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: source:{"filter":"Iteration","project":"lib_BaseRow","input":"","model":{"data":[{"priority":1667635423710},{"priority":1667635335398}],"path":"?.name","prefix":"","suffix":"","custom":"","useCustom":false}}
                        ↓Button [ngx.components.UIDynamicElement-1667635831783]: 
                          beanData: '{"ionBean":"Button"}'
                          tagName: ion-button
                          ↓Label [ngx.components.UIDynamicElement-1667635831785]: 
                            beanData: '{"ionBean":"Label"}'
                            tagName: ion-label
                            ↓Text [ngx.components.UIText-1667635831787]: 
                              i18n: true
                              textValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: plain:Select
                          ↓Event [ngx.components.UIControlEvent-1667635831789]: 
                            ↓SetLocal2 [ngx.components.UIDynamicAction-1703093264555]: 
                              beanData: |
                                '{
                                 "ionBean": "SetLocalAction",
                                 "Property": "plain:groupName",
                                 "Value": "source:{\"filter\":\"Iteration\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"priority\":1667635335398}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"?.workspace?.name\",\"custom\":\"\",\"useCustom\":false}}"
                                }'
                              tagName: SetLocal
                              ↓SetLocal1 [ngx.components.UIDynamicAction-1679052845680]: 
                                beanData: |
                                  '{
                                   "ionBean": "SetLocalAction",
                                   "Property": "plain:baseName",
                                   "Value": "source:{\"filter\":\"Iteration\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"priority\":1667635335398}],\"path\":\"?.name\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}"
                                  }'
                                tagName: SetLocal
                                ↓SetLocal [ngx.components.UIDynamicAction-1679052820735]: 
                                  beanData: |
                                    '{
                                     "ionBean": "SetLocalAction",
                                     "Property": "plain:tableName",
                                     "Value": "source:{\"filter\":\"Iteration\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"priority\":1667635423710},{\"priority\":1667635335398}],\"path\":\"?.name\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}"
                                    }'
                                  tagName: SetLocal
                                  ↓PrepareFormsConfig [ngx.components.UICustomAsyncAction-1729524018156]: 
                                    actionValue: 
                                      - xmlizable: 
                                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                          →: |
                                            '		return JSON.stringify({
                                            			table_id: `${page.local.groupName}~>${page.local.baseName}~>${page.local.tableName}`,
                                            			editor: await page.callParentFunction("getAuthenticatedUser"),
                                            		});
                                            '
                                    ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1727686505278]: 
                                      beanData: '{"ionBean":"InvokeAction"}'
                                      stack: lib_BaseRow.Application.NgxApp.DisplayTableColumns
                                      ↓forms_config [ngx.components.UIControlVariable-1729523715989]: 
                                        varValue: 
                                          - xmlizable: 
                                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                            - MobileSmartSourceType: source:{"filter":"Action","project":"lib_BaseRow","input":"","model":{"data":[{"priority":1729524018156,"rootEvent":false,"pageLocals":false},{"priority":1667635831789,"rootEvent":true,"pageLocals":false},{"priority":1703093264555,"rootEvent":false,"pageLocals":false},{"priority":1679052845680,"rootEvent":false,"pageLocals":false},{"priority":1679052820735,"rootEvent":false,"pageLocals":false}],"path":"?.out","prefix":"","suffix":"","custom":"","useCustom":false}}
              ↓Attr [ngx.components.UIAttribute-1727281999794]: 
                attrName: '[value]'
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: source:{"filter":"Local","project":"lib_BaseRow","input":"","model":{"data":[{"localObject":"local"}],"path":"?.table_id_int","prefix":"getApplicationIDFromTableId(","suffix":")","custom":"","useCustom":false}}
      ↓tag [ngx.components.UIControlDirective-1679049305245]: 
        directiveName: If
        directiveSource: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:local.show
        ↓Directive [ngx.components.UIControlDirective-1730216531076]: 
          directiveName: Switch
          directiveSource: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:local.type
          ↓Directive [ngx.components.UIControlDirective-1730216535510]: 
            directiveExpression: '''table'''
            directiveName: SwitchCase
            ↓GridColTable [ngx.components.UIDynamicElement-1667635898889]: 
              beanData: '{"ionBean":"GridCol","Size":"plain:8"}'
              tagName: ion-col
              ↓CardContainer [ngx.components.UIDynamicElement-1667636569592]: 
                beanData: '{"ionBean":"Card"}'
                tagName: ion-card
                ↓CardHeader [ngx.components.UIDynamicElement-1678905330193]: 
                  beanData: '{"ionBean":"CardHeader"}'
                  tagName: ion-card-header
                  ↓Div [ngx.components.UIDynamicElement-1678905330196]: 
                    beanData: '{"ionBean":"DivTag"}'
                    tagName: div
                    ↓Style [ngx.components.UIStyle-1678905330199]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '	border-bottom: 1px solid var(--ion-color-dark);
                              	padding:16px;
                              '
                    ↓CardTitle [ngx.components.UIDynamicElement-1678905330202]: 
                      beanData: '{"ionBean":"CardTitle"}'
                      tagName: ion-card-title
                      ↓TextItem [ngx.components.UIDynamicElement-1678905330205]: 
                        beanData: '{"ionBean":"TextItem"}'
                        tagName: ion-text
                        ↓Text [ngx.components.UIText-1678905330208]: 
                          i18n: true
                          textValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: plain:Select Columns
                        ↓FontStyle [ngx.components.UIFontStyle-1678905330211]: 
                          fontFamily: Saira
                          fontSize: 24px
                          fontStyle: normal
                          ruleTargets: class1678905330205
                          styleContent: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                →: |
                                  'font-family: Saira;
                                  font-size: 24px;
                                  font-style: normal;
                                  '
                        ↓Break [ngx.components.UIDynamicElement-1727876722198]: 
                          beanData: '{"ionBean":"Break"}'
                          selfClose: true
                          tagName: br
                        ↓Text1 [ngx.components.UIText-1727876532403]: 
                          textValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: source:{"filter":"Local","project":"lib_BaseRow","input":"","model":{"data":[{"localObject":"local"}],"path":"?.groupName","prefix":"","suffix":"","custom":"","useCustom":false}}
                        ↓Text4 [ngx.components.UIText-1727876611296]: 
                          textValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: plain:~>
                        ↓Text2 [ngx.components.UIText-1727876579282]: 
                          textValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: source:{"filter":"Local","project":"lib_BaseRow","input":"","model":{"data":[{"localObject":"local"}],"path":"?.baseName","prefix":"","suffix":"","custom":"","useCustom":false}}
                        ↓Text5 [ngx.components.UIText-1727876640053]: 
                          textValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: plain:~>
                        ↓Text3 [ngx.components.UIText-1727876584955]: 
                          textValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: source:{"filter":"Local","project":"lib_BaseRow","input":"","model":{"data":[{"localObject":"local"}],"path":"?.tableName","prefix":"","suffix":"","custom":"","useCustom":false}}
                      ↓Style [ngx.components.UIStyle-1678905330214]: 
                        styleContent: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                '	text-align:center;
                                	display: flex;
                                    justify-content: center;
                                    align-items: center;
                                '
                      ↓attr [ngx.components.UIAttribute-1679050048833]: 
                        attrName: '[ngStyle]'
                        attrValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: 'script:{''min-height'': leftTitle.el.clientHeight + ''px''}'
                  ↓Style [ngx.components.UIStyle-1678905330217]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            '	padding: 0;
                            '
                  ↓Div1 [ngx.components.UIDynamicElement-1678905330220]: 
                    beanData: '{"ionBean":"DivTag"}'
                    identifier: rightDiv
                    tagName: div
                    ↓Style [ngx.components.UIStyle-1678905330223]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              'padding: 0 16px;
                              '
                    ↓GenericItem [ngx.components.UIDynamicElement-1678905330226]: 
                      beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
                      tagName: ion-item
                      ↓Icon [ngx.components.UIDynamicElement-1678905330229]: 
                        beanData: |
                          '{
                           "ionBean": "Icon",
                           "IconName": "plain:information-circle-outline",
                           "IconSlot": "plain:start"
                          }'
                        tagName: ion-icon
                      ↓Label [ngx.components.UIDynamicElement-1678905330232]: 
                        beanData: '{"ionBean":"Label"}'
                        tagName: ion-label
                        ↓Paragraph [ngx.components.UIDynamicElement-1678905330235]: 
                          beanData: '{"ionBean":"Paragraph"}'
                          tagName: p
                          ↓some_text [ngx.components.UIText-1678905330238]: 
                            i18n: true
                            textValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: 'script:(this.local.txt_i18n != null ? this.local.txt_i18n : ''notice2'') | translate'
                        ↓Style [ngx.components.UIStyle-1678905330241]: 
                          styleContent: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                →: |
                                  '/**
                                   * Custom properties (sometimes referred to as CSS variables or cascading variables)
                                   * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                                   * They are set using custom property notation, e.g.: --main-color: black;
                                   * and are accessed using the var() function, e.g.: color: var(--main-color);
                                   * You can find below your component''s properties you can customize within the page.
                                   * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                                   * For more informations see https://ionicframework.com/docs/theming.
                                  **/
                                  //--color	//Color of the label
                                  '
                        ↓FontStyle [ngx.components.UIFontStyle-1678905330244]: 
                          fontStyle: italic
                          ruleTargets: class1678905330232
                          styleContent: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                →: |
                                  'font-style: italic;
                                  '
                        ↓class [ngx.components.UIAttribute-1678905330247]: 
                          attrName: 
                          attrValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: plain:text-wrap
                ↓CardContent [ngx.components.UIDynamicElement-1667636569610]: 
                  beanData: '{"ionBean":"CardContent"}'
                  tagName: ion-card-content
                  ↓ListItem [ngx.components.UIDynamicElement-1679050853595]: 
                    beanData: '{"ionBean":"ListItem"}'
                    tagName: ion-item
                    ↓Icon [ngx.components.UIDynamicElement-1679050878203]: 
                      beanData: |
                        '{
                         "ionBean": "Icon",
                         "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''browsers-outline''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                         "IconSlot": "plain:start"
                        }'
                      tagName: ion-icon
                    ↓Label1 [ngx.components.UIDynamicElement-1679050853667]: 
                      beanData: '{"ionBean":"Label"}'
                      tagName: ion-label
                      ↓some_text [ngx.components.UIText-1679051057075]: 
                        textValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: 'plain: '
                    ↓Grid [ngx.components.UIDynamicElement-1679050853676]: 
                      beanData: '{"ionBean":"Grid"}'
                      tagName: ion-grid
                      ↓GridRow [ngx.components.UIDynamicElement-1679050853679]: 
                        beanData: '{"ionBean":"GridRow","Height":"plain"}'
                        tagName: ion-row
                        ↓GridCol [ngx.components.UIDynamicElement-1679050853682]: 
                          beanData: '{"ionBean":"GridCol"}'
                          tagName: ion-col
                          ↓Attr [ngx.components.UIAttribute-1679050853691]: 
                            attrName: 
                            attrValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: plain:no-padding
                          ↓GenericItem [ngx.components.UIDynamicElement-1680690180016]: 
                            beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
                            tagName: ion-item
                            ↓CheckBox [ngx.components.UIDynamicElement-1680690280429]: 
                              beanData: |
                                '{
                                 "ionBean": "CheckBox",
                                 "ControlName": "plain:name1667636420064",
                                 "Checked": "plain:true"
                                }'
                              tagName: ion-checkbox
                              ↓Style [ngx.components.UIStyle-1680690280432]: 
                                styleContent: 
                                  - xmlizable: 
                                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                      →: |
                                        '/**
                                         * Custom properties (sometimes referred to as CSS variables or cascading variables)
                                         * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                                         * They are set using custom property notation, e.g.: --main-color: black;
                                         * and are accessed using the var() function, e.g.: color: var(--main-color);
                                         * You can find below your component''s properties you can customize within the page.
                                         * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                                         * For more informations see https://ionicframework.com/docs/theming.
                                        **/
                                        //--background	//Background of the checkbox icon
                                        //--background-checked	//Background of the checkbox icon when checked
                                        //--border-color	//Border color of the checkbox icon
                                        //--border-color-checked	//Border color of the checkbox icon when checked
                                        //--border-radius	//Border radius of the checkbox icon
                                        //--border-style	//Border style of the checkbox icon
                                        //--border-width	//Border width of the checkbox icon
                                        //--checkmark-color	//Color of the checkbox checkmark when checked
                                        //--checkmark-width	//Stroke width of the checkbox checkmark
                                        //--size	//Size of the checkbox icon
                                        //--transition	//Transition of the checkbox icon
                                        	margin-top: 2px;
                                        	margin-bottom: 2px;
                                        
                                        '
                              ↓slot [ngx.components.UIAttribute-1680690333159]: 
                                attrName: slot
                                attrValue: 
                                  - xmlizable: 
                                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                    - MobileSmartSourceType: plain:start
                              ↓attr [ngx.components.UIControlEvent-1680690434863]: 
                                attrName: (ionChange)
                                eventName: ionChange
                                ↓selectOrDeselectAll [ngx.components.UICustomAsyncAction-1680690455035]: 
                                  actionValue: 
                                    - xmlizable: 
                                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                        →: |
                                          		try {
                                          			for(let i in page.local.selectedColumns){
                                          				page.local.selectedColumns[i].selected = event.detail.checked;
                                          			}
                                          		} catch (e) {
                                          		
                                          		} finally {
                                          			return;
                                          		}
                                          
                            ↓Label [ngx.components.UIDynamicElement-1680690180013]: 
                              beanData: '{"ionBean":"Label"}'
                              tagName: ion-label
                              ↓Paragraph [ngx.components.UIDynamicElement-1679050912731]: 
                                beanData: '{"ionBean":"Paragraph"}'
                                tagName: p
                                ↓some_text [ngx.components.UIText-1679050912730]: 
                                  i18n: true
                                  textValue: 
                                    - xmlizable: 
                                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                      - MobileSmartSourceType: plain:Include
                                ↓Style [ngx.components.UIStyle-1680690239305]: 
                                  styleContent: 
                                    - xmlizable: 
                                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                        →: |
                                          	color:black;
                                          
                        ↓GridCol1 [ngx.components.UIDynamicElement-1679050853694]: 
                          beanData: '{"ionBean":"GridCol"}'
                          tagName: ion-col
                          ↓Attr [ngx.components.UIAttribute-1679050853703]: 
                            attrName: 
                            attrValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: plain:no-padding
                          ↓GenericItem [ngx.components.UIDynamicElement-1680690703828]: 
                            beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
                            tagName: ion-item
                            ↓Label [ngx.components.UIDynamicElement-1680690703846]: 
                              beanData: '{"ionBean":"Label"}'
                              tagName: ion-label
                              ↓Paragraph [ngx.components.UIDynamicElement-1680690703849]: 
                                beanData: '{"ionBean":"Paragraph"}'
                                tagName: p
                                ↓Style [ngx.components.UIStyle-1680690703855]: 
                                  styleContent: 
                                    - xmlizable: 
                                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                        →: |
                                          	color:black;
                                          
                                ↓some_text [ngx.components.UIText-1680690717362]: 
                                  i18n: true
                                  textValue: 
                                    - xmlizable: 
                                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                      - MobileSmartSourceType: plain:Hide
                        ↓Style [ngx.components.UIStyle-1726835565229]: 
                          styleContent: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                →: |
                                  '	margin-left: -20px;
                                  '
                  ↓ReorderGroup [ngx.components.UIDynamicElement-1667635999495]: 
                    beanData: '{"ionBean":"ReorderGroup"}'
                    tagName: ion-reorder-group
                    ↓Event [ngx.components.UIControlEvent-1667718984349]: 
                      attrName: (ionItemReorder)
                      eventName: ionItemReorder
                      ↓AckReorder [ngx.components.UICustomAction-1667719015174]: 
                        actionValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                '			page.c8o.log.debug(''[Reorder] Dragged from ''+ event.detail.from  +'' to : ''+ event.detail.to);
                                			
                                			let selectedCols = page.local.selectedColumns;
                                		  	const draggedItem = selectedCols[event.detail.from];
                                		  	
                                			// Reorder the array by moving the item from `from` to `to`
                                			selectedCols.splice(event.detail.from, 1); // Remove item from original position
                                			selectedCols.splice(event.detail.to, 0, draggedItem); // Insert item at new position
                                			
                                			page.local.selectedColumns = selectedCols;
                                			
                                			event.detail.complete();
                                			
                                			resolve(null);
                                '
                    ↓Directive [ngx.components.UIControlDirective-1667636016496]: 
                      directiveIndexName: idx
                      directiveItemName: column
                      directiveSource: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: source:{"filter":"Local","project":"lib_BaseRow","input":"","model":{"data":[{"localObject":"local"}],"path":"?.selectedColumns","prefix":"","suffix":"","custom":"","useCustom":false}}
                      ↓tag [ngx.components.UIControlDirective-1679050821406]: 
                        directiveName: If
                        directiveSource: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:idx == 0
                      ↓ListItem [ngx.components.UIDynamicElement-1667720693280]: 
                        beanData: '{"ionBean":"ListItem"}'
                        tagName: ion-item
                        ↓Directive [ngx.components.UIControlDirective-1667636777440]: 
                          directiveName: Switch
                          directiveSource: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: source:{"filter":"Iteration","project":"lib_BaseRow","input":"","model":{"data":[{"priority":1667636016496}],"path":"","prefix":"","suffix":"?.type","custom":"","useCustom":false}}
                          ↓Directive [ngx.components.UIControlDirective-1667636860165]: 
                            directiveName: SwitchCase
                            directiveSource: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: script:'text'
                            ↓Icon [ngx.components.UIDynamicElement-1667636267439]: 
                              beanData: |
                                '{
                                 "ionBean": "Icon",
                                 "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''pencil''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                                 "IconSlot": "plain:start"
                                }'
                              tagName: ion-icon
                          ↓Directive1 [ngx.components.UIControlDirective-1667636991799]: 
                            directiveName: SwitchCase
                            directiveSource: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: script:'long_text'
                            ↓Icon [ngx.components.UIDynamicElement-1667636991802]: 
                              beanData: |
                                '{
                                 "ionBean": "Icon",
                                 "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''list-outline''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                                 "IconSlot": "plain:start"
                                }'
                              tagName: ion-icon
                          ↓Directive2 [ngx.components.UIControlDirective-1667636994537]: 
                            directiveName: SwitchCase
                            directiveSource: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: script:'formula'
                            ↓Icon [ngx.components.UIDynamicElement-1667636994540]: 
                              beanData: |
                                '{
                                 "ionBean": "Icon",
                                 "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''logo-electron''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                                 "IconSlot": "plain:start"
                                }'
                              tagName: ion-icon
                          ↓Directive3 [ngx.components.UIControlDirective-1667636996842]: 
                            directiveName: SwitchCase
                            directiveSource: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: script:'boolean'
                            ↓Icon [ngx.components.UIDynamicElement-1667636996845]: 
                              beanData: |
                                '{
                                 "ionBean": "Icon",
                                 "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''contrast''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                                 "IconSlot": "plain:start"
                                }'
                              tagName: ion-icon
                          ↓Directive4 [ngx.components.UIControlDirective-1667637000086]: 
                            directiveName: SwitchCase
                            directiveSource: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: script:'number'
                            ↓Icon [ngx.components.UIDynamicElement-1667637000089]: 
                              beanData: |
                                '{
                                 "ionBean": "Icon",
                                 "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''apps-outline''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                                 "IconSlot": "plain:start"
                                }'
                              tagName: ion-icon
                          ↓Directive5 [ngx.components.UIControlDirective-1667637005365]: 
                            directiveName: SwitchCase
                            directiveSource: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: script:'link_row'
                            ↓Icon [ngx.components.UIDynamicElement-1667637005368]: 
                              beanData: |
                                '{
                                 "ionBean": "Icon",
                                 "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''link-outline''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                                 "IconSlot": "plain:start"
                                }'
                              tagName: ion-icon
                          ↓Directive6 [ngx.components.UIControlDirective-1667637445029]: 
                            directiveName: SwitchCase
                            directiveSource: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: script:'lookup'
                            ↓Icon [ngx.components.UIDynamicElement-1667637445032]: 
                              beanData: |
                                '{
                                 "ionBean": "Icon",
                                 "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''telescope-outline''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                                 "IconSlot": "plain:start"
                                }'
                              tagName: ion-icon
                          ↓Directive8 [ngx.components.UIControlDirective-1667677332994]: 
                            directiveName: SwitchCase
                            directiveSource: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: script:'file'
                            ↓Icon [ngx.components.UIDynamicElement-1667677332997]: 
                              beanData: |
                                '{
                                 "ionBean": "Icon",
                                 "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''document-text-outline''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                                 "IconSlot": "plain:start"
                                }'
                              tagName: ion-icon
                          ↓Directive9 [ngx.components.UIControlDirective-1667717760118]: 
                            directiveName: SwitchCase
                            directiveSource: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: script:'date'
                            ↓Icon [ngx.components.UIDynamicElement-1667717760121]: 
                              beanData: |
                                '{
                                 "ionBean": "Icon",
                                 "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''calendar-outline''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                                 "IconSlot": "plain:start"
                                }'
                              tagName: ion-icon
                          ↓Directive10 [ngx.components.UIControlDirective-1667717767496]: 
                            directiveName: SwitchCase
                            directiveSource: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: script:'multiple_select'
                            ↓Icon [ngx.components.UIDynamicElement-1667717767499]: 
                              beanData: |
                                '{
                                 "ionBean": "Icon",
                                 "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''reorder-four-outline''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                                 "IconSlot": "plain:start"
                                }'
                              tagName: ion-icon
                          ↓Directive7 [ngx.components.UIControlDirective-1667637596326]: 
                            directiveName: SwitchDefault
                            ↓Icon [ngx.components.UIDynamicElement-1667637596329]: 
                              beanData: |
                                '{
                                 "ionBean": "Icon",
                                 "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''ban''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                                 "IconSlot": "plain:start"
                                }'
                              tagName: ion-icon
                        ↓Label1 [ngx.components.UIDynamicElement-1667636254218]: 
                          beanData: '{"ionBean":"Label"}'
                          tagName: ion-label
                          ↓Text [ngx.components.UIText-1667636254220]: 
                            textValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: source:{"filter":"Iteration","project":"lib_BaseRow","input":"","model":{"data":[{"priority":1667636016496}],"path":"","prefix":"","suffix":"?.name","custom":"","useCustom":false}}
                          ↓Text1 [ngx.components.UIText-1667676947047]: 
                            isEnabled: false
                            textValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: plain:'test'
                        ↓Grid [ngx.components.UIDynamicElement-1667763124847]: 
                          beanData: '{"ionBean":"Grid"}'
                          tagName: ion-grid
                          ↓GridRow [ngx.components.UIDynamicElement-1667763124849]: 
                            beanData: '{"ionBean":"GridRow","Height":"plain"}'
                            tagName: ion-row
                            ↓GridCol [ngx.components.UIDynamicElement-1667763124851]: 
                              beanData: '{"ionBean":"GridCol"}'
                              tagName: ion-col
                              ↓Attr [ngx.components.UIAttribute-1667807803332]: 
                                attrName: 
                                attrValue: 
                                  - xmlizable: 
                                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                    - MobileSmartSourceType: plain:no-padding
                              ↓GenericItem [ngx.components.UIDynamicElement-1680690380407]: 
                                beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
                                tagName: ion-item
                                ↓CheckBox [ngx.components.UIDynamicElement-1667636420064]: 
                                  beanData: |
                                    '{
                                     "ionBean": "CheckBox",
                                     "ControlName": "plain:name1667636420064",
                                     "DoubleBinding": "script:local.selectedColumns[idx].selected"
                                    }'
                                  tagName: ion-checkbox
                                  ↓Style [ngx.components.UIStyle-1667808051108]: 
                                    styleContent: 
                                      - xmlizable: 
                                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                          →: |
                                            '/**
                                             * Custom properties (sometimes referred to as CSS variables or cascading variables)
                                             * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                                             * They are set using custom property notation, e.g.: --main-color: black;
                                             * and are accessed using the var() function, e.g.: color: var(--main-color);
                                             * You can find below your component''s properties you can customize within the page.
                                             * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                                             * For more informations see https://ionicframework.com/docs/theming.
                                            **/
                                            //--background	//Background of the checkbox icon
                                            //--background-checked	//Background of the checkbox icon when checked
                                            //--border-color	//Border color of the checkbox icon
                                            //--border-color-checked	//Border color of the checkbox icon when checked
                                            //--border-radius	//Border radius of the checkbox icon
                                            //--border-style	//Border style of the checkbox icon
                                            //--border-width	//Border width of the checkbox icon
                                            //--checkmark-color	//Color of the checkbox checkmark when checked
                                            //--checkmark-width	//Stroke width of the checkbox checkmark
                                            //--size	//Size of the checkbox icon
                                            //--transition	//Transition of the checkbox icon
                                            	margin-top: 2px;
                                            	margin-bottom: 2px;
                                            
                                            '
                                  ↓slot [ngx.components.UIAttribute-1680690415681]: 
                                    attrName: slot
                                    attrValue: 
                                      - xmlizable: 
                                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                        - MobileSmartSourceType: plain:start
                            ↓GridCol1 [ngx.components.UIDynamicElement-1667763124857]: 
                              beanData: '{"ionBean":"GridCol"}'
                              tagName: ion-col
                              ↓Attr [ngx.components.UIAttribute-1667807886385]: 
                                attrName: 
                                attrValue: 
                                  - xmlizable: 
                                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                    - MobileSmartSourceType: plain:no-padding
                              ↓GenericItem [ngx.components.UIDynamicElement-1680690723497]: 
                                beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
                                tagName: ion-item
                                ↓CheckBox1 [ngx.components.UIDynamicElement-1667756056274]: 
                                  beanData: |
                                    '{
                                     "ionBean": "CheckBox",
                                     "ControlName": "plain:name1667636420064",
                                     "DoubleBinding": "script:local.selectedColumns[idx].hidden",
                                     "Disabled": "script:! local?.selectedColumns[idx]?.selected"
                                    }'
                                  tagName: ion-checkbox
                                  ↓Style [ngx.components.UIStyle-1667808006243]: 
                                    styleContent: 
                                      - xmlizable: 
                                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                          →: |
                                            '/**
                                             * Custom properties (sometimes referred to as CSS variables or cascading variables)
                                             * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                                             * They are set using custom property notation, e.g.: --main-color: black;
                                             * and are accessed using the var() function, e.g.: color: var(--main-color);
                                             * You can find below your component''s properties you can customize within the page.
                                             * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                                             * For more informations see https://ionicframework.com/docs/theming.
                                            **/
                                            //--background	//Background of the checkbox icon
                                            //--background-checked	//Background of the checkbox icon when checked
                                            //--border-color	//Border color of the checkbox icon
                                            //--border-color-checked	//Border color of the checkbox icon when checked
                                            //--border-radius	//Border radius of the checkbox icon
                                            //--border-style	//Border style of the checkbox icon
                                            //--border-width	//Border width of the checkbox icon
                                            //--checkmark-color	//Color of the checkbox checkmark when checked
                                            //--checkmark-width	//Stroke width of the checkbox checkmark
                                            //--size	//Size of the checkbox icon
                                            //--transition	//Transition of the checkbox icon
                                            	margin-top: 2px;
                                            	margin-bottom: 2px;
                                            
                                            '
                                  ↓slot [ngx.components.UIAttribute-1680690739288]: 
                                    attrName: slot
                                    attrValue: 
                                      - xmlizable: 
                                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                        - MobileSmartSourceType: plain:start
                        ↓Reorder [ngx.components.UIDynamicElement-1726834852306]: 
                          beanData: '{"ionBean":"Reorder"}'
                          tagName: ion-reorder
          ↓Directive1 [ngx.components.UIControlDirective-1730216537948]: 
            directiveExpression: '''select'''
            directiveName: SwitchCase
            ↓GridColSelect [ngx.components.UIDynamicElement-1680694473932]: 
              beanData: '{"ionBean":"GridCol","Size":"plain:8"}'
              tagName: ion-col
              ↓CardContainer [ngx.components.UIDynamicElement-1680694473935]: 
                beanData: '{"ionBean":"Card"}'
                tagName: ion-card
                ↓CardHeader [ngx.components.UIDynamicElement-1680694473938]: 
                  beanData: '{"ionBean":"CardHeader"}'
                  tagName: ion-card-header
                  ↓Div [ngx.components.UIDynamicElement-1680694473941]: 
                    beanData: '{"ionBean":"DivTag"}'
                    tagName: div
                    ↓Style [ngx.components.UIStyle-1680694473944]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '	border-bottom: 1px solid var(--ion-color-dark);
                              	padding:16px;
                              '
                    ↓CardTitle [ngx.components.UIDynamicElement-1680694473947]: 
                      beanData: '{"ionBean":"CardTitle"}'
                      tagName: ion-card-title
                      ↓TextItem [ngx.components.UIDynamicElement-1680694473950]: 
                        beanData: '{"ionBean":"TextItem"}'
                        tagName: ion-text
                        ↓Text [ngx.components.UIText-1680694473953]: 
                          i18n: true
                          textValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: plain:Select Columns
                        ↓FontStyle [ngx.components.UIFontStyle-1680694473956]: 
                          fontFamily: Saira
                          fontSize: 24px
                          fontStyle: normal
                          ruleTargets: class1680694473950
                          styleContent: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                →: |
                                  'font-family: Saira;
                                  font-size: 24px;
                                  font-style: normal;
                                  '
                      ↓Style [ngx.components.UIStyle-1680694473959]: 
                        styleContent: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                '	text-align:center;
                                	display: flex;
                                    justify-content: center;
                                    align-items: center;
                                '
                      ↓attr [ngx.components.UIAttribute-1680694473962]: 
                        attrName: '[ngStyle]'
                        attrValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: 'script:{''min-height'': leftTitle.el.clientHeight + ''px''}'
                  ↓Style [ngx.components.UIStyle-1680694473965]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            '	padding: 0;
                            '
                  ↓Div1 [ngx.components.UIDynamicElement-1680694473968]: 
                    beanData: '{"ionBean":"DivTag"}'
                    identifier: rightDiv
                    tagName: div
                    ↓Style [ngx.components.UIStyle-1680694473971]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              'padding: 0 16px;
                              '
                    ↓GenericItem [ngx.components.UIDynamicElement-1680694473974]: 
                      beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
                      tagName: ion-item
                      ↓Icon [ngx.components.UIDynamicElement-1680694473977]: 
                        beanData: |
                          '{
                           "ionBean": "Icon",
                           "IconName": "plain:information-circle-outline",
                           "IconSlot": "plain:start"
                          }'
                        tagName: ion-icon
                      ↓Label [ngx.components.UIDynamicElement-1680694473980]: 
                        beanData: '{"ionBean":"Label"}'
                        tagName: ion-label
                        ↓Paragraph [ngx.components.UIDynamicElement-1680694473983]: 
                          beanData: '{"ionBean":"Paragraph"}'
                          tagName: p
                          ↓some_text [ngx.components.UIText-1680694473986]: 
                            i18n: true
                            textValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: plain:notice3
                        ↓Style [ngx.components.UIStyle-1680694473989]: 
                          styleContent: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                →: |
                                  '/**
                                   * Custom properties (sometimes referred to as CSS variables or cascading variables)
                                   * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                                   * They are set using custom property notation, e.g.: --main-color: black;
                                   * and are accessed using the var() function, e.g.: color: var(--main-color);
                                   * You can find below your component''s properties you can customize within the page.
                                   * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                                   * For more informations see https://ionicframework.com/docs/theming.
                                  **/
                                  //--color	//Color of the label
                                  '
                        ↓FontStyle [ngx.components.UIFontStyle-1680694473992]: 
                          fontStyle: italic
                          ruleTargets: class1680694473980
                          styleContent: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                →: |
                                  'font-style: italic;
                                  '
                        ↓class [ngx.components.UIAttribute-1680694473995]: 
                          attrName: 
                          attrValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: plain:text-wrap
                ↓CardContent [ngx.components.UIDynamicElement-1680694473998]: 
                  beanData: '{"ionBean":"CardContent"}'
                  tagName: ion-card-content
                  ↓RadioGroup [ngx.components.UIDynamicElement-1680708184852]: 
                    beanData: '{"ionBean":"RadioGroup","ControlName":"plain:name1680708184852"}'
                    tagName: ion-radio-group
                    ↓ReorderGroup [ngx.components.UIDynamicElement-1680704190918]: 
                      beanData: '{"ionBean":"ReorderGroup"}'
                      tagName: ion-reorder-group
                      ↓Directive [ngx.components.UIControlDirective-1680704190921]: 
                        directiveIndexName: idx
                        directiveItemName: column
                        directiveSource: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: source:{"filter":"Sequence","project":"lib_BaseRow","input":"","model":{"data":[{"sequence":"lib_BaseRow.formscommon_FieldsList","marker":""}],"path":"?.array","prefix":"","suffix":"","custom":"","useCustom":false}}
                        ↓tag [ngx.components.UIControlDirective-1680704190924]: 
                          directiveName: If
                          directiveSource: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:idx == 0
                          ↓ListItemHeader [ngx.components.UIDynamicElement-1680704190927]: 
                            beanData: '{"ionBean":"ListItem"}'
                            tagName: ion-item
                            ↓Icon [ngx.components.UIDynamicElement-1680704190930]: 
                              beanData: |
                                '{
                                 "ionBean": "Icon",
                                 "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''browsers-outline''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                                 "IconSlot": "plain:start"
                                }'
                              tagName: ion-icon
                            ↓Label1 [ngx.components.UIDynamicElement-1680704190933]: 
                              beanData: '{"ionBean":"Label"}'
                              tagName: ion-label
                              ↓some_text [ngx.components.UIText-1680704190936]: 
                                textValue: 
                                  - xmlizable: 
                                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                    - MobileSmartSourceType: 'plain: '
                            ↓Grid [ngx.components.UIDynamicElement-1680704190939]: 
                              beanData: '{"ionBean":"Grid"}'
                              tagName: ion-grid
                              ↓GridRow [ngx.components.UIDynamicElement-1680704190942]: 
                                beanData: '{"ionBean":"GridRow","Height":"plain"}'
                                tagName: ion-row
                                ↓GridCol [ngx.components.UIDynamicElement-1680704190945]: 
                                  beanData: '{"ionBean":"GridCol"}'
                                  tagName: ion-col
                                  ↓Attr [ngx.components.UIAttribute-1680704190948]: 
                                    attrName: 
                                    attrValue: 
                                      - xmlizable: 
                                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                        - MobileSmartSourceType: plain:no-padding
                                  ↓GenericItem [ngx.components.UIDynamicElement-1680704190951]: 
                                    beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
                                    tagName: ion-item
                                    ↓CheckBox [ngx.components.UIDynamicElement-1680704190954]: 
                                      beanData: |
                                        '{
                                         "ionBean": "CheckBox",
                                         "ControlName": "plain:name1667636420064",
                                         "Checked": "plain:true"
                                        }'
                                      tagName: ion-checkbox
                                      ↓Style [ngx.components.UIStyle-1680704190957]: 
                                        styleContent: 
                                          - xmlizable: 
                                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                              →: |
                                                '/**
                                                 * Custom properties (sometimes referred to as CSS variables or cascading variables)
                                                 * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                                                 * They are set using custom property notation, e.g.: --main-color: black;
                                                 * and are accessed using the var() function, e.g.: color: var(--main-color);
                                                 * You can find below your component''s properties you can customize within the page.
                                                 * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                                                 * For more informations see https://ionicframework.com/docs/theming.
                                                **/
                                                //--background	//Background of the checkbox icon
                                                //--background-checked	//Background of the checkbox icon when checked
                                                //--border-color	//Border color of the checkbox icon
                                                //--border-color-checked	//Border color of the checkbox icon when checked
                                                //--border-radius	//Border radius of the checkbox icon
                                                //--border-style	//Border style of the checkbox icon
                                                //--border-width	//Border width of the checkbox icon
                                                //--checkmark-color	//Color of the checkbox checkmark when checked
                                                //--checkmark-width	//Stroke width of the checkbox checkmark
                                                //--size	//Size of the checkbox icon
                                                //--transition	//Transition of the checkbox icon
                                                	margin-top: 2px;
                                                	margin-bottom: 2px;
                                                
                                                '
                                      ↓slot [ngx.components.UIAttribute-1680704190960]: 
                                        attrName: slot
                                        attrValue: 
                                          - xmlizable: 
                                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                            - MobileSmartSourceType: plain:start
                                      ↓attr [ngx.components.UIControlEvent-1680704190963]: 
                                        attrName: (ionChange)
                                        eventName: ionChange
                                        ↓selectOrDeselectAll [ngx.components.UICustomAsyncAction-1680704190966]: 
                                          actionValue: 
                                            - xmlizable: 
                                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                                →: |
                                                  		try {
                                                  			for(let i in page.local.selectedColumns){
                                                  				page.local.selectedColumns[i].selected = event.detail.checked;
                                                  				if(!(event.detail.checked)){
                                                  					page.local.selectedColumns[i].displayValue = event.detail.checked;
                                                  					page.local.selectedColumns[i].value =  event.detail.checked;;
                                                  				}
                                                  			}
                                                  			if(!(event.detail.checked)){
                                                  				page.local.selectedColumns["id"].value = true;
                                                  				page.local.selectedColumns["id"].displayValue = true;
                                                  				page.local.selectedColumns["id"].selected = true;
                                                  			}
                                                  		} catch (e) {
                                                  		
                                                  		} finally {
                                                  			return;
                                                  		}
                                                  
                                    ↓Label [ngx.components.UIDynamicElement-1680704190969]: 
                                      beanData: '{"ionBean":"Label"}'
                                      tagName: ion-label
                                      ↓Paragraph [ngx.components.UIDynamicElement-1680704190972]: 
                                        beanData: '{"ionBean":"Paragraph"}'
                                        tagName: p
                                        ↓some_text [ngx.components.UIText-1680704190975]: 
                                          i18n: true
                                          textValue: 
                                            - xmlizable: 
                                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                              - MobileSmartSourceType: plain:Include
                                        ↓Style [ngx.components.UIStyle-1680704190978]: 
                                          styleContent: 
                                            - xmlizable: 
                                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                                →: |
                                                  	color:black;
                                                  
                                ↓GridCol1 [ngx.components.UIDynamicElement-1680704190981]: 
                                  beanData: '{"ionBean":"GridCol"}'
                                  tagName: ion-col
                                  ↓Attr [ngx.components.UIAttribute-1680704190984]: 
                                    attrName: 
                                    attrValue: 
                                      - xmlizable: 
                                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                        - MobileSmartSourceType: plain:no-padding
                                  ↓GenericItem [ngx.components.UIDynamicElement-1680704190987]: 
                                    beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
                                    tagName: ion-item
                                    ↓Label [ngx.components.UIDynamicElement-1680704190990]: 
                                      beanData: '{"ionBean":"Label"}'
                                      tagName: ion-label
                                      ↓Paragraph [ngx.components.UIDynamicElement-1680704190993]: 
                                        beanData: '{"ionBean":"Paragraph"}'
                                        tagName: p
                                        ↓Style [ngx.components.UIStyle-1680704190996]: 
                                          styleContent: 
                                            - xmlizable: 
                                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                                →: |
                                                  	color:black;
                                                  
                                        ↓some_text [ngx.components.UIText-1680704190999]: 
                                          i18n: true
                                          textValue: 
                                            - xmlizable: 
                                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                              - MobileSmartSourceType: plain:Display value
                                ↓GridCol2 [ngx.components.UIDynamicElement-1680705426330]: 
                                  beanData: '{"ionBean":"GridCol"}'
                                  tagName: ion-col
                                  ↓Attr [ngx.components.UIAttribute-1680705426333]: 
                                    attrName: 
                                    attrValue: 
                                      - xmlizable: 
                                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                        - MobileSmartSourceType: plain:no-padding
                                  ↓GenericItem [ngx.components.UIDynamicElement-1680705426336]: 
                                    beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
                                    tagName: ion-item
                                    ↓Label [ngx.components.UIDynamicElement-1680705426339]: 
                                      beanData: '{"ionBean":"Label"}'
                                      tagName: ion-label
                                      ↓Paragraph [ngx.components.UIDynamicElement-1680705426342]: 
                                        beanData: '{"ionBean":"Paragraph"}'
                                        tagName: p
                                        ↓Style [ngx.components.UIStyle-1680705426345]: 
                                          styleContent: 
                                            - xmlizable: 
                                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                                →: |
                                                  	color:black;
                                                  
                                        ↓some_text [ngx.components.UIText-1680705426348]: 
                                          i18n: true
                                          textValue: 
                                            - xmlizable: 
                                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                              - MobileSmartSourceType: plain:Value
                          ↓ListItemIdentifier [ngx.components.UIDynamicElement-1680705023900]: 
                            beanData: '{"ionBean":"ListItem"}'
                            tagName: ion-item
                            ↓Icon [ngx.components.UIDynamicElement-1680705023903]: 
                              beanData: |
                                '{
                                 "ionBean": "Icon",
                                 "IconName": "plain:cog-outline",
                                 "IconSlot": "plain:start"
                                }'
                              tagName: ion-icon
                            ↓Label1 [ngx.components.UIDynamicElement-1680705023906]: 
                              beanData: '{"ionBean":"Label"}'
                              tagName: ion-label
                              ↓some_text [ngx.components.UIText-1680705023909]: 
                                i18n: true
                                textValue: 
                                  - xmlizable: 
                                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                    - MobileSmartSourceType: plain:Identifier
                            ↓Grid [ngx.components.UIDynamicElement-1680705023912]: 
                              beanData: '{"ionBean":"Grid"}'
                              tagName: ion-grid
                              ↓GridRow [ngx.components.UIDynamicElement-1680705023915]: 
                                beanData: '{"ionBean":"GridRow","Height":"plain"}'
                                tagName: ion-row
                                ↓GridCol [ngx.components.UIDynamicElement-1680705023918]: 
                                  beanData: '{"ionBean":"GridCol"}'
                                  tagName: ion-col
                                  ↓Attr [ngx.components.UIAttribute-1680705023921]: 
                                    attrName: 
                                    attrValue: 
                                      - xmlizable: 
                                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                        - MobileSmartSourceType: plain:no-padding
                                  ↓GenericItem [ngx.components.UIDynamicElement-1680705023924]: 
                                    beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
                                    tagName: ion-item
                                    ↓CheckBox [ngx.components.UIDynamicElement-1680705023927]: 
                                      beanData: |
                                        '{
                                         "ionBean": "CheckBox",
                                         "ControlName": "plain:name1667636420064",
                                         "DoubleBinding": "script:local.selectedColumns[''id''].selected",
                                         "Disabled": "plain:true",
                                         "Checked": "plain:true"
                                        }'
                                      tagName: ion-checkbox
                                      ↓Style [ngx.components.UIStyle-1680705023930]: 
                                        styleContent: 
                                          - xmlizable: 
                                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                              →: |
                                                '/**
                                                 * Custom properties (sometimes referred to as CSS variables or cascading variables)
                                                 * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                                                 * They are set using custom property notation, e.g.: --main-color: black;
                                                 * and are accessed using the var() function, e.g.: color: var(--main-color);
                                                 * You can find below your component''s properties you can customize within the page.
                                                 * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                                                 * For more informations see https://ionicframework.com/docs/theming.
                                                **/
                                                //--background	//Background of the checkbox icon
                                                //--background-checked	//Background of the checkbox icon when checked
                                                //--border-color	//Border color of the checkbox icon
                                                //--border-color-checked	//Border color of the checkbox icon when checked
                                                //--border-radius	//Border radius of the checkbox icon
                                                //--border-style	//Border style of the checkbox icon
                                                //--border-width	//Border width of the checkbox icon
                                                //--checkmark-color	//Color of the checkbox checkmark when checked
                                                //--checkmark-width	//Stroke width of the checkbox checkmark
                                                //--size	//Size of the checkbox icon
                                                //--transition	//Transition of the checkbox icon
                                                	margin-top: 2px;
                                                	margin-bottom: 2px;
                                                	pointer-events: none;
                                                	opacity: 1;
                                                
                                                '
                                      ↓slot [ngx.components.UIAttribute-1680705023933]: 
                                        attrName: slot
                                        attrValue: 
                                          - xmlizable: 
                                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                            - MobileSmartSourceType: plain:start
                                      ↓attr [ngx.components.UIControlEvent-1680705023936]: 
                                        attrName: (ionChange)
                                        eventName: ionChange
                                        ↓selectOrDeselectAll [ngx.components.UICustomAsyncAction-1680705023939]: 
                                          actionValue: 
                                            - xmlizable: 
                                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                                →: |
                                                  		try {
                                                  			for(let i in page.local.selectedColumns){
                                                  				page.local.selectedColumns[i].selected = event.detail.checked;
                                                  			}
                                                  		} catch (e) {
                                                  		
                                                  		} finally {
                                                  			return;
                                                  		}
                                                  
                                          isEnabled: false
                                ↓GridCol1 [ngx.components.UIDynamicElement-1680705023954]: 
                                  beanData: '{"ionBean":"GridCol"}'
                                  tagName: ion-col
                                  ↓Attr [ngx.components.UIAttribute-1680705023957]: 
                                    attrName: 
                                    attrValue: 
                                      - xmlizable: 
                                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                        - MobileSmartSourceType: plain:no-padding
                                  ↓GenericItem1 [ngx.components.UIDynamicElement-1680705324817]: 
                                    beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
                                    tagName: ion-item
                                    ↓CheckBox [ngx.components.UIDynamicElement-1680705324820]: 
                                      beanData: |
                                        '{
                                         "ionBean": "CheckBox",
                                         "ControlName": "plain:name1667636420064",
                                         "DoubleBinding": "script:local.selectedColumns[''id''].displayValue",
                                         "IonMode": "plain:ios",
                                         "Checked": "plain:true"
                                        }'
                                      tagName: ion-checkbox
                                      ↓Style [ngx.components.UIStyle-1680705324823]: 
                                        styleContent: 
                                          - xmlizable: 
                                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                              →: |
                                                '/**
                                                 * Custom properties (sometimes referred to as CSS variables or cascading variables)
                                                 * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                                                 * They are set using custom property notation, e.g.: --main-color: black;
                                                 * and are accessed using the var() function, e.g.: color: var(--main-color);
                                                 * You can find below your component''s properties you can customize within the page.
                                                 * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                                                 * For more informations see https://ionicframework.com/docs/theming.
                                                **/
                                                //--background	//Background of the checkbox icon
                                                //--background-checked	//Background of the checkbox icon when checked
                                                //--border-color	//Border color of the checkbox icon
                                                //--border-color-checked	//Border color of the checkbox icon when checked
                                                //--border-radius	//Border radius of the checkbox icon
                                                //--border-style	//Border style of the checkbox icon
                                                //--border-width	//Border width of the checkbox icon
                                                //--checkmark-color	//Color of the checkbox checkmark when checked
                                                //--checkmark-width	//Stroke width of the checkbox checkmark
                                                //--size	//Size of the checkbox icon
                                                //--transition	//Transition of the checkbox icon
                                                	margin-top: 2px;
                                                	margin-bottom: 2px;
                                                
                                                '
                                      ↓slot [ngx.components.UIAttribute-1680705324826]: 
                                        attrName: slot
                                        attrValue: 
                                          - xmlizable: 
                                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                            - MobileSmartSourceType: plain:start
                                      ↓attr [ngx.components.UIControlEvent-1680710276613]: 
                                        attrName: (ngModelChange)
                                        eventName: (ngModelChange)
                                        ↓selectOrDeselectAll [ngx.components.UICustomAsyncAction-1680710276616]: 
                                          actionValue: 
                                            - xmlizable: 
                                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                                →: |
                                                  		try {
                                                  				for(let i in page.local.selectedColumns){
                                                  					if(i == vars.id){
                                                  						//page.local.selectedColumns[i].displayValue = true;
                                                  					}
                                                  					else{
                                                  						page.local.selectedColumns[i].displayValue = false;
                                                  					}
                                                  				}
                                                  		} catch (e) {
                                                  		
                                                  		} finally {
                                                  			return;
                                                  		}
                                                  
                                          ↓id [ngx.components.UIControlVariable-1680710276619]: 
                                            varValue: 
                                              - xmlizable: 
                                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                                - MobileSmartSourceType: script:'id'
                                ↓GridCol2 [ngx.components.UIDynamicElement-1680705404102]: 
                                  beanData: '{"ionBean":"GridCol"}'
                                  tagName: ion-col
                                  ↓Attr [ngx.components.UIAttribute-1680705404105]: 
                                    attrName: 
                                    attrValue: 
                                      - xmlizable: 
                                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                        - MobileSmartSourceType: plain:no-padding
                                  ↓GenericItem1 [ngx.components.UIDynamicElement-1680705404123]: 
                                    beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
                                    tagName: ion-item
                                    ↓CheckBox [ngx.components.UIDynamicElement-1680705404126]: 
                                      beanData: |
                                        '{
                                         "ionBean": "CheckBox",
                                         "ControlName": "plain:name1667636420064",
                                         "DoubleBinding": "script:local.selectedColumns[''id''].value",
                                         "IonMode": "plain:ios",
                                         "Checked": "plain:true"
                                        }'
                                      tagName: ion-checkbox
                                      ↓Style [ngx.components.UIStyle-1680705404129]: 
                                        styleContent: 
                                          - xmlizable: 
                                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                              →: |
                                                '/**
                                                 * Custom properties (sometimes referred to as CSS variables or cascading variables)
                                                 * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                                                 * They are set using custom property notation, e.g.: --main-color: black;
                                                 * and are accessed using the var() function, e.g.: color: var(--main-color);
                                                 * You can find below your component''s properties you can customize within the page.
                                                 * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                                                 * For more informations see https://ionicframework.com/docs/theming.
                                                **/
                                                //--background	//Background of the checkbox icon
                                                //--background-checked	//Background of the checkbox icon when checked
                                                //--border-color	//Border color of the checkbox icon
                                                //--border-color-checked	//Border color of the checkbox icon when checked
                                                //--border-radius	//Border radius of the checkbox icon
                                                //--border-style	//Border style of the checkbox icon
                                                //--border-width	//Border width of the checkbox icon
                                                //--checkmark-color	//Color of the checkbox checkmark when checked
                                                //--checkmark-width	//Stroke width of the checkbox checkmark
                                                //--size	//Size of the checkbox icon
                                                //--transition	//Transition of the checkbox icon
                                                	margin-top: 2px;
                                                	margin-bottom: 2px;
                                                
                                                '
                                      ↓slot [ngx.components.UIAttribute-1680705404132]: 
                                        attrName: slot
                                        attrValue: 
                                          - xmlizable: 
                                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                            - MobileSmartSourceType: plain:start
                                      ↓attr [ngx.components.UIControlEvent-1680710321191]: 
                                        attrName: (ngModelChange)
                                        eventName: (ngModelChange)
                                        ↓selectOrDeselectAll [ngx.components.UICustomAsyncAction-1680710321194]: 
                                          actionValue: 
                                            - xmlizable: 
                                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                                →: |
                                                  		try {
                                                  				for(let i in page.local.selectedColumns){
                                                  					if(i == vars.id){
                                                  						
                                                  					}
                                                  					else{
                                                  						page.local.selectedColumns[i].value = false;
                                                  					}
                                                  				}
                                                  		} catch (e) {
                                                  		
                                                  		} finally {
                                                  			return;
                                                  		}
                                                  
                                          ↓id [ngx.components.UIControlVariable-1680710321197]: 
                                            varValue: 
                                              - xmlizable: 
                                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                                - MobileSmartSourceType: script:'id'
                        ↓ListItem [ngx.components.UIDynamicElement-1680704191002]: 
                          beanData: '{"ionBean":"ListItem"}'
                          tagName: ion-item
                          ↓Directive [ngx.components.UIControlDirective-1680704191005]: 
                            directiveName: Switch
                            directiveSource: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: source:{"filter":"Iteration","project":"lib_BaseRow","input":"","model":{"data":[{"priority":1680704190921}],"path":"?.type","prefix":"","suffix":"","custom":"","useCustom":false}}
                            ↓Directive [ngx.components.UIControlDirective-1680704191008]: 
                              directiveName: SwitchCase
                              directiveSource: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:'text'
                              ↓Icon [ngx.components.UIDynamicElement-1680704191011]: 
                                beanData: |
                                  '{
                                   "ionBean": "Icon",
                                   "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''pencil''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                                   "IconSlot": "plain:start"
                                  }'
                                tagName: ion-icon
                            ↓Directive1 [ngx.components.UIControlDirective-1680704191014]: 
                              directiveName: SwitchCase
                              directiveSource: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:'long_text'
                              ↓Icon [ngx.components.UIDynamicElement-1680704191017]: 
                                beanData: |
                                  '{
                                   "ionBean": "Icon",
                                   "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''list-outline''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                                   "IconSlot": "plain:start"
                                  }'
                                tagName: ion-icon
                            ↓Directive2 [ngx.components.UIControlDirective-1680704191020]: 
                              directiveName: SwitchCase
                              directiveSource: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:'formula'
                              ↓Icon [ngx.components.UIDynamicElement-1680704191023]: 
                                beanData: |
                                  '{
                                   "ionBean": "Icon",
                                   "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''logo-electron''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                                   "IconSlot": "plain:start"
                                  }'
                                tagName: ion-icon
                            ↓Directive3 [ngx.components.UIControlDirective-1680704191026]: 
                              directiveName: SwitchCase
                              directiveSource: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:'boolean'
                              ↓Icon [ngx.components.UIDynamicElement-1680704191029]: 
                                beanData: |
                                  '{
                                   "ionBean": "Icon",
                                   "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''contrast''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                                   "IconSlot": "plain:start"
                                  }'
                                tagName: ion-icon
                            ↓Directive4 [ngx.components.UIControlDirective-1680704191032]: 
                              directiveName: SwitchCase
                              directiveSource: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:'number'
                              ↓Icon [ngx.components.UIDynamicElement-1680704191035]: 
                                beanData: |
                                  '{
                                   "ionBean": "Icon",
                                   "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''apps-outline''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                                   "IconSlot": "plain:start"
                                  }'
                                tagName: ion-icon
                            ↓Directive5 [ngx.components.UIControlDirective-1680704191038]: 
                              directiveName: SwitchCase
                              directiveSource: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:'link_row'
                              ↓Icon [ngx.components.UIDynamicElement-1680704191041]: 
                                beanData: |
                                  '{
                                   "ionBean": "Icon",
                                   "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''link-outline''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                                   "IconSlot": "plain:start"
                                  }'
                                tagName: ion-icon
                            ↓Directive6 [ngx.components.UIControlDirective-1680704191044]: 
                              directiveName: SwitchCase
                              directiveSource: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:'lookup'
                              ↓Icon [ngx.components.UIDynamicElement-1680704191047]: 
                                beanData: |
                                  '{
                                   "ionBean": "Icon",
                                   "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''telescope-outline''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                                   "IconSlot": "plain:start"
                                  }'
                                tagName: ion-icon
                            ↓Directive8 [ngx.components.UIControlDirective-1680704191050]: 
                              directiveName: SwitchCase
                              directiveSource: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:'file'
                              ↓Icon [ngx.components.UIDynamicElement-1680704191053]: 
                                beanData: |
                                  '{
                                   "ionBean": "Icon",
                                   "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''document-text-outline''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                                   "IconSlot": "plain:start"
                                  }'
                                tagName: ion-icon
                            ↓Directive9 [ngx.components.UIControlDirective-1680704191056]: 
                              directiveName: SwitchCase
                              directiveSource: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:'date'
                              ↓Icon [ngx.components.UIDynamicElement-1680704191059]: 
                                beanData: |
                                  '{
                                   "ionBean": "Icon",
                                   "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''calendar-outline''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                                   "IconSlot": "plain:start"
                                  }'
                                tagName: ion-icon
                            ↓Directive10 [ngx.components.UIControlDirective-1680704191062]: 
                              directiveName: SwitchCase
                              directiveSource: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:'multiple_select'
                              ↓Icon [ngx.components.UIDynamicElement-1680704191065]: 
                                beanData: |
                                  '{
                                   "ionBean": "Icon",
                                   "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''reorder-four-outline''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                                   "IconSlot": "plain:start"
                                  }'
                                tagName: ion-icon
                            ↓Directive7 [ngx.components.UIControlDirective-1680704191068]: 
                              directiveName: SwitchDefault
                              ↓Icon [ngx.components.UIDynamicElement-1680704191071]: 
                                beanData: |
                                  '{
                                   "ionBean": "Icon",
                                   "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''ban''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                                   "IconSlot": "plain:start"
                                  }'
                                tagName: ion-icon
                          ↓Label1 [ngx.components.UIDynamicElement-1680704191074]: 
                            beanData: '{"ionBean":"Label"}'
                            tagName: ion-label
                            ↓Text [ngx.components.UIText-1680704191077]: 
                              textValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: source:{"filter":"Iteration","project":"lib_BaseRow","input":"","model":{"data":[{"priority":1680704190921}],"path":"?.name","prefix":"","suffix":"","custom":"","useCustom":false}}
                            ↓Text1 [ngx.components.UIText-1680704191080]: 
                              isEnabled: false
                              textValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: source:{"filter":"Iteration","project":"lib_BaseRow","input":"","model":{"data":[{"priority":1667636016496}],"path":"?.type","prefix":"","suffix":"","custom":"","useCustom":false}}
                          ↓Grid [ngx.components.UIDynamicElement-1680704191083]: 
                            beanData: '{"ionBean":"Grid"}'
                            tagName: ion-grid
                            ↓GridRow [ngx.components.UIDynamicElement-1680704191086]: 
                              beanData: '{"ionBean":"GridRow","Height":"plain"}'
                              tagName: ion-row
                              ↓GridColInclude [ngx.components.UIDynamicElement-1680704191089]: 
                                beanData: '{"ionBean":"GridCol"}'
                                tagName: ion-col
                                ↓Attr [ngx.components.UIAttribute-1680704191092]: 
                                  attrName: 
                                  attrValue: 
                                    - xmlizable: 
                                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                      - MobileSmartSourceType: plain:no-padding
                                ↓GenericItem [ngx.components.UIDynamicElement-1680704191095]: 
                                  beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
                                  tagName: ion-item
                                  ↓CheckBox [ngx.components.UIDynamicElement-1680704191098]: 
                                    beanData: |
                                      '{
                                       "ionBean": "CheckBox",
                                       "ControlName": "plain:name1667636420064",
                                       "DoubleBinding": "script:local.selectedColumns[column.name].selected"
                                      }'
                                    tagName: ion-checkbox
                                    ↓Style [ngx.components.UIStyle-1680704191101]: 
                                      styleContent: 
                                        - xmlizable: 
                                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                            →: |
                                              '/**
                                               * Custom properties (sometimes referred to as CSS variables or cascading variables)
                                               * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                                               * They are set using custom property notation, e.g.: --main-color: black;
                                               * and are accessed using the var() function, e.g.: color: var(--main-color);
                                               * You can find below your component''s properties you can customize within the page.
                                               * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                                               * For more informations see https://ionicframework.com/docs/theming.
                                              **/
                                              //--background	//Background of the checkbox icon
                                              //--background-checked	//Background of the checkbox icon when checked
                                              //--border-color	//Border color of the checkbox icon
                                              //--border-color-checked	//Border color of the checkbox icon when checked
                                              //--border-radius	//Border radius of the checkbox icon
                                              //--border-style	//Border style of the checkbox icon
                                              //--border-width	//Border width of the checkbox icon
                                              //--checkmark-color	//Color of the checkbox checkmark when checked
                                              //--checkmark-width	//Stroke width of the checkbox checkmark
                                              //--size	//Size of the checkbox icon
                                              //--transition	//Transition of the checkbox icon
                                              	margin-top: 2px;
                                              	margin-bottom: 2px;
                                              
                                              '
                                    ↓slot [ngx.components.UIAttribute-1680704191104]: 
                                      attrName: slot
                                      attrValue: 
                                        - xmlizable: 
                                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                          - MobileSmartSourceType: plain:start
                                    ↓attr [ngx.components.UIControlEvent-1680710578997]: 
                                      attrName: (ngModelChange)
                                      eventName: (ngModelChange)
                                      ↓selectOrDeselectAll [ngx.components.UICustomAsyncAction-1680710579000]: 
                                        actionValue: 
                                          - xmlizable: 
                                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                              →: |
                                                		try {
                                                			if(page.local.selectedColumns[vars.id].displayValue == true){
                                                				page.local.selectedColumns[vars.id].displayValue = false;
                                                				page.local.selectedColumns["id"].displayValue = true;
                                                			}
                                                			if(page.local.selectedColumns[vars.id].value == true){
                                                				page.local.selectedColumns[vars.id].value = false;
                                                				page.local.selectedColumns["id"].value = true;
                                                			}
                                                		} catch (e) {
                                                		
                                                		} finally {
                                                			return;
                                                		}
                                                
                                        ↓id [ngx.components.UIControlVariable-1680710579003]: 
                                          varValue: 
                                            - xmlizable: 
                                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                              - MobileSmartSourceType: script:column.name
                              ↓GridColDisplayValue [ngx.components.UIDynamicElement-1680704191107]: 
                                beanData: '{"ionBean":"GridCol"}'
                                tagName: ion-col
                                ↓Attr [ngx.components.UIAttribute-1680704191110]: 
                                  attrName: 
                                  attrValue: 
                                    - xmlizable: 
                                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                      - MobileSmartSourceType: plain:no-padding
                                ↓GenericItem [ngx.components.UIDynamicElement-1680704191113]: 
                                  beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
                                  tagName: ion-item
                                  ↓CheckBox1 [ngx.components.UIDynamicElement-1680704191116]: 
                                    beanData: |
                                      '{
                                       "ionBean": "CheckBox",
                                       "ControlName": "plain:name1667636420064",
                                       "DoubleBinding": "script:local.selectedColumns[column.name].displayValue",
                                       "Disabled": "script:(! local?.selectedColumns[column.name]?.selected )",
                                       "IonMode": "plain:ios"
                                      }'
                                    tagName: ion-checkbox
                                    ↓Style [ngx.components.UIStyle-1680704191119]: 
                                      styleContent: 
                                        - xmlizable: 
                                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                            →: |
                                              '/**
                                               * Custom properties (sometimes referred to as CSS variables or cascading variables)
                                               * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                                               * They are set using custom property notation, e.g.: --main-color: black;
                                               * and are accessed using the var() function, e.g.: color: var(--main-color);
                                               * You can find below your component''s properties you can customize within the page.
                                               * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                                               * For more informations see https://ionicframework.com/docs/theming.
                                              **/
                                              //--background	//Background of the checkbox icon
                                              //--background-checked	//Background of the checkbox icon when checked
                                              //--border-color	//Border color of the checkbox icon
                                              //--border-color-checked	//Border color of the checkbox icon when checked
                                              //--border-radius	//Border radius of the checkbox icon
                                              //--border-style	//Border style of the checkbox icon
                                              //--border-width	//Border width of the checkbox icon
                                              //--checkmark-color	//Color of the checkbox checkmark when checked
                                              //--checkmark-width	//Stroke width of the checkbox checkmark
                                              //--size	//Size of the checkbox icon
                                              //--transition	//Transition of the checkbox icon
                                              	margin-top: 2px;
                                              	margin-bottom: 2px;
                                              	--opacity:1 !important;
                                              '
                                    ↓slot [ngx.components.UIAttribute-1680704191122]: 
                                      attrName: slot
                                      attrValue: 
                                        - xmlizable: 
                                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                          - MobileSmartSourceType: plain:start
                                    ↓attr [ngx.components.UIControlEvent-1680706701243]: 
                                      attrName: (ngModelChange)
                                      eventName: (ngModelChange)
                                      ↓selectOrDeselectAll [ngx.components.UICustomAsyncAction-1680706701246]: 
                                        actionValue: 
                                          - xmlizable: 
                                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                              →: |
                                                		try {
                                                				for(let i in page.local.selectedColumns){
                                                					if(i == vars.id){
                                                						//page.local.selectedColumns[i].displayValue = true;
                                                					}
                                                					else{
                                                						page.local.selectedColumns[i].displayValue = false;
                                                					}
                                                				}
                                                		} catch (e) {
                                                		
                                                		} finally {
                                                			return;
                                                		}
                                                
                                        ↓id [ngx.components.UIControlVariable-1680707284719]: 
                                          varValue: 
                                            - xmlizable: 
                                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                              - MobileSmartSourceType: script:column.name
                              ↓GridColValue [ngx.components.UIDynamicElement-1680705475797]: 
                                beanData: '{"ionBean":"GridCol"}'
                                tagName: ion-col
                                ↓Attr [ngx.components.UIAttribute-1680705475800]: 
                                  attrName: 
                                  attrValue: 
                                    - xmlizable: 
                                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                      - MobileSmartSourceType: plain:no-padding
                                ↓GenericItem [ngx.components.UIDynamicElement-1680705475803]: 
                                  beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
                                  tagName: ion-item
                                  ↓CheckBox1 [ngx.components.UIDynamicElement-1680705475806]: 
                                    beanData: |
                                      '{
                                       "ionBean": "CheckBox",
                                       "ControlName": "plain:name1667636420064",
                                       "DoubleBinding": "script:local.selectedColumns[column.name].value",
                                       "Disabled": "script:! local?.selectedColumns[column.name]?.selected",
                                       "IonMode": "plain:ios"
                                      }'
                                    tagName: ion-checkbox
                                    ↓Style [ngx.components.UIStyle-1680705475809]: 
                                      styleContent: 
                                        - xmlizable: 
                                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                            →: |
                                              '/**
                                               * Custom properties (sometimes referred to as CSS variables or cascading variables)
                                               * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                                               * They are set using custom property notation, e.g.: --main-color: black;
                                               * and are accessed using the var() function, e.g.: color: var(--main-color);
                                               * You can find below your component''s properties you can customize within the page.
                                               * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                                               * For more informations see https://ionicframework.com/docs/theming.
                                              **/
                                              //--background	//Background of the checkbox icon
                                              //--background-checked	//Background of the checkbox icon when checked
                                              //--border-color	//Border color of the checkbox icon
                                              //--border-color-checked	//Border color of the checkbox icon when checked
                                              //--border-radius	//Border radius of the checkbox icon
                                              //--border-style	//Border style of the checkbox icon
                                              //--border-width	//Border width of the checkbox icon
                                              //--checkmark-color	//Color of the checkbox checkmark when checked
                                              //--checkmark-width	//Stroke width of the checkbox checkmark
                                              //--size	//Size of the checkbox icon
                                              //--transition	//Transition of the checkbox icon
                                              	margin-top: 2px;
                                              	margin-bottom: 2px;
                                              
                                              '
                                    ↓slot [ngx.components.UIAttribute-1680705475812]: 
                                      attrName: slot
                                      attrValue: 
                                        - xmlizable: 
                                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                          - MobileSmartSourceType: plain:start
                                    ↓attr [ngx.components.UIControlEvent-1680710401029]: 
                                      attrName: (ngModelChange)
                                      eventName: (ngModelChange)
                                      ↓selectOrDeselectAll [ngx.components.UICustomAsyncAction-1680710401032]: 
                                        actionValue: 
                                          - xmlizable: 
                                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                              →: |
                                                		try {
                                                			for(let i in page.local.selectedColumns){
                                                				if(i == vars.id){
                                                					
                                                				}
                                                				else{
                                                					page.local.selectedColumns[i].value = false;
                                                				}
                                                			}
                                                		} catch (e) {
                                                		
                                                		} finally {
                                                			return;
                                                		}
                                                
                                        ↓id [ngx.components.UIControlVariable-1680710401035]: 
                                          varValue: 
                                            - xmlizable: 
                                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                              - MobileSmartSourceType: script:column.name
                      ↓Event [ngx.components.UIControlEvent-1680704191125]: 
                        attrName: (ionItemReorder)
                        eventName: ionItemReorder
                        ↓AckReorder [ngx.components.UICustomAction-1680704191128]: 
                          actionValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                →: |
                                  '		page.c8o.log.debug(''[Reorder] Dragged from ''+ event.detail.from  +'' to : ''+ event.detail.to);
                                  		
                                  		let selectedCols = page.local.selectedColumns;
                                  	  	const draggedItem = selectedCols[event.detail.from];
                                  		  	
                                  		// Reorder the array by moving the item from `from` to `to`
                                  		selectedCols.splice(event.detail.from, 1); // Remove item from original position
                                  		selectedCols.splice(event.detail.to, 0, draggedItem); // Insert item at new position
                                  		
                                  		page.local.selectedColumns = selectedCols;
                                  		
                                  		event.detail.complete();
                                  		resolve();
                                  '
          ↓Directive2 [ngx.components.UIControlDirective-1730216540592]: 
            directiveExpression: '''checkbox_group'''
            directiveName: SwitchCase
            ↓GridColSelect [ngx.components.UIDynamicElement-1730218495545]: 
              beanData: '{"ionBean":"GridCol","Size":"plain:8"}'
              tagName: ion-col
              ↓CardContainer [ngx.components.UIDynamicElement-1730218495548]: 
                beanData: '{"ionBean":"Card"}'
                tagName: ion-card
                ↓CardHeader [ngx.components.UIDynamicElement-1730218495551]: 
                  beanData: '{"ionBean":"CardHeader"}'
                  tagName: ion-card-header
                  ↓Div [ngx.components.UIDynamicElement-1730218495554]: 
                    beanData: '{"ionBean":"DivTag"}'
                    tagName: div
                    ↓Style [ngx.components.UIStyle-1730218495557]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '	border-bottom: 1px solid var(--ion-color-dark);
                              	padding:16px;
                              '
                    ↓CardTitle [ngx.components.UIDynamicElement-1730218495560]: 
                      beanData: '{"ionBean":"CardTitle"}'
                      tagName: ion-card-title
                      ↓TextItem [ngx.components.UIDynamicElement-1730218495563]: 
                        beanData: '{"ionBean":"TextItem"}'
                        tagName: ion-text
                        ↓Text [ngx.components.UIText-1730218495566]: 
                          i18n: true
                          textValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: plain:Select Columns
                        ↓FontStyle [ngx.components.UIFontStyle-1730218495569]: 
                          fontFamily: Saira
                          fontSize: 24px
                          fontStyle: normal
                          ruleTargets: class1730218495563
                          styleContent: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                →: |
                                  'font-family: Saira;
                                  font-size: 24px;
                                  font-style: normal;
                                  '
                      ↓Style [ngx.components.UIStyle-1730218495572]: 
                        styleContent: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                '	text-align:center;
                                	display: flex;
                                    justify-content: center;
                                    align-items: center;
                                '
                      ↓attr [ngx.components.UIAttribute-1730218495575]: 
                        attrName: '[ngStyle]'
                        attrValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: 'script:{''min-height'': leftTitle.el.clientHeight + ''px''}'
                  ↓Style [ngx.components.UIStyle-1730218495578]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            '	padding: 0;
                            '
                  ↓Div1 [ngx.components.UIDynamicElement-1730218495581]: 
                    beanData: '{"ionBean":"DivTag"}'
                    identifier: rightDiv
                    tagName: div
                    ↓Style [ngx.components.UIStyle-1730218495584]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              'padding: 0 16px;
                              '
                    ↓GenericItem [ngx.components.UIDynamicElement-1730218495587]: 
                      beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
                      tagName: ion-item
                      ↓Icon [ngx.components.UIDynamicElement-1730218495590]: 
                        beanData: |
                          '{
                           "ionBean": "Icon",
                           "IconName": "plain:information-circle-outline",
                           "IconSlot": "plain:start"
                          }'
                        tagName: ion-icon
                      ↓Label [ngx.components.UIDynamicElement-1730218495593]: 
                        beanData: '{"ionBean":"Label"}'
                        tagName: ion-label
                        ↓Paragraph [ngx.components.UIDynamicElement-1730218495596]: 
                          beanData: '{"ionBean":"Paragraph"}'
                          tagName: p
                          ↓some_text [ngx.components.UIText-1730218495599]: 
                            i18n: true
                            textValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: plain:notice3
                        ↓Style [ngx.components.UIStyle-1730218495602]: 
                          styleContent: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                →: |
                                  '/**
                                   * Custom properties (sometimes referred to as CSS variables or cascading variables)
                                   * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                                   * They are set using custom property notation, e.g.: --main-color: black;
                                   * and are accessed using the var() function, e.g.: color: var(--main-color);
                                   * You can find below your component''s properties you can customize within the page.
                                   * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                                   * For more informations see https://ionicframework.com/docs/theming.
                                  **/
                                  //--color	//Color of the label
                                  '
                        ↓FontStyle [ngx.components.UIFontStyle-1730218495605]: 
                          fontStyle: italic
                          ruleTargets: class1730218495593
                          styleContent: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                →: |
                                  'font-style: italic;
                                  '
                        ↓class [ngx.components.UIAttribute-1730218495608]: 
                          attrName: 
                          attrValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: plain:text-wrap
                ↓CardContent [ngx.components.UIDynamicElement-1730218495611]: 
                  beanData: '{"ionBean":"CardContent"}'
                  tagName: ion-card-content
                  ↓RadioGroup [ngx.components.UIDynamicElement-1730218495833]: 
                    beanData: '{"ionBean":"RadioGroup","ControlName":"plain:name1680708184852"}'
                    tagName: ion-radio-group
                    ↓ReorderGroup [ngx.components.UIDynamicElement-1730218495836]: 
                      beanData: '{"ionBean":"ReorderGroup"}'
                      tagName: ion-reorder-group
                      ↓Directive [ngx.components.UIControlDirective-1730218495839]: 
                        directiveIndexName: idx
                        directiveItemName: column
                        directiveSource: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: source:{"filter":"Sequence","project":"lib_BaseRow","input":"","model":{"data":[{"sequence":"lib_BaseRow.formscommon_FieldsList","marker":""}],"path":"?.array","prefix":"","suffix":"","custom":"","useCustom":false}}
                        ↓tag [ngx.components.UIControlDirective-1730218495842]: 
                          directiveName: If
                          directiveSource: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:idx == 0
                          ↓ListItemHeader [ngx.components.UIDynamicElement-1730218495845]: 
                            beanData: '{"ionBean":"ListItem"}'
                            tagName: ion-item
                            ↓Icon [ngx.components.UIDynamicElement-1730218495848]: 
                              beanData: |
                                '{
                                 "ionBean": "Icon",
                                 "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''browsers-outline''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                                 "IconSlot": "plain:start"
                                }'
                              tagName: ion-icon
                            ↓Label1 [ngx.components.UIDynamicElement-1730218495851]: 
                              beanData: '{"ionBean":"Label"}'
                              tagName: ion-label
                              ↓some_text [ngx.components.UIText-1730218495854]: 
                                textValue: 
                                  - xmlizable: 
                                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                    - MobileSmartSourceType: 'plain: '
                            ↓Grid [ngx.components.UIDynamicElement-1730218495857]: 
                              beanData: '{"ionBean":"Grid"}'
                              tagName: ion-grid
                              ↓GridRow [ngx.components.UIDynamicElement-1730218495860]: 
                                beanData: '{"ionBean":"GridRow","Height":"plain"}'
                                tagName: ion-row
                                ↓GridCol1 [ngx.components.UIDynamicElement-1730218495899]: 
                                  beanData: '{"ionBean":"GridCol"}'
                                  tagName: ion-col
                                  ↓Attr [ngx.components.UIAttribute-1730218495902]: 
                                    attrName: 
                                    attrValue: 
                                      - xmlizable: 
                                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                        - MobileSmartSourceType: plain:no-padding
                                  ↓GenericItem [ngx.components.UIDynamicElement-1730218495905]: 
                                    beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
                                    tagName: ion-item
                                    ↓Label [ngx.components.UIDynamicElement-1730218495908]: 
                                      beanData: '{"ionBean":"Label"}'
                                      tagName: ion-label
                                      ↓Paragraph [ngx.components.UIDynamicElement-1730218495911]: 
                                        beanData: '{"ionBean":"Paragraph"}'
                                        tagName: p
                                        ↓Style [ngx.components.UIStyle-1730218495914]: 
                                          styleContent: 
                                            - xmlizable: 
                                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                                →: |
                                                  	color:black;
                                                  
                                        ↓some_text [ngx.components.UIText-1730218495917]: 
                                          i18n: true
                                          textValue: 
                                            - xmlizable: 
                                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                              - MobileSmartSourceType: plain:lines
                                ↓GridCol2 [ngx.components.UIDynamicElement-1730218495920]: 
                                  beanData: '{"ionBean":"GridCol"}'
                                  tagName: ion-col
                                  ↓Attr [ngx.components.UIAttribute-1730218495923]: 
                                    attrName: 
                                    attrValue: 
                                      - xmlizable: 
                                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                        - MobileSmartSourceType: plain:no-padding
                                  ↓GenericItem [ngx.components.UIDynamicElement-1730218495926]: 
                                    beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
                                    tagName: ion-item
                                    ↓Label [ngx.components.UIDynamicElement-1730218495929]: 
                                      beanData: '{"ionBean":"Label"}'
                                      tagName: ion-label
                                      ↓Paragraph [ngx.components.UIDynamicElement-1730218495932]: 
                                        beanData: '{"ionBean":"Paragraph"}'
                                        tagName: p
                                        ↓Style [ngx.components.UIStyle-1730218495935]: 
                                          styleContent: 
                                            - xmlizable: 
                                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                                →: |
                                                  	color:black;
                                                  
                                        ↓some_text [ngx.components.UIText-1730218495938]: 
                                          i18n: true
                                          textValue: 
                                            - xmlizable: 
                                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                              - MobileSmartSourceType: plain:columns
                          ↓ListItemIdentifier [ngx.components.UIDynamicElement-1730218495941]: 
                            beanData: '{"ionBean":"ListItem"}'
                            tagName: ion-item
                            ↓Icon [ngx.components.UIDynamicElement-1730218495944]: 
                              beanData: |
                                '{
                                 "ionBean": "Icon",
                                 "IconName": "plain:cog-outline",
                                 "IconSlot": "plain:start"
                                }'
                              tagName: ion-icon
                            ↓Label1 [ngx.components.UIDynamicElement-1730218495947]: 
                              beanData: '{"ionBean":"Label"}'
                              tagName: ion-label
                              ↓some_text [ngx.components.UIText-1730218495950]: 
                                i18n: true
                                textValue: 
                                  - xmlizable: 
                                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                    - MobileSmartSourceType: plain:Identifier
                            ↓Grid [ngx.components.UIDynamicElement-1730218495953]: 
                              beanData: '{"ionBean":"Grid"}'
                              tagName: ion-grid
                              ↓GridRow [ngx.components.UIDynamicElement-1730218495956]: 
                                beanData: '{"ionBean":"GridRow","Height":"plain"}'
                                tagName: ion-row
                                ↓GridCol1 [ngx.components.UIDynamicElement-1730218495983]: 
                                  beanData: '{"ionBean":"GridCol"}'
                                  tagName: ion-col
                                  ↓Attr [ngx.components.UIAttribute-1730218495986]: 
                                    attrName: 
                                    attrValue: 
                                      - xmlizable: 
                                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                        - MobileSmartSourceType: plain:no-padding
                                  ↓GenericItem1 [ngx.components.UIDynamicElement-1730218495989]: 
                                    beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
                                    tagName: ion-item
                                    ↓CheckBox [ngx.components.UIDynamicElement-1730218495992]: 
                                      beanData: |
                                        '{
                                         "ionBean": "CheckBox",
                                         "ControlName": "plain:name1667636420064",
                                         "DoubleBinding": "script:local.selectedColumns[''id''].displayValue",
                                         "IonMode": "plain:ios",
                                         "Checked": "plain:true"
                                        }'
                                      tagName: ion-checkbox
                                      ↓Style [ngx.components.UIStyle-1730218495995]: 
                                        styleContent: 
                                          - xmlizable: 
                                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                              →: |
                                                '/**
                                                 * Custom properties (sometimes referred to as CSS variables or cascading variables)
                                                 * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                                                 * They are set using custom property notation, e.g.: --main-color: black;
                                                 * and are accessed using the var() function, e.g.: color: var(--main-color);
                                                 * You can find below your component''s properties you can customize within the page.
                                                 * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                                                 * For more informations see https://ionicframework.com/docs/theming.
                                                **/
                                                //--background	//Background of the checkbox icon
                                                //--background-checked	//Background of the checkbox icon when checked
                                                //--border-color	//Border color of the checkbox icon
                                                //--border-color-checked	//Border color of the checkbox icon when checked
                                                //--border-radius	//Border radius of the checkbox icon
                                                //--border-style	//Border style of the checkbox icon
                                                //--border-width	//Border width of the checkbox icon
                                                //--checkmark-color	//Color of the checkbox checkmark when checked
                                                //--checkmark-width	//Stroke width of the checkbox checkmark
                                                //--size	//Size of the checkbox icon
                                                //--transition	//Transition of the checkbox icon
                                                	margin-top: 2px;
                                                	margin-bottom: 2px;
                                                
                                                '
                                      ↓slot [ngx.components.UIAttribute-1730218495998]: 
                                        attrName: slot
                                        attrValue: 
                                          - xmlizable: 
                                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                            - MobileSmartSourceType: plain:start
                                      ↓attr [ngx.components.UIControlEvent-1730218496001]: 
                                        attrName: (ngModelChange)
                                        eventName: (ngModelChange)
                                        ↓selectOrDeselectAll [ngx.components.UICustomAsyncAction-1730218496004]: 
                                          actionValue: 
                                            - xmlizable: 
                                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                                →: |
                                                  		try {
                                                  				for(let i in page.local.selectedColumns){
                                                  					if(i == vars.id){
                                                  						//page.local.selectedColumns[i].displayValue = true;
                                                  					}
                                                  					else{
                                                  						page.local.selectedColumns[i].displayValue = false;
                                                  					}
                                                  				}
                                                  		} catch (e) {
                                                  		
                                                  		} finally {
                                                  			return;
                                                  		}
                                                  
                                          ↓id [ngx.components.UIControlVariable-1730218496007]: 
                                            varValue: 
                                              - xmlizable: 
                                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                                - MobileSmartSourceType: script:'id'
                                ↓GridCol2 [ngx.components.UIDynamicElement-1730218496010]: 
                                  beanData: '{"ionBean":"GridCol"}'
                                  tagName: ion-col
                                  ↓Attr [ngx.components.UIAttribute-1730218496013]: 
                                    attrName: 
                                    attrValue: 
                                      - xmlizable: 
                                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                        - MobileSmartSourceType: plain:no-padding
                                  ↓GenericItem1 [ngx.components.UIDynamicElement-1730218496016]: 
                                    beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
                                    tagName: ion-item
                                    ↓CheckBox [ngx.components.UIDynamicElement-1730218496019]: 
                                      beanData: |
                                        '{
                                         "ionBean": "CheckBox",
                                         "ControlName": "plain:name1667636420064",
                                         "DoubleBinding": "script:local.selectedColumns[''id''].value",
                                         "IonMode": "plain:ios",
                                         "Checked": "plain:true"
                                        }'
                                      tagName: ion-checkbox
                                      ↓Style [ngx.components.UIStyle-1730218496022]: 
                                        styleContent: 
                                          - xmlizable: 
                                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                              →: |
                                                '/**
                                                 * Custom properties (sometimes referred to as CSS variables or cascading variables)
                                                 * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                                                 * They are set using custom property notation, e.g.: --main-color: black;
                                                 * and are accessed using the var() function, e.g.: color: var(--main-color);
                                                 * You can find below your component''s properties you can customize within the page.
                                                 * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                                                 * For more informations see https://ionicframework.com/docs/theming.
                                                **/
                                                //--background	//Background of the checkbox icon
                                                //--background-checked	//Background of the checkbox icon when checked
                                                //--border-color	//Border color of the checkbox icon
                                                //--border-color-checked	//Border color of the checkbox icon when checked
                                                //--border-radius	//Border radius of the checkbox icon
                                                //--border-style	//Border style of the checkbox icon
                                                //--border-width	//Border width of the checkbox icon
                                                //--checkmark-color	//Color of the checkbox checkmark when checked
                                                //--checkmark-width	//Stroke width of the checkbox checkmark
                                                //--size	//Size of the checkbox icon
                                                //--transition	//Transition of the checkbox icon
                                                	margin-top: 2px;
                                                	margin-bottom: 2px;
                                                
                                                '
                                      ↓slot [ngx.components.UIAttribute-1730218496025]: 
                                        attrName: slot
                                        attrValue: 
                                          - xmlizable: 
                                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                            - MobileSmartSourceType: plain:start
                                      ↓attr [ngx.components.UIControlEvent-1730218496028]: 
                                        attrName: (ngModelChange)
                                        eventName: (ngModelChange)
                                        ↓selectOrDeselectAll [ngx.components.UICustomAsyncAction-1730218496031]: 
                                          actionValue: 
                                            - xmlizable: 
                                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                                →: |
                                                  		try {
                                                  				for(let i in page.local.selectedColumns){
                                                  					if(i == vars.id){
                                                  						
                                                  					}
                                                  					else{
                                                  						page.local.selectedColumns[i].value = false;
                                                  					}
                                                  				}
                                                  		} catch (e) {
                                                  		
                                                  		} finally {
                                                  			return;
                                                  		}
                                                  
                                          ↓id [ngx.components.UIControlVariable-1730218496034]: 
                                            varValue: 
                                              - xmlizable: 
                                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                                - MobileSmartSourceType: script:'id'
                        ↓ListItem [ngx.components.UIDynamicElement-1730218496037]: 
                          beanData: '{"ionBean":"ListItem"}'
                          tagName: ion-item
                          ↓Directive [ngx.components.UIControlDirective-1730218496040]: 
                            directiveName: Switch
                            directiveSource: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: source:{"filter":"Iteration","project":"lib_BaseRow","input":"","model":{"data":[{"priority":1730218495839}],"path":"?.type","prefix":"","suffix":"","custom":"","useCustom":false}}
                            ↓Directive [ngx.components.UIControlDirective-1730218496043]: 
                              directiveName: SwitchCase
                              directiveSource: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:'text'
                              ↓Icon [ngx.components.UIDynamicElement-1730218496046]: 
                                beanData: |
                                  '{
                                   "ionBean": "Icon",
                                   "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''pencil''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                                   "IconSlot": "plain:start"
                                  }'
                                tagName: ion-icon
                            ↓Directive1 [ngx.components.UIControlDirective-1730218496049]: 
                              directiveName: SwitchCase
                              directiveSource: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:'long_text'
                              ↓Icon [ngx.components.UIDynamicElement-1730218496052]: 
                                beanData: |
                                  '{
                                   "ionBean": "Icon",
                                   "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''list-outline''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                                   "IconSlot": "plain:start"
                                  }'
                                tagName: ion-icon
                            ↓Directive2 [ngx.components.UIControlDirective-1730218496055]: 
                              directiveName: SwitchCase
                              directiveSource: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:'formula'
                              ↓Icon [ngx.components.UIDynamicElement-1730218496058]: 
                                beanData: |
                                  '{
                                   "ionBean": "Icon",
                                   "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''logo-electron''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                                   "IconSlot": "plain:start"
                                  }'
                                tagName: ion-icon
                            ↓Directive3 [ngx.components.UIControlDirective-1730218496061]: 
                              directiveName: SwitchCase
                              directiveSource: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:'boolean'
                              ↓Icon [ngx.components.UIDynamicElement-1730218496064]: 
                                beanData: |
                                  '{
                                   "ionBean": "Icon",
                                   "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''contrast''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                                   "IconSlot": "plain:start"
                                  }'
                                tagName: ion-icon
                            ↓Directive4 [ngx.components.UIControlDirective-1730218496067]: 
                              directiveName: SwitchCase
                              directiveSource: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:'number'
                              ↓Icon [ngx.components.UIDynamicElement-1730218496070]: 
                                beanData: |
                                  '{
                                   "ionBean": "Icon",
                                   "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''apps-outline''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                                   "IconSlot": "plain:start"
                                  }'
                                tagName: ion-icon
                            ↓Directive5 [ngx.components.UIControlDirective-1730218496073]: 
                              directiveName: SwitchCase
                              directiveSource: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:'link_row'
                              ↓Icon [ngx.components.UIDynamicElement-1730218496076]: 
                                beanData: |
                                  '{
                                   "ionBean": "Icon",
                                   "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''link-outline''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                                   "IconSlot": "plain:start"
                                  }'
                                tagName: ion-icon
                            ↓Directive6 [ngx.components.UIControlDirective-1730218496079]: 
                              directiveName: SwitchCase
                              directiveSource: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:'lookup'
                              ↓Icon [ngx.components.UIDynamicElement-1730218496082]: 
                                beanData: |
                                  '{
                                   "ionBean": "Icon",
                                   "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''telescope-outline''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                                   "IconSlot": "plain:start"
                                  }'
                                tagName: ion-icon
                            ↓Directive8 [ngx.components.UIControlDirective-1730218496085]: 
                              directiveName: SwitchCase
                              directiveSource: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:'file'
                              ↓Icon [ngx.components.UIDynamicElement-1730218496088]: 
                                beanData: |
                                  '{
                                   "ionBean": "Icon",
                                   "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''document-text-outline''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                                   "IconSlot": "plain:start"
                                  }'
                                tagName: ion-icon
                            ↓Directive9 [ngx.components.UIControlDirective-1730218496091]: 
                              directiveName: SwitchCase
                              directiveSource: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:'date'
                              ↓Icon [ngx.components.UIDynamicElement-1730218496094]: 
                                beanData: |
                                  '{
                                   "ionBean": "Icon",
                                   "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''calendar-outline''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                                   "IconSlot": "plain:start"
                                  }'
                                tagName: ion-icon
                            ↓Directive10 [ngx.components.UIControlDirective-1730218496097]: 
                              directiveName: SwitchCase
                              directiveSource: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:'multiple_select'
                              ↓Icon [ngx.components.UIDynamicElement-1730218496100]: 
                                beanData: |
                                  '{
                                   "ionBean": "Icon",
                                   "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''reorder-four-outline''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                                   "IconSlot": "plain:start"
                                  }'
                                tagName: ion-icon
                            ↓Directive7 [ngx.components.UIControlDirective-1730218496103]: 
                              directiveName: SwitchDefault
                              ↓Icon [ngx.components.UIDynamicElement-1730218496106]: 
                                beanData: |
                                  '{
                                   "ionBean": "Icon",
                                   "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''ban''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                                   "IconSlot": "plain:start"
                                  }'
                                tagName: ion-icon
                          ↓Label1 [ngx.components.UIDynamicElement-1730218496109]: 
                            beanData: '{"ionBean":"Label"}'
                            tagName: ion-label
                            ↓Text [ngx.components.UIText-1730218496112]: 
                              textValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: source:{"filter":"Iteration","project":"lib_BaseRow","input":"","model":{"data":[{"priority":1730218495839}],"path":"?.name","prefix":"","suffix":"","custom":"","useCustom":false}}
                          ↓Grid [ngx.components.UIDynamicElement-1730218496118]: 
                            beanData: '{"ionBean":"Grid"}'
                            tagName: ion-grid
                            ↓GridRow [ngx.components.UIDynamicElement-1730218496121]: 
                              beanData: '{"ionBean":"GridRow","Height":"plain"}'
                              tagName: ion-row
                              ↓GridColDisplayValue [ngx.components.UIDynamicElement-1730218496151]: 
                                beanData: '{"ionBean":"GridCol"}'
                                tagName: ion-col
                                ↓Attr [ngx.components.UIAttribute-1730218496154]: 
                                  attrName: 
                                  attrValue: 
                                    - xmlizable: 
                                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                      - MobileSmartSourceType: plain:no-padding
                                ↓GenericItem [ngx.components.UIDynamicElement-1730218496157]: 
                                  beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
                                  tagName: ion-item
                                  ↓CheckBox1 [ngx.components.UIDynamicElement-1730218496160]: 
                                    beanData: |
                                      '{
                                       "ionBean": "CheckBox",
                                       "ControlName": "plain:name1667636420064",
                                       "DoubleBinding": "script:local.selectedColumns[column.name].displayValue",
                                       "IonMode": "plain:ios"
                                      }'
                                    tagName: ion-checkbox
                                    ↓Style [ngx.components.UIStyle-1730218496163]: 
                                      styleContent: 
                                        - xmlizable: 
                                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                            →: |
                                              '/**
                                               * Custom properties (sometimes referred to as CSS variables or cascading variables)
                                               * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                                               * They are set using custom property notation, e.g.: --main-color: black;
                                               * and are accessed using the var() function, e.g.: color: var(--main-color);
                                               * You can find below your component''s properties you can customize within the page.
                                               * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                                               * For more informations see https://ionicframework.com/docs/theming.
                                              **/
                                              //--background	//Background of the checkbox icon
                                              //--background-checked	//Background of the checkbox icon when checked
                                              //--border-color	//Border color of the checkbox icon
                                              //--border-color-checked	//Border color of the checkbox icon when checked
                                              //--border-radius	//Border radius of the checkbox icon
                                              //--border-style	//Border style of the checkbox icon
                                              //--border-width	//Border width of the checkbox icon
                                              //--checkmark-color	//Color of the checkbox checkmark when checked
                                              //--checkmark-width	//Stroke width of the checkbox checkmark
                                              //--size	//Size of the checkbox icon
                                              //--transition	//Transition of the checkbox icon
                                              	margin-top: 2px;
                                              	margin-bottom: 2px;
                                              	--opacity:1 !important;
                                              '
                                    ↓slot [ngx.components.UIAttribute-1730218496166]: 
                                      attrName: slot
                                      attrValue: 
                                        - xmlizable: 
                                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                          - MobileSmartSourceType: plain:start
                                    ↓attr [ngx.components.UIControlEvent-1730218496169]: 
                                      attrName: (ngModelChange)
                                      eventName: (ngModelChange)
                                      ↓selectOrDeselectAll [ngx.components.UICustomAsyncAction-1730218496172]: 
                                        actionValue: 
                                          - xmlizable: 
                                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                              →: |
                                                		try {
                                                				for(let i in page.local.selectedColumns){
                                                					if(i == vars.id){
                                                						//page.local.selectedColumns[i].displayValue = true;
                                                					}
                                                					else{
                                                						page.local.selectedColumns[i].displayValue = false;
                                                					}
                                                				}
                                                		} catch (e) {
                                                		
                                                		} finally {
                                                			return;
                                                		}
                                                
                                        ↓id [ngx.components.UIControlVariable-1730218496175]: 
                                          varValue: 
                                            - xmlizable: 
                                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                              - MobileSmartSourceType: script:column.name
                              ↓GridColValue [ngx.components.UIDynamicElement-1730218496178]: 
                                beanData: '{"ionBean":"GridCol"}'
                                tagName: ion-col
                                ↓Attr [ngx.components.UIAttribute-1730218496181]: 
                                  attrName: 
                                  attrValue: 
                                    - xmlizable: 
                                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                      - MobileSmartSourceType: plain:no-padding
                                ↓GenericItem [ngx.components.UIDynamicElement-1730218496184]: 
                                  beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
                                  tagName: ion-item
                                  ↓CheckBox1 [ngx.components.UIDynamicElement-1730218496187]: 
                                    beanData: |
                                      '{
                                       "ionBean": "CheckBox",
                                       "ControlName": "plain:name1667636420064",
                                       "DoubleBinding": "script:local.selectedColumns[column.name].value",
                                       "IonMode": "plain:ios"
                                      }'
                                    tagName: ion-checkbox
                                    ↓Style [ngx.components.UIStyle-1730218496190]: 
                                      styleContent: 
                                        - xmlizable: 
                                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                            →: |
                                              '/**
                                               * Custom properties (sometimes referred to as CSS variables or cascading variables)
                                               * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                                               * They are set using custom property notation, e.g.: --main-color: black;
                                               * and are accessed using the var() function, e.g.: color: var(--main-color);
                                               * You can find below your component''s properties you can customize within the page.
                                               * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                                               * For more informations see https://ionicframework.com/docs/theming.
                                              **/
                                              //--background	//Background of the checkbox icon
                                              //--background-checked	//Background of the checkbox icon when checked
                                              //--border-color	//Border color of the checkbox icon
                                              //--border-color-checked	//Border color of the checkbox icon when checked
                                              //--border-radius	//Border radius of the checkbox icon
                                              //--border-style	//Border style of the checkbox icon
                                              //--border-width	//Border width of the checkbox icon
                                              //--checkmark-color	//Color of the checkbox checkmark when checked
                                              //--checkmark-width	//Stroke width of the checkbox checkmark
                                              //--size	//Size of the checkbox icon
                                              //--transition	//Transition of the checkbox icon
                                              	margin-top: 2px;
                                              	margin-bottom: 2px;
                                              
                                              '
                                    ↓slot [ngx.components.UIAttribute-1730218496193]: 
                                      attrName: slot
                                      attrValue: 
                                        - xmlizable: 
                                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                          - MobileSmartSourceType: plain:start
                                    ↓attr [ngx.components.UIControlEvent-1730218496196]: 
                                      attrName: (ngModelChange)
                                      eventName: (ngModelChange)
                                      ↓selectOrDeselectAll [ngx.components.UICustomAsyncAction-1730218496199]: 
                                        actionValue: 
                                          - xmlizable: 
                                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                              →: |
                                                		try {
                                                			for(let i in page.local.selectedColumns){
                                                				if(i == vars.id){
                                                					
                                                				}
                                                				else{
                                                					page.local.selectedColumns[i].value = false;
                                                				}
                                                			}
                                                		} catch (e) {
                                                		
                                                		} finally {
                                                			return;
                                                		}
                                                
                                        ↓id [ngx.components.UIControlVariable-1730218496202]: 
                                          varValue: 
                                            - xmlizable: 
                                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                              - MobileSmartSourceType: script:column.name
                      ↓Event [ngx.components.UIControlEvent-1730218496205]: 
                        attrName: (ionItemReorder)
                        eventName: ionItemReorder
                        ↓AckReorder [ngx.components.UICustomAction-1730218496208]: 
                          actionValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                →: |
                                  '		page.c8o.log.debug(''[Reorder] Dragged from ''+ event.detail.from  +'' to : ''+ event.detail.to);
                                  		
                                  		let selectedCols = page.local.selectedColumns;
                                  	  	const draggedItem = selectedCols[event.detail.from];
                                  		  	
                                  		// Reorder the array by moving the item from `from` to `to`
                                  		selectedCols.splice(event.detail.from, 1); // Remove item from original position
                                  		selectedCols.splice(event.detail.to, 0, draggedItem); // Insert item at new position
                                  		
                                  		page.local.selectedColumns = selectedCols;
                                  		
                                  		event.detail.complete();
                                  		resolve();
                                  '
↓PageEvent [ngx.components.UIPageEvent-1667634909158]: 
  viewEvent: onWillLoad
  ↓CallSequence [ngx.components.UIDynamicAction-1667634917133]: 
    beanData: '{"ionBean":"CallSequenceAction","requestable":"plain:lib_BaseRow.formscommon_ApplicationsList"}'
    ↓ReadConfiguration [ngx.components.UICustomAsyncAction-1729087057370]: 
      actionValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
          - com.twinsoft.convertigo.beans.common.FormatedContent: 
            →: |
              '		try {
              			page.c8o.log.debug(''[MB] ''+ props.actionFunction +'': ''+ props.actionName);
              
              			let result: any = await page.callParentFunction("getConfigurationData");
              			page.c8o.log.debug(''[MB] getConfigurationData: '' + result);
              			let output = JSON.parse(result);
              			output.forms_config = result;
              			const authentifiedUser = await page.callParentFunction("getAuthenticatedUser");
              			console.log("authentifiedUser: " + authentifiedUser + " source_owner: " + output.source_owner);
              			output.editorNotOwner = output.source_owner && output.source_owner != authentifiedUser;
              			try{
              				if (page.local.type == "checkbox_group" && output.column != undefined && output.line != undefined) {
              					output.value = output.column;
              					output.displayValue = output.line;
              				}
              			}
              			catch (e) {
              
              			}
              			return output;
              		} catch (e) {
              		
              		}
              '
      ↓SetLocal [ngx.components.UIDynamicAction-1729087093147]: 
        beanData: |
          '{
           "ionBean": "SetLocalAction",
           "Property": "plain:initialSelectedColumns",
           "Value": "source:{\"filter\":\"Action\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"priority\":1729087057370,\"rootEvent\":false,\"pageLocals\":false},{\"priority\":1667634909158,\"rootEvent\":true,\"pageLocals\":false},{\"priority\":1667634917133,\"rootEvent\":false,\"pageLocals\":false}],\"path\":\"?.out\",\"prefix\":\"\",\"suffix\":\"?.columns\",\"custom\":\"\",\"useCustom\":false}}"
          }'
      ↓SetLocal1 [ngx.components.UIDynamicAction-1729087093150]: 
        beanData: |
          '{
           "ionBean": "SetLocalAction",
           "Property": "plain:initialHiddenColumns",
           "Value": "source:{\"filter\":\"Action\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"priority\":1729087057370,\"rootEvent\":false,\"pageLocals\":false},{\"priority\":1667634909158,\"rootEvent\":true,\"pageLocals\":false},{\"priority\":1667634917133,\"rootEvent\":false,\"pageLocals\":false}],\"path\":\"?.out\",\"prefix\":\"\",\"suffix\":\"?.hidden\",\"custom\":\"\",\"useCustom\":false}}"
          }'
      ↓SetLocal3 [ngx.components.UIDynamicAction-1729087093153]: 
        beanData: |
          '{
           "ionBean": "SetLocalAction",
           "Property": "plain:table_id_int",
           "Value": "source:{\"filter\":\"Action\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"priority\":1729087057370,\"rootEvent\":false,\"pageLocals\":false},{\"priority\":1667634909158,\"rootEvent\":true,\"pageLocals\":false},{\"priority\":1667634917133,\"rootEvent\":false,\"pageLocals\":false}],\"path\":\"?.out\",\"prefix\":\"\",\"suffix\":\"?.table_id_int\",\"custom\":\"\",\"useCustom\":false}}"
          }'
      ↓SetLocal2 [ngx.components.UIDynamicAction-1729087093156]: 
        beanData: |
          '{
           "ionBean": "SetLocalAction",
           "Property": "plain:valueColumn",
           "Value": "source:{\"filter\":\"Action\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"priority\":1729087057370,\"rootEvent\":false,\"pageLocals\":false},{\"priority\":1667634909158,\"rootEvent\":true,\"pageLocals\":false},{\"priority\":1667634917133,\"rootEvent\":false,\"pageLocals\":false}],\"path\":\"?.out\",\"prefix\":\"\",\"suffix\":\"?.value\",\"custom\":\"\",\"useCustom\":false}}"
          }'
      ↓SetLocal4 [ngx.components.UIDynamicAction-1729087093159]: 
        beanData: |
          '{
           "ionBean": "SetLocalAction",
           "Property": "plain:displayValueColumn",
           "Value": "source:{\"filter\":\"Action\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"priority\":1729087057370,\"rootEvent\":false,\"pageLocals\":false},{\"priority\":1667634909158,\"rootEvent\":true,\"pageLocals\":false},{\"priority\":1667634917133,\"rootEvent\":false,\"pageLocals\":false}],\"path\":\"?.out\",\"prefix\":\"\",\"suffix\":\"?.displayValue\",\"custom\":\"\",\"useCustom\":false}}"
          }'
      ↓selectedColumns [ngx.components.UIDynamicAction-1729087093162]: 
        beanData: |
          '{
           "ionBean": "SetLocalAction",
           "Property": "plain:selectedColumns",
           "Value": "script:{}"
          }'
      ↓editorNotOwner [ngx.components.UIDynamicAction-1729526815509]: 
        beanData: |
          '{
           "ionBean": "SetLocalAction",
           "Property": "plain:editorNotOwner",
           "Value": "source:{\"filter\":\"Action\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"priority\":1729087057370,\"rootEvent\":false,\"pageLocals\":false},{\"priority\":1667634909158,\"rootEvent\":true,\"pageLocals\":false},{\"priority\":1667634917133,\"rootEvent\":false,\"pageLocals\":false}],\"path\":\"?.out\",\"prefix\":\"\",\"suffix\":\"?.editorNotOwner\",\"custom\":\"\",\"useCustom\":false}}"
          }'
      ↓If [ngx.components.UIDynamicAction-1729087093165]: 
        beanData: '{"ionBean":"IfAction","condition":"source:{\"filter\":\"Action\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"priority\":1729087057370,\"rootEvent\":false,\"pageLocals\":false},{\"priority\":1667634909158,\"rootEvent\":true,\"pageLocals\":false},{\"priority\":1667634917133,\"rootEvent\":false,\"pageLocals\":false}],\"path\":\"?.out\",\"prefix\":\"\",\"suffix\":\"?.table_id\",\"custom\":\"\",\"useCustom\":false}}"}'
        ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1729087093168]: 
          beanData: '{"ionBean":"InvokeAction"}'
          stack: lib_BaseRow.Application.NgxApp.DisplayTableColumns
          ↓forms_config [ngx.components.UIControlVariable-1729516307947]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: source:{"filter":"Action","project":"lib_BaseRow","input":"","model":{"data":[{"priority":1729087057370,"rootEvent":false,"pageLocals":false},{"priority":1667634909158,"rootEvent":true,"pageLocals":false},{"priority":1667634917133,"rootEvent":false,"pageLocals":false}],"path":"?.out","prefix":"","suffix":"?.forms_config","custom":"","useCustom":false}}
        ↓SetLocal [ngx.components.UIDynamicAction-1729087093174]: 
          beanData: |
            '{
             "ionBean": "SetLocalAction",
             "Property": "plain:tableName",
             "Value": "source:{\"filter\":\"Action\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"priority\":1729087057370,\"rootEvent\":false,\"pageLocals\":false},{\"priority\":1667634909158,\"rootEvent\":true,\"pageLocals\":false},{\"priority\":1667634917133,\"rootEvent\":false,\"pageLocals\":false}],\"path\":\"?.out\",\"prefix\":\"\",\"suffix\":\"?.table_id.split(''~>'')[2]\",\"custom\":\"\",\"useCustom\":false}}"
            }'
          tagName: SetLocal
        ↓SetLocal1 [ngx.components.UIDynamicAction-1729087093177]: 
          beanData: |
            '{
             "ionBean": "SetLocalAction",
             "Property": "plain:baseName",
             "Value": "source:{\"filter\":\"Action\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"priority\":1729087057370,\"rootEvent\":false,\"pageLocals\":false},{\"priority\":1667634909158,\"rootEvent\":true,\"pageLocals\":false},{\"priority\":1667634917133,\"rootEvent\":false,\"pageLocals\":false}],\"path\":\"?.out\",\"prefix\":\"\",\"suffix\":\"?.table_id.split(''~>'')[1]\",\"custom\":\"\",\"useCustom\":false}}"
            }'
          tagName: SetLocal
        ↓SetLocal2 [ngx.components.UIDynamicAction-1729087093180]: 
          beanData: |
            '{
             "ionBean": "SetLocalAction",
             "Property": "plain:groupName",
             "Value": "source:{\"filter\":\"Action\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"priority\":1729087057370,\"rootEvent\":false,\"pageLocals\":false},{\"priority\":1667634909158,\"rootEvent\":true,\"pageLocals\":false},{\"priority\":1667634917133,\"rootEvent\":false,\"pageLocals\":false}],\"path\":\"?.out\",\"prefix\":\"\",\"suffix\":\"?.table_id.split(''~>'')[0]\",\"custom\":\"\",\"useCustom\":false}}"
            }'
          tagName: SetLocal
  ↓defineTarget [ngx.components.UICustomAsyncAction-1680694055713]: 
    actionValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
        - com.twinsoft.convertigo.beans.common.FormatedContent: 
          →: |
            		try {
            			window["t"] = page;
            			page.local.type = "table";
            			page.local.target = "table";
            			if(page.navParams.data.target == "table"){
            				page.local.type = "table";
            				if(page.navParams.data.type == "maps_markers" || page.navParams.data.type == "maps_circles" || page.navParams.data.type == "maps_polygons"){
            					page.local.txt_i18n = page.navParams.data.type;
            				}
            				page.local.target = "table";
            			}
            			else if(page.navParams.data.type == "select" || page.navParams.data.type == "checkbox" || page.navParams.data.type == "radio"){
            				page.local.type = "select";
            				page.local.target = "select";
            			}
            			else if(page.navParams.data.type == "radio_group" ||  page.navParams.data.type == "checkbox_group"){
            				page.local.type = "checkbox_group";
            				page.local.target = "select";
            			}
            //			else if (page.navParams.data.type == "chart") {
            //				page.local.type = "chart";
            //				page.local.target = "chart";
            //			}
            		} catch (e) {
            		
            		} finally {
            			
            			return;
            		}
            
↓Footer [ngx.components.UIDynamicElement-1678902748559]: 
  beanData: '{"ionBean":"Footer"}'
  tagName: ion-footer
  ↓ToolBar [ngx.components.UIDynamicElement-1678902748542]: 
    beanData: '{"ionBean":"ToolBar"}'
    tagName: ion-toolbar
    ↓ButtonSet1 [ngx.components.UIDynamicElement-1678902748552]: 
      beanData: '{"ionBean":"ButtonSet","SetPosition":"plain:end"}'
      tagName: ion-buttons
      ↓Button [ngx.components.UIDynamicElement-1678902774222]: 
        beanData: |
          '{
           "ionBean": "Button",
           "IonColor": "plain:primary",
           "IonFill": "plain:solid"
          }'
        tagName: ion-button
        ↓Icon [ngx.components.UIDynamicElement-1678902832988]: 
          beanData: |
            '{
             "ionBean": "Icon",
             "IconName": "plain:checkmark-outline",
             "IconSlot": "plain:start"
            }'
          tagName: ion-icon
        ↓Label [ngx.components.UIDynamicElement-1678902774225]: 
          beanData: '{"ionBean":"Label"}'
          tagName: ion-label
          ↓Text [ngx.components.UIText-1678902774228]: 
            i18n: true
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:Confirm
        ↓Event [ngx.components.UIControlEvent-1678902774231]: 
          ↓ComputeBaserowConfiguration [ngx.components.UICustomAsyncAction-1729156058188]: 
            actionValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    '		try {
                    			page.c8o.log.debug(''[MB] ''+ props.actionFunction +'': ''+ props.actionName);
                    			let conf : any = {
                    				table_id: `${page.local.groupName}~>${page.local.baseName}~>${page.local.tableName}`,
                    				table_id_int: null,
                    				columns: [],
                    				hidden: [],
                    				form_id: await page.callParentFunction("getFormId"),
                    				source_id: await page.callParentFunction("getSourceId"),
                    				source_owner: await page.callParentFunction("getAuthenticatedUser"),
                    			};
                    					
                    			if (page.local.target == "table") {
                    				Object.keys(page.local.selectedColumns).forEach(item => {
                    					conf.table_id_int = page.local.selectedColumns[item]["table_id"]
                    					if (page.local.selectedColumns[item]["selected"]) {
                    						conf.columns.push(page.local.selectedColumns[item]["name"])
                    					}
                    					if (page.local.selectedColumns[item]["hidden"]) {
                    						conf.hidden.push(page.local.selectedColumns[item]["name"])
                    					}
                    				})
                    			}else if(page.local.target == "select" && page.local.type == "checkbox_group"){
                    				Object.keys(page.local.selectedColumns).forEach(item => {
                    					conf.table_id_int = page.local.selectedColumns[item]["table_id"];
                    					if (page.local.selectedColumns[item]["displayValue"]) {
                    						conf.line = item;
                    						conf.columns.push(item);
                    					}
                    					if (page.local.selectedColumns[item]["value"]) {
                    						conf.column = item;
                    						conf.columns.push(item);
                    					}
                    				})
                    			} 
                    			else {
                    				Object.keys(page.local.selectedColumns).forEach(item => {
                    					conf.table_id_int = page.local.selectedColumns[item]["table_id"]
                    					if (page.local.selectedColumns[item]["selected"]) {
                    						conf.columns.push(item)
                    					}
                    					if (page.local.selectedColumns[item]["displayValue"]) {
                    						conf.displayValue = item;
                    					}
                    					if (page.local.selectedColumns[item]["value"]) {
                    						conf.value = item;
                    					}
                    				})
                    				
                    				
                    				/*let col1 = JSON.parse(page.local.displayColumn);
                    				conf.table_id = col1.table_id;
                    				conf.columns.push(col1.name);
                    				if(page.local.diffrentVals){
                    					conf.columns.push(JSON.parse(page.local.valueColumn).name);
                    				}*/
                    			}
                    			console.log("conf", conf);
                    			conf = await page.callParentFunction("setConfigurationData", JSON.stringify(conf));
                    			return conf;
                    		} catch (e) {
                    			return e;
                    		}
                    '
            ↓Log [ngx.components.UIDynamicAction-1678902774237]: 
              beanData: |
                '{
                 "ionBean": "LogAction",
                 "message": "script:JSON.stringify(out)",
                 "level": "plain:warn"
                }'