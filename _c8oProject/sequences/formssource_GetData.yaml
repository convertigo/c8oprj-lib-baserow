comment: Gets data from a baserow table.
↓Input_variables [steps.InputVariablesStep-1665402570169]: 
↓Call_Sequence [steps.SequenceStep-1665402300413]: 
  sourceSequence: lib_BaseRow.TableGetData
  ↓exclude [variables.StepVariable-1665402300415]: 
    comment: 'All the fields are included in the response by default. You can select a subset of fields by providing the exclude query parameter. If you for example provide the following GET parameter `exclude=field_1,field_2` then the fields with id `1` and id `2` are going to be excluded from the selection and response. If the `user_field_names` parameter is provided then instead exclude should be a comma separated list of the actual field names. For field names with commas you should surround the name with quotes like so: `exclude=My Field,"Field With , "`. A backslash can be used to escape field names which contain double quotes like so: `exclude=My Field,Field with \"`.'
    description: exclude
  ↓filter [variables.StepVariable-1665402300417]: 
    comment: |
      'The rows can optionally be filtered by the same view filters available for the views. Multiple filters can be provided if they follow the same format. The field and filter variable indicate how to filter and the value indicates where to filter on.
      
      For example if you provide the following GET parameter `filter__field_1__equal=test` then only rows where the value of field_1 is equal to test are going to be returned.
      
      The following filters are available: equal, not_equal, filename_contains, has_file_type, contains, contains_not, length_is_lower_than, higher_than, lower_than, date_equal, date_before, date_after, date_not_equal, date_equals_today, date_before_today, date_after_today, date_equals_days_ago, date_equals_months_ago, date_equals_years_ago, date_equals_week, date_equals_month, date_equals_day_of_month, date_equals_year, single_select_equal, single_select_not_equal, link_row_has, link_row_has_not, link_row_contains, link_row_not_contains, boolean, empty, not_empty, multiple_select_has, multiple_select_has_not.'
    description: filter__{field}__{filter}
  ↓filter_type [variables.StepVariable-1665402300419]: 
    comment: |
      '`AND`: Indicates that the rows must match all the provided filters.
      `OR`: Indicates that the rows only have to match one of the filters.
      
      This works only if two or more filters are provided.'
    description: filter_type
  ↓include [variables.StepVariable-1665402300421]: 
    comment: 'All the fields are included in the response by default. You can select a subset of fields by providing the include query parameter. If you for example provide the following GET parameter `include=field_1,field_2` then only the fields withid `1` and id `2` are going to be selected and included in the response. If the `user_field_names` parameter is provided then instead include should be a comma separated list of the actual field names. For field names with commas you should surround the name with quotes like so: `include=My Field,"Field With , "`. A backslash can be used to escape field names which contain double quotes like so: `include=My Field,Field with \"`.'
    description: include
  ↓order_by [variables.StepVariable-1665402300423]: 
    comment: 'Optionally the rows can be ordered by provided field ids separated by comma. By default a field is ordered in ascending (A-Z) order, but by prepending the field with a ''-'' it can be ordered descending (Z-A). If the `user_field_names` parameter is provided then instead order_by should be a comma separated list of the actual field names. For field names with commas you should surround the name with quotes like so: `order_by=My Field,"Field With , "`. A backslash can be used to escape field names which contain double quotes like so: `order_by=My Field,Field with \"`.'
    description: order_by
  ↓page [variables.StepVariable-1665402300425]: 
    comment: Defines which page of rows should be returned.
    description: page
  ↓search [variables.StepVariable-1665402300427]: 
    comment: If provided only rows with data that matches the search query are going to be returned.
    description: search
  ↓size [variables.StepVariable-1665402300429]: 
    comment: Defines how many rows should be returned per page.
    description: size
  ↓table_id [variables.StepVariable-1665402300431]: 
    comment: Returns the rows of the table related to the provided value.
    description: table_id
    required: true
    sourceDefinition: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
        - com.twinsoft.convertigo.beans.common.XMLVector: 
          - java.lang.String: 
            - ↑value: 1665402570169
          - java.lang.String: 
            - ↑value: ./forms_table_id/text()
    value: 
  ↓view_id [variables.StepVariable-1665402300433]: 
    comment: Includes all the filters and sorts of the provided view.
    description: view_id
↓IfExist [steps.IfExistStep-1665402674584]: 
  sourceDefinition: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - java.lang.String: 
          - ↑value: 1665402300413
        - java.lang.String: 
          - ↑value: ./document/error
  ↓Error_structure [steps.XMLErrorStep-1665402703369]: 
  ↓Return [steps.ReturnStep-1665402714329]: 
↓Array [steps.JsonArrayStep-1665402723840]: 
  key: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.steps.SmartType
      - SmartType: 
        - ↑mode: PLAIN
        - →→: data
  ↓Iterator [steps.IteratorStep-1665402736681]: 
    sourceDefinition: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
        - com.twinsoft.convertigo.beans.common.XMLVector: 
          - java.lang.String: 
            - ↑value: 1665402300413
          - java.lang.String: 
            - ↑value: ./document/results/object
    ↓Object [steps.JsonObjectStep-1665406203249]: 
      ↓Field1 [steps.JsonFieldStep-1665403149132]: 
        key: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.steps.SmartType
            - SmartType: 
              - ↑mode: PLAIN
              - →→: __rowValue
        value: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.steps.SmartType
            - SmartType: 
              - ↑mode: SOURCE
              - com.twinsoft.convertigo.beans.common.XMLVector: 
                - java.lang.String: 
                  - ↑value: 1665402736681
                - java.lang.String: 
                  - ↑value: ./id/text()
      ↓Iterator [steps.IteratorStep-1665403182897]: 
        sourceDefinition: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
            - com.twinsoft.convertigo.beans.common.XMLVector: 
              - java.lang.String: 
                - ↑value: 1665402736681
              - java.lang.String: 
                - ↑value: ./*
        ↓IfExistThenElse [steps.IfExistThenElseStep-1665406758754]: 
          sourceDefinition: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
              - com.twinsoft.convertigo.beans.common.XMLVector: 
                - java.lang.String: 
                  - ↑value: 1665403182897
                - java.lang.String: 
                  - ↑value: .[@type = 'array']
          ↓jThen [steps.ThenStep-1665406759518]: 
            ↓InitHtmEntry [steps.SimpleStep-1665407550205]: 
              expression: |
                jHtml = "<div>";
                
            ↓Object [steps.JsonObjectStep-1665407248434]: 
              key: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.steps.SmartType
                  - SmartType: 
                    - ↑mode: SOURCE
                    - com.twinsoft.convertigo.beans.common.XMLVector: 
                      - java.lang.String: 
                        - ↑value: 1665403182897
                      - java.lang.String: 
                        - ↑value: name(.)
              ↓Iterator [steps.IteratorStep-1665407450731]: 
                sourceDefinition: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
                    - com.twinsoft.convertigo.beans.common.XMLVector: 
                      - java.lang.String: 
                        - ↑value: 1665403182897
                      - java.lang.String: 
                        - ↑value: ./object/value
                ↓jMyEntry [steps.SimpleSourceStep-1665407661276]: 
                  sourceDefinition: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
                      - com.twinsoft.convertigo.beans.common.XMLVector: 
                        - java.lang.String: 
                          - ↑value: 1665407450731
                        - java.lang.String: 
                          - ↑value: ./text()
                  variableName: jMyEntry
                ↓AddHtmlEntry [steps.SimpleStep-1665407618555]: 
                  expression: jHtml += "<p>" + jMyEntry + "</p>"
              ↓FinishHtmlEntry [steps.SimpleStep-1665407723661]: 
                expression: jHtml += "</div>"
              ↓Field [steps.JsonFieldStep-1665407340859]: 
                key: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.steps.SmartType
                    - SmartType: 
                      - ↑mode: PLAIN
                      - →→: type
                value: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.steps.SmartType
                    - SmartType: 
                      - ↑mode: PLAIN
                      - →→: html
              ↓Field1 [steps.JsonFieldStep-1665407353362]: 
                key: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.steps.SmartType
                    - SmartType: 
                      - ↑mode: PLAIN
                      - →→: displayValue
                value: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.steps.SmartType
                    - SmartType: 
                      - ↑mode: JS
                      - →→: jHtml
          ↓jElse [steps.ElseStep-1665406759520]: 
            ↓Copy [steps.XMLCopyStep-1665409093433]: 
              sourceDefinition: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
                  - com.twinsoft.convertigo.beans.common.XMLVector: 
                    - java.lang.String: 
                      - ↑value: 1665403182897
                    - java.lang.String: 
                      - ↑value: .
↓forms_table_id [variables.RequestableVariable-1665402317348]: 
  comment: Returns the rows of the table related to the provided value.
  description: 
  required: true
  value: 
↓TestOK [core.TestCase]: 
  ↓forms_table_id [variables.TestCaseVariable-1665402530226]: 
    description: configure=lib_BaseRow/DisplayObjects/mobile/selecttable
    required: true
    value: 345