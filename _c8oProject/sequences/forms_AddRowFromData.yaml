accessibility: Hidden
authenticatedContextRequired: true
comment: |
  '{
      "en": {
          "displayName": "Add or update a row in the no-code database",
          "comment": "Add or update a row in a table. Add columns to fill by pressing the + button, and entering a column name and a value for the column. This operation can be repeated as many times as necessary. If ''Create Columns'' option is enabled, a column will be created when the provided column name does not match any column in the table"
      },
      "fr": {
          "displayName": "Ajouter ou mettre à jour une ligne dans la no-code database",
          "comment": "Ajoutez ou mettez à jour une ligne dans une table. Ajoutez des colonnes a renseigner en pressent le bouton +, et en resignant un nom de colonne et une valeur pour la colonne. Cette opération peut être répété autant que necessaire. Si l''option ''Création de colonnes'' est activée, une colonne sera créée quand le nom de colonne fournis ne corresponds à aucune colonne de la table"
      },
      "es": {
          "displayName": "Agregar o actualizar una fila en la no-code database",
          "comment": "Agregue o actualice una fila en una tabla. Agregue columnas para completar presionando el botón +, y proporcionando un nombre de columna y un valor para la columna. Esta operación se puede repetir tantas veces como sea necesario. Si la opción ''Crear Columnas'' está activada, se creará una columna cuando el nombre de columna proporcionado no coincida con ninguna columna en la tabla"
      },
      "it": {
          "displayName": "Aggiungi o aggiorna una riga in il no-code database",
          "comment": "Aggiungi o aggiorna una riga in una tabella. Aggiungi colonne da compilare premendo il pulsante +, e inserendo un nome di colonna e un valore per la colonna. Questa operazione può essere ripetuta quante volte necessario. Se l''opzione ''Crea Colonne'' è abilitata, verrà creata una colonna quando il nome di colonna fornito non corrisponde a nessuna colonna della tabella"
      }
  }'
↓Call_Sequence2 [steps.SequenceStep-1743074271016]: 
  sourceSequence: lib_BaseRow.formscommon_CheckConfig
  ↓forms_config [variables.StepVariable-1743074271019]: 
    description: configure=lib_BaseRow/DisplayObjects/mobile/BrowseTables
    required: true
↓IfError [steps.IfExistStep-1743074271022]: 
  condition: IfError
  sourceDefinition: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - java.lang.String: 
          - ↑value: 1743074271016
        - java.lang.String: 
          - ↑value: ./document/error
  ↓Copy [steps.XMLCopyStep-1743074271025]: 
    sourceDefinition: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
        - com.twinsoft.convertigo.beans.common.XMLVector: 
          - java.lang.String: 
            - ↑value: 1743074271016
          - java.lang.String: 
            - ↑value: ./document/error
  ↓Return [steps.ReturnStep-1743074271028]: 
↓ParseConfig [steps.SimpleStep-1743074271031]: 
  expression: |
    'jConfig = JSON.parse(forms_config);
    table_id = jConfig.table_id;
    view_id = jConfig.view_id ? jConfig.view_id : null;
    
    // For each column provider in the configuration, compute the lits of fields we wloud like to retriev
    // With the BaseRow API.
    if (jConfig.columns) {
    	include_fields ="";
    	jConfig.columns.forEach(col => include_fields += col +",")
    	include_fields = include_fields.substring(0, include_fields.lastIndexOf('',''));
    }
    
    '
↓Input_variables [steps.InputVariablesStep-1743074271034]: 
↓Call_Sequence1 [steps.SequenceStep-1743074271037]: 
  sourceSequence: lib_BaseRow.FieldsList
  ↓table_id [variables.StepVariable-1743074271040]: 
    comment: Returns only the fields of the table related to the provided value.
    description: table_id
    required: true
    value: 
↓jFields [steps.JsonSourceStep-1743074271043]: 
  comment: Get lits of fields and type from BR Table
  sourceDefinition: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - java.lang.String: 
          - ↑value: 1743074271037
        - java.lang.String: 
          - ↑value: ./document/array
  variableName: jFields
↓PrepareData [steps.SimpleStep-1743074271046]: 
  comment: Prepare data to submit according to BR field type
  expression: |
    '// convert XML to JSON doc
    //var jDoc = JSON.parse('''' + com.twinsoft.convertigo.engine.util.XMLUtils.XmlToJson(doc, true, true));
    var jDoc = JSON.parse(forms_freeVars);
    var columnToBeCreated = [];
    data = {}
    for (var key in jDoc) {
    	log.warn("** Key is : [" + key + "] value is : " + jDoc[key])
    	
    	let obj  = jFields.find((object) => object.name === key )
    	var type = obj ? obj.type : null
    	
    	log.warn("** type is : " + type)
    	switch (type) {
    		case ''text'':
    		case ''long_text'':
    		case ''number'':
    		case ''date'':
    		case ''single_select'':
    		case ''boolean'':
    			data[key] = jDoc[key];
    			break;
    
    		case ''link_row'':
    			data[key] = [jDoc[key]];
    			break;
    
    		case ''file'':
    			data[key] = [];  // will be filled further on  by the attachment loop.
    			break;
    				
    		case null:
    			if(forms_createColumn == "true"){
    				columnToBeCreated.push({name: key, type: "text"});
    				data[key] = jDoc[key];
    			}
    			else{
    				log.warn("** key: " + key + " doesn''t exists in target table")
    			}
    			break;
    		default: 
    			log.warn("** type: " + type + " is not yet handled")
    	}
    }
    var toto = "tito";
    
    '
↓jIterator [steps.SimpleIteratorStep-1743074271049]: 
  comment: Handle Attachements
  expression: Object.keys(jDoc)
  isEnabled: false
  ↓jIf [steps.IfStep-1743074271052]: 
    comment: If From field type is an attachment (Photo)
    condition: jDoc[item].att_type === true
    ↓getAttachmentName [steps.SimpleStep-1743074271055]: 
      comment: Get the Attachement name and build a local file path to read the attachment from CouchDB
      expression: |
        'function makeid(length) {
            var result           = '''';
            var characters       = ''ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'';
            var charactersLength = characters.length;
            for ( var i = 0; i < length; i++ ) {
              result += characters.charAt(Math.floor(Math.random() * charactersLength));
           }
           return result;
        }
        
        var filesToDelete = [];
        var _use_attname = jDoc[item].name;
        var _use_docid   = jDoc._id;
        
        b64Value = "";
        var fileName = new Date().getTime() + "_" + makeid(20);
        var dir = context.getProjectDirectory()+"/attachments/";
        var _use_attpath = dir + fileName;
         
        log.warn("_use_attpath log" + _use_attpath);
        filesToDelete.push(_use_attpath)
        '
      output: true
    ↓Call_Transaction [steps.TransactionStep-1743074271058]: 
      comment: read the attachment in the workspace
      output: true
      sourceTransaction: lib_BaseRow.c8oforms_response_fs.GetDocumentAttachment
      ↓_use_attname [variables.StepVariable-1743074271061]: 
        description: Attachment name
      ↓_use_docid [variables.StepVariable-1743074271064]: 
        description: Document ID
      ↓_use_attpath [variables.StepVariable-1743074271067]: 
        description: Attachment path  This path is either absolute or relative to Convertigo environment. Relative paths starting with:<br/><br/>• <span class="computer">./</span> are relative to Convertigo workspace,<br/>• <span class="computer">.//</span> are relative to current project folder. <br/><br/>
    ↓jSimpleSource1 [steps.SimpleSourceStep-1743074271070]: 
      sourceDefinition: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: 1743074271058
            - java.lang.String: 
              - ↑value: ./document/couchdb_output/_c8oMeta/headers/Content_Type/text()
      variableName: contentType
    ↓element [steps.ElementStep-1743074271073]: 
      expression: _use_attpath
      nodeName: AttachmentPath
    ↓Call_Sequence [steps.SequenceStep-1743074271076]: 
      comment: Push it to BR
      sourceSequence: lib_BaseRow.TokenGetOrRefresh
    ↓Call_Transaction1 [steps.TransactionStep-1743074271079]: 
      sourceTransaction: lib_BaseRow.Baserow_API_spec._api_user_files_upload_file__POST
      ↓__header_Authorization [variables.StepVariable-1743074271082]: 
        sourceDefinition: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
            - com.twinsoft.convertigo.beans.common.XMLVector: 
              - java.lang.String: 
                - ↑value: 1743074271076
              - java.lang.String: 
                - ↑value: ./document/Bearer/text()
      ↓file [variables.StepVariable-1743074271085]: 
        sourceDefinition: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
            - com.twinsoft.convertigo.beans.common.XMLVector: 
              - java.lang.String: 
                - ↑value: 1743074271073
              - java.lang.String: 
                - ↑value: ./text()
    ↓Delete_file [steps.DeleteStep-1743074271088]: 
      comment: Delete attachment from workspace as it has been uploaded
      sourcePath: filesToDelete[0]
    ↓jAttachmentName [steps.SimpleSourceStep-1743074271091]: 
      comment: Get the BR Attachment ID
      sourceDefinition: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: 1743074271079
            - java.lang.String: 
              - ↑value: ./document/object/name/text()
      variableName: jAttachmentName
    ↓AddAttachementToBRField [steps.SimpleStep-1743074271094]: 
      comment: Add this id to the data
      expression: |
        'data[_use_attname].push({
        	name: jAttachmentName
        });
        '
  ↓jIf1 [steps.IfStep-1743074271097]: 
    comment: If From field type is an uploaded file, can be an array of files
    condition: jDoc[item].type === 'file'
    ↓SaveItemToRespItem [steps.SimpleStep-1743074271100]: 
      expression: |
        let respItem = item;
        let respIndex = index;
        
        
    ↓jIterator [steps.SimpleIteratorStep-1743074271103]: 
      expression: jDoc.variable.resp[respItem].value
      ↓getAttachmentName [steps.SimpleStep-1743074271106]: 
        comment: Get the Attachement name and build a local file path to read the attachment from CouchDB
        expression: |
          'function makeid(length) {
              var result           = '''';
              var characters       = ''ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'';
              var charactersLength = characters.length;
              for ( var i = 0; i < length; i++ ) {
                result += characters.charAt(Math.floor(Math.random() * charactersLength));
             }
             return result;
          }
          
          var filesToDelete = [];
          var _use_attname = item;
          var _use_docid   = jDoc.variable._id;
          
          b64Value = "";
          var fileName = new Date().getTime() + "_" + makeid(20);
          var dir = context.getProjectDirectory()+"/attachments/";
          var _use_attpath = dir + fileName;
           
          log.warn("_use_attpath: " + _use_attpath);
          log.warn("_use_attname: " + _use_attpath);
          filesToDelete.push(_use_attpath)
          '
        output: true
      ↓Call_Transaction [steps.TransactionStep-1743074271109]: 
        comment: read the attachment in the workspace
        output: true
        sourceTransaction: lib_BaseRow.c8oforms_response_fs.GetDocumentAttachment
        ↓_use_attname [variables.StepVariable-1743074271112]: 
          description: Attachment name
        ↓_use_docid [variables.StepVariable-1743074271115]: 
          description: Document ID
        ↓_use_attpath [variables.StepVariable-1743074271118]: 
          description: Attachment path  This path is either absolute or relative to Convertigo environment. Relative paths starting with:<br/><br/>• <span class="computer">./</span> are relative to Convertigo workspace,<br/>• <span class="computer">.//</span> are relative to current project folder. <br/><br/>
      ↓jSimpleSource1 [steps.SimpleSourceStep-1743074271121]: 
        sourceDefinition: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
            - com.twinsoft.convertigo.beans.common.XMLVector: 
              - java.lang.String: 
                - ↑value: 1743074271109
              - java.lang.String: 
                - ↑value: ./document/couchdb_output/_c8oMeta/headers/Content_Type/text()
        variableName: contentType
      ↓element [steps.ElementStep-1743074271124]: 
        expression: _use_attpath
        nodeName: AttachmentPath
      ↓Call_Sequence [steps.SequenceStep-1743074271127]: 
        comment: Push it to BR
        sourceSequence: lib_BaseRow.TokenGetOrRefresh
      ↓Call_Transaction1 [steps.TransactionStep-1743074271130]: 
        sourceTransaction: lib_BaseRow.Baserow_API_spec._api_user_files_upload_file__POST
        ↓__header_Authorization [variables.StepVariable-1743074271133]: 
          sourceDefinition: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
              - com.twinsoft.convertigo.beans.common.XMLVector: 
                - java.lang.String: 
                  - ↑value: 1743074271127
                - java.lang.String: 
                  - ↑value: ./document/Bearer/text()
        ↓file [variables.StepVariable-1743074271136]: 
          sourceDefinition: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
              - com.twinsoft.convertigo.beans.common.XMLVector: 
                - java.lang.String: 
                  - ↑value: 1743074271124
                - java.lang.String: 
                  - ↑value: ./text()
      ↓Delete_file [steps.DeleteStep-1743074271139]: 
        comment: Delete attachment from workspace as it has been uploaded
        sourcePath: filesToDelete[0]
      ↓jAttachmentName [steps.SimpleSourceStep-1743074271142]: 
        comment: Get the BR Attachment ID
        sourceDefinition: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
            - com.twinsoft.convertigo.beans.common.XMLVector: 
              - java.lang.String: 
                - ↑value: 1743074271130
              - java.lang.String: 
                - ↑value: ./document/object/name/text()
        variableName: jAttachmentName
      ↓AddAttachementToBRField [steps.SimpleStep-1743074271145]: 
        comment: Add this id to the data
        expression: |
          'data[jDoc.variable.resp[respItem].name].push({
          	name: jAttachmentName
          });
          '
↓StringifyData [steps.SimpleStep-1743074271148]: 
  expression: |
    data = JSON.stringify(data);
    
↓jIf1 [steps.IfStep-1743074271151]: 
  condition: forms_createColumn == "true" && columnToBeCreated.length > 0
  ↓jIterator [steps.SimpleIteratorStep-1743074271154]: 
    expression: columnToBeCreated
    ↓Sequence_JS [steps.SimpleStep-1743074271157]: 
      expression: |
        //todo
        var data = JSON.stringify(item);
    ↓Call_Sequence [steps.SequenceStep-1743074271160]: 
      output: true
      sourceSequence: lib_BaseRow.TableCreateColumn
      ↓table_id [variables.StepVariable-1743074271163]: 
        comment: Insert row in this table_id
        description: table_id
        required: true
      ↓data [variables.StepVariable-1743074271166]: 
        comment: A JSON object with each field name and value
        required: true
  ↓Call_Sequence1 [steps.SequenceStep-1743074271169]: 
    isEnabled: false
    sourceSequence: lib_BaseRow.FieldsList
    ↓table_id [variables.StepVariable-1743074271172]: 
      comment: Returns only the fields of the table related to the provided value.
      description: table_id
      required: true
      value: 
  ↓jFields [steps.JsonSourceStep-1743074271175]: 
    comment: Get lits of fields and type from BR Table
    isEnabled: false
    sourceDefinition: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
        - com.twinsoft.convertigo.beans.common.XMLVector: 
          - java.lang.String: 
            - ↑value: 1743074271169
          - java.lang.String: 
            - ↑value: ./document/array
    variableName: jFields
  ↓PrepareData [steps.SimpleStep-1743074271178]: 
    comment: Prepare data to submit according to BR field type
    expression: |
      '// convert XML to JSON doc
      var jDoc = JSON.parse('''' + com.twinsoft.convertigo.engine.util.XMLUtils.XmlToJson(doc, true, true));
      var columnToBeCreated = [];
      data = {}
      for (var key in jDoc.variable.resp) {
      	log.warn("** Key is : [" + key + "] value is : " + jDoc.variable.resp[key].value)
      	
      	let obj  = jFields.find((object) => object.name === key )
      	let type = obj ? obj.type : null
      	
      	log.warn("** type is : " + type)
      	switch (type) {
      		case ''text'':
      		case ''long_text'':
      		case ''number'':
      		case ''date'':
      		case ''single_select'':
      		case ''boolean'':
      			data[key] = jDoc.variable.resp[key].value;
      			break;
      
      		case ''link_row'':
      			data[key] = [jDoc.variable.resp[key].value];
      			break;
      
      		case ''file'':
      			data[key] = [];  // will be filled further on  by the attachment loop.
      			break;
      				
      		case null:
      			if(forms_createColumn == "true"){
      				columnToBeCreated.push({name: key, type: "text"});
      				data[key] = jDoc.variable.resp[key].value;
      			}
      			else{
      				log.warn("** key: " + key + " doesn''t exists in target table")
      			}
      			break;
      		default: 
      			log.warn("** type: " + type + " is not yet handled")
      	}
      }
      
      '
    isEnabled: false
  ↓jIterator1 [steps.SimpleIteratorStep-1743074271181]: 
    comment: Handle Attachements
    expression: Object.keys(jDoc.variable.resp)
    isEnabled: false
    ↓jIf [steps.IfStep-1743074271184]: 
      comment: If From field type is an attachment (Photo)
      condition: jDoc.variable.resp[item].att_type === true
      ↓getAttachmentName [steps.SimpleStep-1743074271187]: 
        comment: Get the Attachement name and build a local file path to read the attachment from CouchDB
        expression: |
          'function makeid(length) {
              var result           = '''';
              var characters       = ''ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'';
              var charactersLength = characters.length;
              for ( var i = 0; i < length; i++ ) {
                result += characters.charAt(Math.floor(Math.random() * charactersLength));
             }
             return result;
          }
          
          var filesToDelete = [];
          var _use_attname = jDoc.variable.resp[item].name;
          var _use_docid   = jDoc.variable._id;
          
          b64Value = "";
          var fileName = new Date().getTime() + "_" + makeid(20);
          var dir = context.getProjectDirectory()+"/attachments/";
          var _use_attpath = dir + fileName;
           
          log.warn("_use_attpath log" + _use_attpath);
          filesToDelete.push(_use_attpath)
          '
        output: true
      ↓Call_Transaction [steps.TransactionStep-1743074271190]: 
        comment: read the attachment in the workspace
        output: true
        sourceTransaction: lib_BaseRow.c8oforms_response_fs.GetDocumentAttachment
        ↓_use_attname [variables.StepVariable-1743074271193]: 
          description: Attachment name
        ↓_use_docid [variables.StepVariable-1743074271196]: 
          description: Document ID
        ↓_use_attpath [variables.StepVariable-1743074271199]: 
          description: Attachment path  This path is either absolute or relative to Convertigo environment. Relative paths starting with:<br/><br/>• <span class="computer">./</span> are relative to Convertigo workspace,<br/>• <span class="computer">.//</span> are relative to current project folder. <br/><br/>
      ↓jSimpleSource1 [steps.SimpleSourceStep-1743074271202]: 
        sourceDefinition: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
            - com.twinsoft.convertigo.beans.common.XMLVector: 
              - java.lang.String: 
                - ↑value: 1743074271190
              - java.lang.String: 
                - ↑value: ./document/couchdb_output/_c8oMeta/headers/Content_Type/text()
        variableName: contentType
      ↓element [steps.ElementStep-1743074271205]: 
        expression: _use_attpath
        nodeName: AttachmentPath
      ↓Call_Sequence [steps.SequenceStep-1743074271208]: 
        comment: Push it to BR
        sourceSequence: lib_BaseRow.TokenGetOrRefresh
      ↓Call_Transaction1 [steps.TransactionStep-1743074271211]: 
        sourceTransaction: lib_BaseRow.Baserow_API_spec._api_user_files_upload_file__POST
        ↓__header_Authorization [variables.StepVariable-1743074271214]: 
          sourceDefinition: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
              - com.twinsoft.convertigo.beans.common.XMLVector: 
                - java.lang.String: 
                  - ↑value: 1743074271208
                - java.lang.String: 
                  - ↑value: ./document/Bearer/text()
        ↓file [variables.StepVariable-1743074271217]: 
          sourceDefinition: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
              - com.twinsoft.convertigo.beans.common.XMLVector: 
                - java.lang.String: 
                  - ↑value: 1743074271205
                - java.lang.String: 
                  - ↑value: ./text()
      ↓Delete_file [steps.DeleteStep-1743074271220]: 
        comment: Delete attachment from workspace as it has been uploaded
        sourcePath: filesToDelete[0]
      ↓jAttachmentName [steps.SimpleSourceStep-1743074271223]: 
        comment: Get the BR Attachment ID
        sourceDefinition: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
            - com.twinsoft.convertigo.beans.common.XMLVector: 
              - java.lang.String: 
                - ↑value: 1743074271211
              - java.lang.String: 
                - ↑value: ./document/object/name/text()
        variableName: jAttachmentName
      ↓AddAttachementToBRField [steps.SimpleStep-1743074271226]: 
        comment: Add this id to the data
        expression: |
          'data[_use_attname].push({
          	name: jAttachmentName
          });
          '
    ↓jIf1 [steps.IfStep-1743074271229]: 
      comment: If From field type is an uploaded file, can be an array of files
      condition: jDoc.variable.resp[item].type === 'file'
      ↓SaveItemToRespItem [steps.SimpleStep-1743074271232]: 
        expression: |
          let respItem = item;
          let respIndex = index;
          
          
      ↓jIterator [steps.SimpleIteratorStep-1743074271235]: 
        expression: jDoc.variable.resp[respItem].value
        ↓getAttachmentName [steps.SimpleStep-1743074271238]: 
          comment: Get the Attachement name and build a local file path to read the attachment from CouchDB
          expression: |
            'function makeid(length) {
                var result           = '''';
                var characters       = ''ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'';
                var charactersLength = characters.length;
                for ( var i = 0; i < length; i++ ) {
                  result += characters.charAt(Math.floor(Math.random() * charactersLength));
               }
               return result;
            }
            
            var filesToDelete = [];
            var _use_attname = item;
            var _use_docid   = jDoc.variable._id;
            
            b64Value = "";
            var fileName = new Date().getTime() + "_" + makeid(20);
            var dir = context.getProjectDirectory()+"/attachments/";
            var _use_attpath = dir + fileName;
             
            log.warn("_use_attpath: " + _use_attpath);
            log.warn("_use_attname: " + _use_attpath);
            filesToDelete.push(_use_attpath)
            '
          output: true
        ↓Call_Transaction [steps.TransactionStep-1743074271241]: 
          comment: read the attachment in the workspace
          output: true
          sourceTransaction: lib_BaseRow.c8oforms_response_fs.GetDocumentAttachment
          ↓_use_attname [variables.StepVariable-1743074271244]: 
            description: Attachment name
          ↓_use_docid [variables.StepVariable-1743074271247]: 
            description: Document ID
          ↓_use_attpath [variables.StepVariable-1743074271250]: 
            description: Attachment path  This path is either absolute or relative to Convertigo environment. Relative paths starting with:<br/><br/>• <span class="computer">./</span> are relative to Convertigo workspace,<br/>• <span class="computer">.//</span> are relative to current project folder. <br/><br/>
        ↓jSimpleSource1 [steps.SimpleSourceStep-1743074271253]: 
          sourceDefinition: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
              - com.twinsoft.convertigo.beans.common.XMLVector: 
                - java.lang.String: 
                  - ↑value: 1743074271241
                - java.lang.String: 
                  - ↑value: ./document/couchdb_output/_c8oMeta/headers/Content_Type/text()
          variableName: contentType
        ↓element [steps.ElementStep-1743074271256]: 
          expression: _use_attpath
          nodeName: AttachmentPath
        ↓Call_Sequence [steps.SequenceStep-1743074271259]: 
          comment: Push it to BR
          sourceSequence: lib_BaseRow.TokenGetOrRefresh
        ↓Call_Transaction1 [steps.TransactionStep-1743074271262]: 
          sourceTransaction: lib_BaseRow.Baserow_API_spec._api_user_files_upload_file__POST
          ↓__header_Authorization [variables.StepVariable-1743074271265]: 
            sourceDefinition: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
                - com.twinsoft.convertigo.beans.common.XMLVector: 
                  - java.lang.String: 
                    - ↑value: 1743074271259
                  - java.lang.String: 
                    - ↑value: ./document/Bearer/text()
          ↓file [variables.StepVariable-1743074271268]: 
            sourceDefinition: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
                - com.twinsoft.convertigo.beans.common.XMLVector: 
                  - java.lang.String: 
                    - ↑value: 1743074271256
                  - java.lang.String: 
                    - ↑value: ./text()
        ↓Delete_file [steps.DeleteStep-1743074271271]: 
          comment: Delete attachment from workspace as it has been uploaded
          sourcePath: filesToDelete[0]
        ↓jAttachmentName [steps.SimpleSourceStep-1743074271274]: 
          comment: Get the BR Attachment ID
          sourceDefinition: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
              - com.twinsoft.convertigo.beans.common.XMLVector: 
                - java.lang.String: 
                  - ↑value: 1743074271262
                - java.lang.String: 
                  - ↑value: ./document/object/name/text()
          variableName: jAttachmentName
        ↓AddAttachementToBRField [steps.SimpleStep-1743074271277]: 
          comment: Add this id to the data
          expression: |
            'data[jDoc.variable.resp[respItem].name].push({
            	name: jAttachmentName
            });
            '
  ↓StringifyData [steps.SimpleStep-1743074271280]: 
    expression: |
      data = JSON.stringify(data);
      
    isEnabled: false
↓jIfThenElse [steps.IfThenElseStep-1743074271283]: 
  condition: forms_id != '' && forms_id != null && forms_id != undefined
  ↓jThen [steps.ThenStep-1743074271286]: 
    ↓MakeRowID [steps.SimpleStep-1743074271289]: 
      expression: |
        row_id = forms_id
        
        
    ↓Call_Sequence [steps.SequenceStep-1743074271292]: 
      comment: Push the row to BR
      sourceSequence: lib_BaseRow.TableUpdateRow
      ↓table_id [variables.StepVariable-1743074271295]: 
        comment: Insert row in this table_id
        description: table_id
        required: true
      ↓row_id [variables.StepVariable-1743074271298]: 
        comment: Insert row in this table_id
        description: table_id
        required: true
      ↓data [variables.StepVariable-1743074271301]: 
    ↓IfExist [steps.IfExistStep-1743074271304]: 
      sourceDefinition: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: 1743074271316
            - java.lang.String: 
              - ↑value: ./document/error
      ↓Error_structure [steps.XMLErrorStep-1743074271307]: 
        message: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.steps.SmartType
            - SmartType: 
              - ↑mode: SOURCE
              - com.twinsoft.convertigo.beans.common.XMLVector: 
                - java.lang.String: 
                  - ↑value: 1743074271316
                - java.lang.String: 
                  - ↑value: ./document/error/message/text()
      ↓Return [steps.ReturnStep-1743074271310]: 
  ↓jElse [steps.ElseStep-1743074271313]: 
    ↓Call_Sequence [steps.SequenceStep-1743074271316]: 
      comment: Push the row to BR
      output: true
      sourceSequence: lib_BaseRow.TableCreateRow
      ↓data [variables.StepVariable-1743074271319]: 
        comment: A JSON object with each field name and value
        required: true
      ↓table_id [variables.StepVariable-1743074271322]: 
        comment: Insert row in this table_id
        description: table_id
        required: true
      ↓before [variables.StepVariable-1743074271325]: 
        comment: If provided then the newly created row will be positioned before the row with the provided id.
        description: before
    ↓IfExist [steps.IfExistStep-1743074271328]: 
      sourceDefinition: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: 1743074271316
            - java.lang.String: 
              - ↑value: ./document/error
      ↓Error_structure [steps.XMLErrorStep-1743074271331]: 
        message: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.steps.SmartType
            - SmartType: 
              - ↑mode: SOURCE
              - com.twinsoft.convertigo.beans.common.XMLVector: 
                - java.lang.String: 
                  - ↑value: 1743074271316
                - java.lang.String: 
                  - ↑value: ./document/error/message/text()
      ↓Return [steps.ReturnStep-1743074271334]: 
↓forms_config [variables.RequestableVariable-1743074271337]: 
  comment: |
    '{
        "en": {
            "comment": "Choose a table in the no-code database",
            "displayName": "Configuration"
        },
        "fr": {
            "comment": "Choisissez une table dans la no-code database",
            "displayName": "Configuration"
        },
        "es": {
            "comment": "Elija una tabla en la no-code database",
            "displayName": "Configuración"
        },
        "it": {
            "comment": "Scegli una tabella in il no-code database",
            "displayName": "Configurazione"
        }
    }'
  description: configure=lib_BaseRow/DisplayObjects/mobile/BrowseTables?noCols=true
  required: true
  value: 
↓doc [variables.RequestableVariable-1743074271340]: 
↓originalDoc [variables.RequestableVariable-1743074271343]: 
↓forms_id [variables.RequestableVariable-1743074271346]: 
  comment: |
    '{
        "en": {
            "comment": "The Identifier of the row to update. If not set, the action will add a row. If set, all row''s columns identified by the ''technicalID'' will be updated",
            "displayName": "Identifier"
        },
        "fr": {
            "comment": "L''identifiant de la ligne à mettre à jour. S''il n''est pas défini, l''action ajoutera une ligne. S''il est défini, toutes les colonnes de la ligne identifiées par l''ID technique seront mises à jour",
            "displayName": "Identifiant"
        },
        "es": {
            "comment": "El identificador de la fila a actualizar. Si no se establece, la acción agregará una fila. Si se establece, se actualizarán todas las columnas de la fila identificadas por el ''ID técnico''",
            "displayName": "Identificador"
        },
        "it": {
            "comment": "L''identificatore della riga da aggiornare. Se non impostato, l''azione aggiungerà una riga. Se impostato, tutte le colonne della riga identificate dal ''technicalID'' verranno aggiornate",
            "displayName": "Identificatore"
        }
    }'
↓forms_createColumn [variables.RequestableVariable-1743074271349]: 
  comment: |
    '{
        "en": {
            "comment": "Create a column if a field identifier does not match any column in the table",
            "displayName": "Columns creation"
        },
        "fr": {
            "comment": "Créer une colonne si un identifiant de champ ne correspond à aucune colonne dans le tableau",
            "displayName": "Création de colonnes"
        },
        "es": {
            "comment": "Crear una columna si un identificador de campo no coincide con ninguna columna en la tabla",
            "displayName": "Creación de columnas"
        },
        "it": {
            "comment": "Creare una colonna se un identificatore di campo non corrisponde a nessuna colonna nella tabella",
            "displayName": "Creazione di colonne"
        }
    }'
  description: boolean
  value: 
↓forms_freeVars [variables.RequestableVariable-1743074328692]: 
  comment: |
    '{
        "en": {
            "comment": "Enter a column name and a value to associate with it",
            "displayName": "Column name"
        },
        "fr": {
            "comment": "Renseigner un nom de colonne et une valeur à y associer",
            "displayName": "Nom de la colonne"
        },
        "es": {
            "comment": "Ingrese un nombre de columna y un valor para asociar con él",
            "displayName": "Nombre de la columna"
        },
        "it": {
            "comment": "Inserisci un nome di colonna e un valore da associarvi",
            "displayName": "Nome della colonna"
        }
    }'
  description: __c8o_multi