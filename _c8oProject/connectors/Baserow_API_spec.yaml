baseDir: 
port: ${lib_baserow.port}
server: ${lib_baserow.server}
↓_api_admin_dashboard__GET [transactions.JsonHttpTransaction]: 
  ↑default: true
  comment: |
    Returns the new and active users for the last 24 hours, 7 days and 30 days. The `previous_` values are the values of the period before, so for example `previous_new_users_last_24_hours` are the new users that signed up from 48 to 24 hours ago. It can be used to calculate an increase or decrease in the amount of signups. A list of the new and active users for every day for the last 30 days is also included.
    
    This is a **premium** feature.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  subDir: /api/admin/dashboard/
↓_api_admin_groups__GET [transactions.JsonHttpTransaction]: 
  comment: |
    Returns all groups with detailed information on each group, if the requesting user is staff.
    
    This is a **premium** feature.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  subDir: /api/admin/groups/
  ↓page [variables.RequestableHttpVariable-1664959340672]: 
    comment: Defines which page should be returned.
    description: page
    httpName: page
  ↓search [variables.RequestableHttpVariable-1664959340674]: 
    comment: If provided only groups that match the query will be returned.
    description: search
    httpName: search
  ↓size [variables.RequestableHttpVariable-1664959340676]: 
    comment: Defines how many groups should be returned per page.
    description: size
    httpName: size
  ↓sorts [variables.RequestableHttpVariable-1664959340678]: 
    comment: 'A comma separated string of attributes to sort by, each attribute must be prefixed with `+` for a descending sort or a `-` for an ascending sort. The accepted attribute names are: id, name, application_count, created_on. For example `sorts=-id,-name` will sort the groups first by descending id and then ascending name. A sortparameter with multiple instances of the same sort attribute will respond with the ERROR_ADMIN_LISTING_INVALID_SORT_ATTRIBUTE error.'
    description: sorts
    httpName: sorts
↓_api_admin_groups__group_id___DELETE [transactions.JsonHttpTransaction]: 
  comment: |
    Deletes the specified group and the applications inside that group, if the requesting user is staff. 
    
    This is a **premium** feature.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  httpVerb: DELETE
  subDir: /api/admin/groups/{group_id}/
  ↓group_id [variables.RequestableHttpVariable-1664959340682]: 
    comment: The id of the group to delete
    description: group_id
    required: true
    value: 
↓_api_admin_users__GET [transactions.JsonHttpTransaction]: 
  comment: |
    Returns all users with detailed information on each user, if the requesting user is staff. 
    
    This is a **premium** feature.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  subDir: /api/admin/users/
  ↓page [variables.RequestableHttpVariable-1664959340686]: 
    comment: Defines which page should be returned.
    description: page
    httpName: page
  ↓search [variables.RequestableHttpVariable-1664959340688]: 
    comment: If provided only users that match the query will be returned.
    description: search
    httpName: search
  ↓size [variables.RequestableHttpVariable-1664959340690]: 
    comment: Defines how many users should be returned per page.
    description: size
    httpName: size
  ↓sorts [variables.RequestableHttpVariable-1664959340692]: 
    comment: 'A comma separated string of attributes to sort by, each attribute must be prefixed with `+` for a descending sort or a `-` for an ascending sort. The accepted attribute names are: id, is_active, name, username, date_joined, last_login. For example `sorts=-id,-is_active` will sort the users first by descending id and then ascending is_active. A sortparameter with multiple instances of the same sort attribute will respond with the ERROR_ADMIN_LISTING_INVALID_SORT_ATTRIBUTE error.'
    description: sorts
    httpName: sorts
↓_api_admin_users__user_id___DELETE [transactions.JsonHttpTransaction]: 
  comment: |
    Deletes the specified user, if the requesting user has admin permissions. You cannot delete yourself. 
    
    This is a **premium** feature.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  httpVerb: DELETE
  subDir: /api/admin/users/{user_id}/
  ↓user_id [variables.RequestableHttpVariable-1664959340696]: 
    comment: The id of the user to delete
    description: user_id
    required: true
    value: 
↓_api_admin_users__user_id___PATCH [transactions.JsonHttpTransaction]: 
  comment: |
    Updates specified user attributes and returns the updated user if the requesting user is staff. You cannot update yourself to no longer be an admin or active. 
    
    This is a **premium** feature.
  customHttpVerb: PATCH
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/json
  httpVerb: PUT
  subDir: /api/admin/users/{user_id}/
  ↓__body [variables.RequestableHttpVariable-1664959340700]: 
    httpMethod: POST
    required: true
  ↓user_id [variables.RequestableHttpVariable-1664959340702]: 
    comment: The id of the user to edit
    description: user_id
    required: true
    value: 
↓_api_admin_users_impersonate__POST [transactions.JsonHttpTransaction]: 
  comment: |
    This endpoint allows staff to impersonate another user by requesting a JWT token and user object. The requesting user must have staff access in order to do this. It's not possible to impersonate a superuser or staff.
    
    This is a **premium** feature.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/json
  httpVerb: POST
  subDir: /api/admin/users/impersonate/
  ↓__body [variables.RequestableHttpVariable-1664959340706]: 
    httpMethod: POST
    required: true
↓_api_applications__application_id___DELETE [transactions.JsonHttpTransaction]: 
  comment: Deletes an application if the authorized user is in the application's group. All the related children are also going to be deleted. For example in case of a database application all the underlying tables, fields, views and rows are going to be deleted.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  httpVerb: DELETE
  subDir: /api/applications/{application_id}/
  ↓__header_ClientSessionId [variables.RequestableHttpVariable-1664959340716]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone.
    description: ClientSessionId
  ↓__header_ClientUndoRedoActionGroupId [variables.RequestableHttpVariable-1664959340718]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call.
    description: ClientUndoRedoActionGroupId
  ↓application_id [variables.RequestableHttpVariable-1664959340720]: 
    comment: Deletes the application related to the provided value.
    description: application_id
    required: true
    value: 
↓_api_applications__application_id___GET [transactions.JsonHttpTransaction]: 
  comment: Returns the requested application if the authorized user is in the application's group. The properties that belong to the application can differ per type.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  subDir: /api/applications/{application_id}/
  ↓application_id [variables.RequestableHttpVariable-1664959340712]: 
    comment: Returns the application related to the provided value.
    description: application_id
    required: true
    value: 
↓_api_applications__application_id___PATCH [transactions.JsonHttpTransaction]: 
  comment: Updates the existing application related to the provided `application_id` param if the authorized user is in the application's group. It is not possible to change the type, but properties like the name can be changed.
  customHttpVerb: PATCH
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/json
  httpVerb: PUT
  subDir: /api/applications/{application_id}/
  ↓__body [variables.RequestableHttpVariable-1664959340724]: 
    httpMethod: POST
    required: true
  ↓__header_ClientSessionId [variables.RequestableHttpVariable-1664959340726]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone.
    description: ClientSessionId
  ↓__header_ClientUndoRedoActionGroupId [variables.RequestableHttpVariable-1664959340728]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call.
    description: ClientUndoRedoActionGroupId
  ↓application_id [variables.RequestableHttpVariable-1664959340730]: 
    comment: Updates the application related to the provided value.
    description: application_id
    required: true
    value: 
↓_api_applications__application_id__duplicate_async__POST [transactions.JsonHttpTransaction]: 
  comment: Duplicate an application if the authorized user is in the application's group. All the related children are also going to be duplicated. For example in case of a database application all the underlying tables, fields, views and rows are going to be duplicated.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  httpVerb: POST
  subDir: /api/applications/{application_id}/duplicate/async/
  ↓__header_ClientSessionId [variables.RequestableHttpVariable-1664959340734]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone.
    description: ClientSessionId
  ↓__header_ClientUndoRedoActionGroupId [variables.RequestableHttpVariable-1664959340736]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call.
    description: ClientUndoRedoActionGroupId
  ↓application_id [variables.RequestableHttpVariable-1664959340738]: 
    comment: The id of the application to duplicate.
    description: application_id
    required: true
    value: 
↓_api_applications__GET [transactions.JsonHttpTransaction]: 
  comment: Lists all the applications that the authorized user has access to. The properties that belong to the application can differ per type. An application always belongs to a single group. All the applications of the groups that the user has access to are going to be listed here.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  subDir: /api/applications/
↓_api_applications_group__group_id___GET [transactions.JsonHttpTransaction]: 
  comment: Lists all the applications of the group related to the provided `group_id` parameter if the authorized user is in that group. If thegroup is related to a template, then this endpoint will be publicly accessible. The properties that belong to the application can differ per type. An application always belongs to a single group.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  subDir: /api/applications/group/{group_id}/
  ↓group_id [variables.RequestableHttpVariable-1664959340742]: 
    comment: Returns only applications that are in the group related to the provided value.
    description: group_id
    required: true
    value: 
↓_api_applications_group__group_id___POST [transactions.JsonHttpTransaction]: 
  comment: Creates a new application based on the provided type. The newly created application is going to be added to the group related to the provided `group_id` parameter. If the authorized user does not belong to the group an error will be returned.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/json
  httpVerb: POST
  subDir: /api/applications/group/{group_id}/
  ↓__body [variables.RequestableHttpVariable-1664959340746]: 
    httpMethod: POST
    required: true
  ↓__header_ClientSessionId [variables.RequestableHttpVariable-1664959340748]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone.
    description: ClientSessionId
  ↓__header_ClientUndoRedoActionGroupId [variables.RequestableHttpVariable-1664959340750]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call.
    description: ClientUndoRedoActionGroupId
  ↓group_id [variables.RequestableHttpVariable-1664959340752]: 
    comment: Creates an application for the group related to the provided value.
    description: group_id
    required: true
    value: 
↓_api_applications_group__group_id__order__POST [transactions.JsonHttpTransaction]: 
  comment: Changes the order of the provided application ids to the matching position that the id has in the list. If the authorized user does not belong to the group it will be ignored. The order of the not provided tables will be set to `0`.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/json
  httpVerb: POST
  subDir: /api/applications/group/{group_id}/order/
  ↓__body [variables.RequestableHttpVariable-1664959340756]: 
    httpMethod: POST
    required: true
  ↓__header_ClientSessionId [variables.RequestableHttpVariable-1664959340758]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone.
    description: ClientSessionId
  ↓__header_ClientUndoRedoActionGroupId [variables.RequestableHttpVariable-1664959340760]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call.
    description: ClientUndoRedoActionGroupId
  ↓group_id [variables.RequestableHttpVariable-1664959340762]: 
    comment: Updates the order of the applications in the group related to the provided value.
    description: group_id
    required: true
    value: 
↓_api_Auth [transactions.JsonHttpTransaction]: 
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
  httpVerb: POST
  subDir: /api/user/token-auth/
  ↓__body [variables.RequestableHttpVariable-1664964075425]: 
    httpMethod: POST
↓_api_database_export__job_id___GET [transactions.JsonHttpTransaction]: 
  comment: Returns information such as export progress and status or the url of the exported file for the specified export job, only if the requesting user has access.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  subDir: /api/database/export/{job_id}/
  ↓job_id [variables.RequestableHttpVariable-1664959340766]: 
    comment: The job id to lookup information about.
    description: job_id
    required: true
    value: 
↓_api_database_export_table__table_id___POST [transactions.JsonHttpTransaction]: 
  comment: Creates and starts a new export job for a table given some exporter options. Returns an error if the requesting user does not have permissionsto view the table.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/json
  httpVerb: POST
  subDir: /api/database/export/table/{table_id}/
  ↓__body [variables.RequestableHttpVariable-1664959340770]: 
    httpMethod: POST
    required: true
  ↓table_id [variables.RequestableHttpVariable-1664959340772]: 
    comment: The table id to create and start an export job for
    description: table_id
    required: true
    value: 
↓_api_database_fields__field_id___DELETE [transactions.JsonHttpTransaction]: 
  comment: Deletes the existing field if the authorized user has access to the related database's group. Note that all the related data to that field is also deleted. Primary fields cannot be deleted because their value represents the row. If deleting the field causes other fields to change then the specificinstances of those fields will be included in the related fields response key.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  httpVerb: DELETE
  subDir: /api/database/fields/{field_id}/
  ↓__header_ClientSessionId [variables.RequestableHttpVariable-1664959340780]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone.
    description: ClientSessionId
  ↓__header_ClientUndoRedoActionGroupId [variables.RequestableHttpVariable-1664959340782]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call.
    description: ClientUndoRedoActionGroupId
  ↓field_id [variables.RequestableHttpVariable-1664959340784]: 
    comment: Deletes the field related to the provided value.
    description: field_id
    required: true
    value: 
↓_api_database_fields__field_id___GET [transactions.JsonHttpTransaction]: 
  comment: Returns the existing field if the authorized user has access to the related database's group. Depending on the type different properties could be returned.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  subDir: /api/database/fields/{field_id}/
  ↓field_id [variables.RequestableHttpVariable-1664959340776]: 
    comment: Returns the field related to the provided value.
    description: field_id
    required: true
    value: 
↓_api_database_fields__field_id___PATCH [transactions.JsonHttpTransaction]: 
  comment: Updates the existing field if the authorized user has access to the related database's group. The type can also be changed and depending on that type, different additional properties can optionally be set. If you change the field type it could happen that the data conversion fails, in that case the `ERROR_CANNOT_CHANGE_FIELD_TYPE` is returned, but this rarely happens. If a data value cannot be converted it is set to `null` so data might go lost.If updated the field causes other fields to change then the specificinstances of those fields will be included in the related fields response key.
  customHttpVerb: PATCH
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/json
  httpVerb: PUT
  subDir: /api/database/fields/{field_id}/
  ↓__body [variables.RequestableHttpVariable-1664959340788]: 
    httpMethod: POST
    required: true
  ↓__header_ClientSessionId [variables.RequestableHttpVariable-1664959340790]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone.
    description: ClientSessionId
  ↓__header_ClientUndoRedoActionGroupId [variables.RequestableHttpVariable-1664959340792]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call.
    description: ClientUndoRedoActionGroupId
  ↓field_id [variables.RequestableHttpVariable-1664959340794]: 
    comment: Updates the field related to the provided value.
    description: field_id
    required: true
    value: 
↓_api_database_fields__field_id__duplicate_async__POST [transactions.JsonHttpTransaction]: 
  comment: Duplicates the table with the provided `table_id` parameter if the authorized user has access to the database's group.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  httpVerb: POST
  subDir: /api/database/fields/{field_id}/duplicate/async/
  ↓__header_ClientSessionId [variables.RequestableHttpVariable-1664959340798]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone.
    description: ClientSessionId
  ↓__header_ClientUndoRedoActionGroupId [variables.RequestableHttpVariable-1664959340800]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call.
    description: ClientUndoRedoActionGroupId
  ↓field_id [variables.RequestableHttpVariable-1664959340802]: 
    comment: The field to duplicate.
    description: field_id
    required: true
    value: 
↓_api_database_fields__field_id__unique_row_values__GET [transactions.JsonHttpTransaction]: 
  comment: Returns a list of all the unique row values for an existing field, sorted in order of frequency.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  subDir: /api/database/fields/{field_id}/unique_row_values/
  ↓field_id [variables.RequestableHttpVariable-1664959340806]: 
    comment: Returns the values related to the provided field.
    description: field_id
    required: true
    value: 
  ↓limit [variables.RequestableHttpVariable-1664959340808]: 
    comment: Defines how many values should be returned.
    description: limit
    httpName: limit
  ↓split_comma_separated [variables.RequestableHttpVariable-1664959340810]: 
    comment: Indicates whether the original column values must be splitted by comma.
    description: split_comma_separated
    httpName: split_comma_separated
↓_api_database_fields_table__table_id___GET [transactions.JsonHttpTransaction]: 
  comment: Lists all the fields of the table related to the provided parameter if the user has access to the related database's group. If the group is related to a template, then this endpoint will be publicly accessible. A table consists of fields and each field can have a different type. Each type can have different properties. A field is comparable with a regular table's column.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  responseExpiryDate: absolute,1
  subDir: /api/database/fields/table/{table_id}/
  ↓table_id [variables.RequestableHttpVariable-1664959340814]: 
    comment: Returns only the fields of the table related to the provided value.
    description: table_id
    required: true
    value: 
↓_api_database_fields_table__table_id___POST [transactions.JsonHttpTransaction]: 
  comment: Creates a new field for the table related to the provided `table_id` parameter if the authorized user has access to the related database's group. Depending on the type, different properties can optionally be set.If creating the field causes other fields to change then the specificinstances of those fields will be included in the related fields response key.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/json
  httpVerb: POST
  subDir: /api/database/fields/table/{table_id}/
  ↓__body [variables.RequestableHttpVariable-1664959340818]: 
    httpMethod: POST
    required: true
  ↓__header_ClientSessionId [variables.RequestableHttpVariable-1664959340820]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone.
    description: ClientSessionId
  ↓__header_ClientUndoRedoActionGroupId [variables.RequestableHttpVariable-1664959340822]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call.
    description: ClientUndoRedoActionGroupId
  ↓table_id [variables.RequestableHttpVariable-1664959340824]: 
    comment: Creates a new field for the provided table related to the value.
    description: table_id
    required: true
    value: 
↓_api_database_formula__table_id__type__POST [transactions.JsonHttpTransaction]: 
  comment: Calculates and returns the type of the specified formula value. Does not change the state of the field in any way.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/json
  httpVerb: POST
  subDir: /api/database/formula/{table_id}/type/
  ↓__body [variables.RequestableHttpVariable-1664959340828]: 
    httpMethod: POST
    required: true
  ↓table_id [variables.RequestableHttpVariable-1664959340830]: 
    comment: The table id of the formula field to type.
    description: table_id
    required: true
    value: 
↓_api_database_rows_names__GET [transactions.JsonHttpTransaction]: 
  comment: Returns the names of the given row of the given tables. The nameof a row is the primary field value for this row. The result can be usedfor example, when you want to display the name of a linked row from another table.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  subDir: /api/database/rows/names/
  ↓table__{id} [variables.RequestableHttpVariable-1664959340834]: 
    comment: A list of comma separated row ids to query from the table with id {id}. For example, if you want the name of row `42` and `43` from table `28` this parameter will be `table__28=42,43`. You can specify multiple rows for different tables but every tables must be in the same database. You need at least read permission on all specified tables.
    description: table__{id}
    httpName: table__{id}
↓_api_database_rows_table__table_id___GET [transactions.JsonHttpTransaction]: 
  comment: Lists all the rows of the table related to the provided parameter if the user has access to the related database's group. The response is paginated by a page/size style. It is also possible to provide an optional search query, only rows where the data matches the search query are going to be returned then. The properties of the returned rows depends on which fields the table has. For a complete overview of fields use the **list_database_table_fields** endpoint to list them all. In the example all field types are listed, but normally the number in field_{id} key is going to be the id of the field. Or if the GET parameter `user_field_names` is provided then the keys will be the name of the field. The value is what the user has provided and the format of it depends on the fields type.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  subDir: /api/database/rows/table/{table_id}/?{filterExpression}
  ↓exclude [variables.RequestableHttpVariable-1664959340838]: 
    comment: 'All the fields are included in the response by default. You can select a subset of fields by providing the exclude query parameter. If you for example provide the following GET parameter `exclude=field_1,field_2` then the fields with id `1` and id `2` are going to be excluded from the selection and response. If the `user_field_names` parameter is provided then instead exclude should be a comma separated list of the actual field names. For field names with commas you should surround the name with quotes like so: `exclude=My Field,"Field With , "`. A backslash can be used to escape field names which contain double quotes like so: `exclude=My Field,Field with \"`.'
    description: exclude
    httpName: exclude
  ↓filter_type [variables.RequestableHttpVariable-1664959340842]: 
    comment: |
      '`AND`: Indicates that the rows must match all the provided filters.
      `OR`: Indicates that the rows only have to match one of the filters.
      
      This works only if two or more filters are provided.'
    description: filter_type
    httpName: filter_type
  ↓include_fields [variables.RequestableHttpVariable-1664959340844]: 
    comment: 'All the fields are included in the response by default. You can select a subset of fields by providing the include query parameter. If you for example provide the following GET parameter `include=field_1,field_2` then only the fields withid `1` and id `2` are going to be selected and included in the response. If the `user_field_names` parameter is provided then instead include should be a comma separated list of the actual field names. For field names with commas you should surround the name with quotes like so: `include=My Field,"Field With , "`. A backslash can be used to escape field names which contain double quotes like so: `include=My Field,Field with \"`.'
    description: include
    httpName: include
  ↓order_by [variables.RequestableHttpVariable-1664959340846]: 
    comment: 'Optionally the rows can be ordered by provided field ids separated by comma. By default a field is ordered in ascending (A-Z) order, but by prepending the field with a ''-'' it can be ordered descending (Z-A). If the `user_field_names` parameter is provided then instead order_by should be a comma separated list of the actual field names. For field names with commas you should surround the name with quotes like so: `order_by=My Field,"Field With , "`. A backslash can be used to escape field names which contain double quotes like so: `order_by=My Field,Field with \"`.'
    description: order_by
    httpName: order_by
  ↓page [variables.RequestableHttpVariable-1664959340848]: 
    comment: Defines which page of rows should be returned.
    description: page
    httpName: page
  ↓search [variables.RequestableHttpVariable-1664959340850]: 
    comment: If provided only rows with data that matches the search query are going to be returned.
    description: search
    httpName: search
  ↓size [variables.RequestableHttpVariable-1664959340852]: 
    comment: Defines how many rows should be returned per page.
    description: size
    httpName: size
  ↓table_id [variables.RequestableHttpVariable-1664959340854]: 
    comment: Returns the rows of the table related to the provided value.
    description: table_id
    required: true
    value: 
  ↓user_field_names [variables.RequestableHttpVariable-1664959340856]: 
    comment: A flag query parameter which if provided the returned json will use the user specified field names instead of internal Baserow field names (field_123 etc). 
    description: user_field_names
    httpName: user_field_names
  ↓view_id [variables.RequestableHttpVariable-1664959340858]: 
    comment: Includes all the filters and sorts of the provided view.
    description: view_id
    httpName: view_id
  ↓filterExpression [variables.RequestableHttpVariable-1665915462365]: 
    value: 
↓_api_database_rows_table__table_id___POST [transactions.JsonHttpTransaction]: 
  comment: Creates a new row in the table if the user has access to the related table's group. The accepted body fields are depending on the fields that the table has. For a complete overview of fields use the **list_database_table_fields** to list them all. None of the fields are required, if they are not provided the value is going to be `null` or `false` or some default value is that is set. If you want to add a value for the field with for example id `10`, the key must be named `field_10`. Or instead if the `user_field_names` GET param is provided the key must be the name of the field. Of course multiple fields can be provided in one request. In the examples below you will find all the different field types, the numbers/ids in the example are just there for example purposes, the field_ID must be replaced with the actual id of the field or the name of the field if `user_field_names` is provided.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/json
  httpVerb: POST
  subDir: /api/database/rows/table/{table_id}/
  ↓__body [variables.RequestableHttpVariable-1664959340862]: 
    httpMethod: POST
    required: true
  ↓__header_ClientSessionId [variables.RequestableHttpVariable-1664959340864]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone.
    description: ClientSessionId
  ↓__header_ClientUndoRedoActionGroupId [variables.RequestableHttpVariable-1664959340866]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call.
    description: ClientUndoRedoActionGroupId
  ↓before [variables.RequestableHttpVariable-1664959340868]: 
    comment: If provided then the newly created row will be positioned before the row with the provided id.
    description: before
    httpName: before
  ↓table_id [variables.RequestableHttpVariable-1664959340870]: 
    comment: Creates a row in the table related to the provided value.
    description: table_id
    required: true
    value: 
  ↓user_field_names [variables.RequestableHttpVariable-1664959340872]: 
    comment: A flag query parameter which if provided this endpoint will expect and return the user specified field names instead of internal Baserow field names (field_123 etc).
    description: user_field_names
    httpName: user_field_names
↓_api_database_rows_table__table_id___row_id___DELETE [transactions.JsonHttpTransaction]: 
  comment: Deletes an existing row in the table if the user has access to the table's group.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  httpVerb: DELETE
  subDir: /api/database/rows/table/{table_id}/{row_id}/
  ↓__header_ClientSessionId [variables.RequestableHttpVariable-1664959340884]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone.
    description: ClientSessionId
  ↓__header_ClientUndoRedoActionGroupId [variables.RequestableHttpVariable-1664959340886]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call.
    description: ClientUndoRedoActionGroupId
  ↓row_id [variables.RequestableHttpVariable-1664959340888]: 
    comment: Deletes the row related to the value.
    description: row_id
    required: true
    value: 
  ↓table_id [variables.RequestableHttpVariable-1664959340890]: 
    comment: Deletes the row in the table related to the value.
    description: table_id
    required: true
    value: 
↓_api_database_rows_table__table_id___row_id___GET [transactions.JsonHttpTransaction]: 
  comment: Fetches an existing row from the table if the user has access to the related table's group. The properties of the returned row depend on which fields the table has. For a complete overview of fields use the **list_database_table_fields** endpoint to list them all. In the example all field types are listed, but normally the number in field_{id} key is going to be the id of the field of the field. Or if the GET parameter `user_field_names` is provided then the keys will be the name of the field. The value is what the user has provided and the format of it depends on the fields type.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  subDir: /api/database/rows/table/{table_id}/{row_id}/
  ↓row_id [variables.RequestableHttpVariable-1664959340876]: 
    comment: Returns the row related the provided value.
    description: row_id
    required: true
    value: 
  ↓table_id [variables.RequestableHttpVariable-1664959340878]: 
    comment: Returns the row of the table related to the provided value.
    description: table_id
    required: true
    value: 
  ↓user_field_names [variables.RequestableHttpVariable-1664959340880]: 
    comment: A flag query parameter which if provided the returned json will use the user specified field names instead of internal Baserow field names (field_123 etc). 
    description: user_field_names
    httpName: user_field_names
↓_api_database_rows_table__table_id___row_id___PATCH [transactions.JsonHttpTransaction]: 
  comment: Updates an existing row in the table if the user has access to the related table's group. The accepted body fields are depending on the fields that the table has. For a complete overview of fields use the **list_database_table_fields** endpoint to list them all. None of the fields are required, if they are not provided the value is not going to be updated. When you want to update a value for the field with id `10`, the key must be named `field_10`. Or if the GET parameter `user_field_names` is provided the key of the field to update must be the name of the field. Multiple different fields to update can be provided in one request. In the examples below you will find all the different field types, the numbers/ids in the example are just there for example purposes, the field_ID must be replaced with the actual id of the field or the name of the field if `user_field_names` is provided.
  customHttpVerb: PATCH
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/json
  httpVerb: PUT
  subDir: /api/database/rows/table/{table_id}/{row_id}/
  ↓__body [variables.RequestableHttpVariable-1664959340894]: 
    httpMethod: POST
    required: true
  ↓__header_ClientSessionId [variables.RequestableHttpVariable-1664959340896]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone.
    description: ClientSessionId
  ↓__header_ClientUndoRedoActionGroupId [variables.RequestableHttpVariable-1664959340898]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call.
    description: ClientUndoRedoActionGroupId
  ↓row_id [variables.RequestableHttpVariable-1664959340900]: 
    comment: Updates the row related to the value.
    description: row_id
    required: true
    value: 
  ↓table_id [variables.RequestableHttpVariable-1664959340902]: 
    comment: Updates the row in the table related to the value.
    description: table_id
    required: true
    value: 
  ↓user_field_names [variables.RequestableHttpVariable-1664959340904]: 
    comment: A flag query parameter which if provided this endpoint will expect and return the user specified field names instead of internal Baserow field names (field_123 etc).
    description: user_field_names
    httpName: user_field_names
↓_api_database_rows_table__table_id___row_id__adjacent__GET [transactions.JsonHttpTransaction]: 
  comment: Fetches the adjacent row to a given row_id in the table with the given table_id. If the previous flag is set it will return the previous row, otherwise it will return the next row. You can specifya view_id and it will apply the filters and sorts of the provided view.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  subDir: /api/database/rows/table/{table_id}/{row_id}/adjacent/
  ↓previous [variables.RequestableHttpVariable-1664959340908]: 
    comment: A flag query parameter which if provided returns theprevious row to the specified row_id. If it's not setit will return the next row.
    description: previous
    httpName: previous
  ↓row_id [variables.RequestableHttpVariable-1664959340910]: 
    comment: Returns the row adjacent the provided value.
    description: row_id
    required: true
    value: 
  ↓search [variables.RequestableHttpVariable-1664959340912]: 
    comment: If provided, the adjacent row will be one that matchesthe search query.
    description: search
    httpName: search
  ↓table_id [variables.RequestableHttpVariable-1664959340914]: 
    comment: Returns the row of the table related to the provided value.
    description: table_id
    required: true
    value: 
  ↓user_field_names [variables.RequestableHttpVariable-1664959340916]: 
    comment: A flag query parameter which if provided the returned json will use the user specified field names instead of internal Baserow field names (field_123 etc). 
    description: user_field_names
    httpName: user_field_names
  ↓view_id [variables.RequestableHttpVariable-1664959340918]: 
    comment: Applies the filters and sorts of the provided view.
    description: view_id
    httpName: view_id
↓_api_database_rows_table__table_id___row_id__move__PATCH [transactions.JsonHttpTransaction]: 
  comment: Moves the row related to given `row_id` parameter to another position. It is only possible to move the row before another existing row or to the end. If the `before_id` is provided then the row related to the `row_id` parameter is moved before that row. If the `before_id` parameter is not provided, then the row will be moved to the end.
  customHttpVerb: PATCH
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  httpVerb: PUT
  subDir: /api/database/rows/table/{table_id}/{row_id}/move/
  ↓__header_ClientSessionId [variables.RequestableHttpVariable-1664959340922]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone.
    description: ClientSessionId
  ↓__header_ClientUndoRedoActionGroupId [variables.RequestableHttpVariable-1664959340924]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call.
    description: ClientUndoRedoActionGroupId
  ↓before_id [variables.RequestableHttpVariable-1664959340926]: 
    comment: Moves the row related to the given `row_id` before the row related to the provided value. If not provided, then the row will be moved to the end.
    description: before_id
    httpName: before_id
  ↓row_id [variables.RequestableHttpVariable-1664959340928]: 
    comment: Moves the row related to the value.
    description: row_id
    required: true
    value: 
  ↓table_id [variables.RequestableHttpVariable-1664959340930]: 
    comment: Moves the row in the table related to the value.
    description: table_id
    required: true
    value: 
  ↓user_field_names [variables.RequestableHttpVariable-1664959340932]: 
    comment: A flag query parameter which if provided the returned json will use the user specified field names instead of internal Baserow field names (field_123 etc). 
    description: user_field_names
    httpName: user_field_names
↓_api_database_rows_table__table_id__batch__PATCH [transactions.JsonHttpTransaction]: 
  comment: |
    Updates existing rows in the table if the user has access to the related table's group. The accepted body fields are depending on the fields that the table has. For a complete overview of fields use the **list_database_table_fields** endpoint to list them all. None of the fields are required, if they are not provided the value is not going to be updated. When you want to update a value for the field with id `10`, the key must be named `field_10`. Or if the GET parameter `user_field_names` is provided the key of the field to update must be the name of the field. Multiple different fields to update can be provided for each row. In the examples below you will find all the different field types, the numbers/ids in the example are just there for example purposes, the field_ID must be replaced with the actual id of the field or the name of the field if `user_field_names` is provided.
    
     **WARNING:** This endpoint doesn't yet work with row updated webhooks.
  customHttpVerb: PATCH
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/json
  httpVerb: PUT
  subDir: /api/database/rows/table/{table_id}/batch/
  ↓__body [variables.RequestableHttpVariable-1664959340950]: 
    httpMethod: POST
    required: true
  ↓__header_ClientSessionId [variables.RequestableHttpVariable-1664959340952]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone.
    description: ClientSessionId
  ↓__header_ClientUndoRedoActionGroupId [variables.RequestableHttpVariable-1664959340954]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call.
    description: ClientUndoRedoActionGroupId
  ↓table_id [variables.RequestableHttpVariable-1664959340956]: 
    comment: Updates the rows in the table.
    description: table_id
    required: true
    value: 
  ↓user_field_names [variables.RequestableHttpVariable-1664959340958]: 
    comment: A flag query parameter which if provided this endpoint will expect and return the user specified field names instead of internal Baserow field names (field_123 etc).
    description: user_field_names
    httpName: user_field_names
↓_api_database_rows_table__table_id__batch__POST [transactions.JsonHttpTransaction]: 
  comment: |
    Creates new rows in the table if the user has access to the related table's group. The accepted body fields are depending on the fields that the table has. For a complete overview of fields use the **list_database_table_fields** to list them all. None of the fields are required, if they are not provided the value is going to be `null` or `false` or some default value is that is set. If you want to add a value for the field with for example id `10`, the key must be named `field_10`. Or instead if the `user_field_names` GET param is provided the key must be the name of the field. Of course multiple fields can be provided in one request. In the examples below you will find all the different field types, the numbers/ids in the example are just there for example purposes, the field_ID must be replaced with the actual id of the field or the name of the field if `user_field_names` is provided.
    
     **WARNING:** This endpoint doesn't yet work with row created webhooks.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/json
  httpVerb: POST
  subDir: /api/database/rows/table/{table_id}/batch/
  ↓__body [variables.RequestableHttpVariable-1664959340936]: 
    httpMethod: POST
    required: true
  ↓__header_ClientSessionId [variables.RequestableHttpVariable-1664959340938]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone.
    description: ClientSessionId
  ↓__header_ClientUndoRedoActionGroupId [variables.RequestableHttpVariable-1664959340940]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call.
    description: ClientUndoRedoActionGroupId
  ↓before [variables.RequestableHttpVariable-1664959340942]: 
    comment: If provided then the newly created rows will be positioned before the row with the provided id.
    description: before
    httpName: before
  ↓table_id [variables.RequestableHttpVariable-1664959340944]: 
    comment: Creates the rows in the table.
    description: table_id
    required: true
    value: 
  ↓user_field_names [variables.RequestableHttpVariable-1664959340946]: 
    comment: A flag query parameter which if provided this endpoint will expect and return the user specified field names instead of internal Baserow field names (field_123 etc).
    description: user_field_names
    httpName: user_field_names
↓_api_database_rows_table__table_id__batch_delete__POST [transactions.JsonHttpTransaction]: 
  comment: |
    Deletes existing rows in the table if the user has access to the table's group.
    
     **WARNING:**  This endpoint doesn't yet work with row deleted webhooks.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/json
  httpVerb: POST
  subDir: /api/database/rows/table/{table_id}/batch-delete/
  ↓__body [variables.RequestableHttpVariable-1664959340962]: 
    httpMethod: POST
    required: true
  ↓__header_ClientSessionId [variables.RequestableHttpVariable-1664959340964]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone.
    description: ClientSessionId
  ↓__header_ClientUndoRedoActionGroupId [variables.RequestableHttpVariable-1664959340966]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call.
    description: ClientUndoRedoActionGroupId
  ↓table_id [variables.RequestableHttpVariable-1664959340968]: 
    comment: Deletes the rows in the table related to the value.
    description: table_id
    required: true
    value: 
↓_api_database_tables__table_id___DELETE [transactions.JsonHttpTransaction]: 
  comment: Deletes the existing table if the authorized user has access to the related database's group.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  httpVerb: DELETE
  subDir: /api/database/tables/{table_id}/
  ↓__header_ClientSessionId [variables.RequestableHttpVariable-1664959340976]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone.
    description: ClientSessionId
  ↓__header_ClientUndoRedoActionGroupId [variables.RequestableHttpVariable-1664959340978]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call.
    description: ClientUndoRedoActionGroupId
  ↓table_id [variables.RequestableHttpVariable-1664959340980]: 
    comment: Deletes the table related to the provided value.
    description: table_id
    required: true
    value: 
↓_api_database_tables__table_id___GET [transactions.JsonHttpTransaction]: 
  comment: Returns the requested table if the authorized user has access to the related database's group.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  subDir: /api/database/tables/{table_id}/
  ↓table_id [variables.RequestableHttpVariable-1664959340972]: 
    comment: Returns the table related to the provided value.
    description: table_id
    required: true
    value: 
↓_api_database_tables__table_id___PATCH [transactions.JsonHttpTransaction]: 
  comment: Updates the existing table if the authorized user has access to the related database's group.
  customHttpVerb: PATCH
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/json
  httpVerb: PUT
  subDir: /api/database/tables/{table_id}/
  ↓__body [variables.RequestableHttpVariable-1664959340984]: 
    httpMethod: POST
    required: true
  ↓__header_ClientSessionId [variables.RequestableHttpVariable-1664959340986]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone.
    description: ClientSessionId
  ↓__header_ClientUndoRedoActionGroupId [variables.RequestableHttpVariable-1664959340988]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call.
    description: ClientUndoRedoActionGroupId
  ↓table_id [variables.RequestableHttpVariable-1664959340990]: 
    comment: Updates the table related to the provided value.
    description: table_id
    required: true
    value: 
↓_api_database_tables__table_id__duplicate_async__POST [transactions.JsonHttpTransaction]: 
  comment: Duplicates the table with the provided `table_id` parameter if the authorized user has access to the database's group.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  httpVerb: POST
  subDir: /api/database/tables/{table_id}/duplicate/async/
  ↓__header_ClientSessionId [variables.RequestableHttpVariable-1664959340994]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone.
    description: ClientSessionId
  ↓__header_ClientUndoRedoActionGroupId [variables.RequestableHttpVariable-1664959340996]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call.
    description: ClientUndoRedoActionGroupId
  ↓table_id [variables.RequestableHttpVariable-1664959340998]: 
    comment: The table to duplicate.
    description: table_id
    required: true
    value: 
↓_api_database_tables__table_id__import_async__POST [transactions.JsonHttpTransaction]: 
  comment: Import data in the specified table if the authorized user has access to the related database's group. This endpoint is asynchronous and return the created job to track the progress of the task.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/json
  httpVerb: POST
  subDir: /api/database/tables/{table_id}/import/async/
  ↓__body [variables.RequestableHttpVariable-1664959341002]: 
    httpMethod: POST
    required: true
  ↓table_id [variables.RequestableHttpVariable-1664959341004]: 
    comment: Import data into the table related to the provided value.
    description: table_id
    required: true
    value: 
↓_api_database_tables_database__database_id___GET [transactions.JsonHttpTransaction]: 
  comment: Lists all the tables that are in the database related to the `database_id` parameter if the user has access to the database's group. A table is exactly as the name suggests. It can hold multiple fields, each having their own type and multiple rows. They can be added via the **create_database_table_field** and **create_database_table_row** endpoints.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  subDir: /api/database/tables/database/{database_id}/
  ↓database_id [variables.RequestableHttpVariable-1664959341008]: 
    comment: Returns only tables that are related to the provided value.
    description: database_id
    required: true
    value: 
↓_api_database_tables_database__database_id___POST [transactions.JsonHttpTransaction]: 
  comment: |
    Creates synchronously a new table for the database related to the provided `database_id` parameter if the authorized user has access to the database's group.
    
    As an alternative you can use the `create_async_database_table` for better performances and importing bigger files.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/json
  httpVerb: POST
  subDir: /api/database/tables/database/{database_id}/
  ↓__body [variables.RequestableHttpVariable-1664959341012]: 
    httpMethod: POST
    required: true
  ↓__header_ClientSessionId [variables.RequestableHttpVariable-1664959341014]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone.
    description: ClientSessionId
  ↓__header_ClientUndoRedoActionGroupId [variables.RequestableHttpVariable-1664959341016]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call.
    description: ClientUndoRedoActionGroupId
  ↓database_id [variables.RequestableHttpVariable-1664959341018]: 
    comment: Creates a table for the database related to the provided value.
    description: database_id
    required: true
    value: 
↓_api_database_tables_database__database_id__async__POST [transactions.JsonHttpTransaction]: 
  comment: Creates a job that creates a new table for the database related to the provided `database_id` parameter if the authorized user has access to the database's group. This endpoint is asynchronous and return the created job to track the progress of the task.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/json
  httpVerb: POST
  subDir: /api/database/tables/database/{database_id}/async/
  ↓__body [variables.RequestableHttpVariable-1664959341022]: 
    httpMethod: POST
    required: true
  ↓__header_ClientSessionId [variables.RequestableHttpVariable-1664959341024]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone.
    description: ClientSessionId
  ↓database_id [variables.RequestableHttpVariable-1664959341026]: 
    comment: Creates a table for the database related to the provided value.
    description: database_id
    required: true
    value: 
↓_api_database_tables_database__database_id__order__POST [transactions.JsonHttpTransaction]: 
  comment: Changes the order of the provided table ids to the matching position that the id has in the list. If the authorized user does not belong to the group it will be ignored. The order of the not provided tables will be set to `0`.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/json
  httpVerb: POST
  subDir: /api/database/tables/database/{database_id}/order/
  ↓__body [variables.RequestableHttpVariable-1664959341030]: 
    httpMethod: POST
    required: true
  ↓__header_ClientSessionId [variables.RequestableHttpVariable-1664959341032]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone.
    description: ClientSessionId
  ↓__header_ClientUndoRedoActionGroupId [variables.RequestableHttpVariable-1664959341034]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call.
    description: ClientUndoRedoActionGroupId
  ↓database_id [variables.RequestableHttpVariable-1664959341036]: 
    comment: Updates the order of the tables in the database related to the provided value.
    description: database_id
    required: true
    value: 
↓_api_database_tokens__GET [transactions.JsonHttpTransaction]: 
  comment: Lists all the API tokens that belong to the authorized user. An API token can be used to create, read, update and delete rows in the tables of the token's group. It only works on the tables if the token has the correct permissions. The **Database table rows** endpoints can be used for these operations.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  subDir: /api/database/tokens/
↓_api_database_tokens__POST [transactions.JsonHttpTransaction]: 
  comment: Creates a new API token for a given group and for the authorized user.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/json
  httpVerb: POST
  subDir: /api/database/tokens/
  ↓__body [variables.RequestableHttpVariable-1664959341042]: 
    httpMethod: POST
    required: true
↓_api_database_tokens__token_id___DELETE [transactions.JsonHttpTransaction]: 
  comment: Deletes the existing token if it is owned by the authorized user and ifthe user has access to the related group.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  httpVerb: DELETE
  subDir: /api/database/tokens/{token_id}/
  ↓token_id [variables.RequestableHttpVariable-1664959341050]: 
    comment: Deletes the token related to the provided value.
    description: token_id
    required: true
    value: 
↓_api_database_tokens__token_id___GET [transactions.JsonHttpTransaction]: 
  comment: Returns the requested token if it is owned by the authorized user andif the user has access to the related group.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  subDir: /api/database/tokens/{token_id}/
  ↓token_id [variables.RequestableHttpVariable-1664959341046]: 
    comment: Returns the token related to the provided value.
    description: token_id
    required: true
    value: 
↓_api_database_tokens__token_id___PATCH [transactions.JsonHttpTransaction]: 
  comment: Updates the existing token if it is owned by the authorized user and ifthe user has access to the related group.
  customHttpVerb: PATCH
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/json
  httpVerb: PUT
  subDir: /api/database/tokens/{token_id}/
  ↓__body [variables.RequestableHttpVariable-1664959341054]: 
    httpMethod: POST
    required: true
  ↓token_id [variables.RequestableHttpVariable-1664959341056]: 
    comment: Updates the token related to the provided value.
    description: token_id
    required: true
    value: 
↓_api_database_tokens_check__GET [transactions.JsonHttpTransaction]: 
  comment: This endpoint check be used to check if the provided personal API token is valid. If returns a `200` response if so and a `403` is not. This can be used by integrations like Zapier or n8n to test if a token is valid.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  subDir: /api/database/tokens/check/
↓_api_database_view__view_id__premium_PATCH [transactions.JsonHttpTransaction]: 
  comment: Sets view attributes only available for premium users.
  customHttpVerb: PATCH
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/json
  httpVerb: PUT
  subDir: /api/database/view/{view_id}/premium
  ↓__body [variables.RequestableHttpVariable-1664959341062]: 
    httpMethod: POST
    required: true
  ↓view_id [variables.RequestableHttpVariable-1664959341064]: 
    comment: Sets show_logo of this view.
    description: view_id
    required: true
    value: 
↓_api_database_views__slug__link_row_field_lookup__field_id___GET [transactions.JsonHttpTransaction]: 
  comment: If the view is publicly shared or if an authenticated user has access to the related group, then this endpoint can be used to do a value lookup of the link row fields that are included in the view. Normally it is not possible for a not authenticated visitor to fetch the rows of a table. This endpoint makes it possible to fetch the id and primary field value of the related table of a link row included in the view.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  subDir: /api/database/views/{slug}/link-row-field-lookup/{field_id}/
  ↓field_id [variables.RequestableHttpVariable-1664959341068]: 
    comment: The field id of the link row field.
    description: field_id
    required: true
    value: 
  ↓slug [variables.RequestableHttpVariable-1664959341070]: 
    comment: The slug related to the view.
    description: slug
    required: true
    value: 
↓_api_database_views__slug__public_auth__POST [transactions.JsonHttpTransaction]: 
  comment: Returns a valid never-expiring JWT token for this public shared view if the password provided matches with the one saved by the view's owner.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/json
  httpVerb: POST
  subDir: /api/database/views/{slug}/public/auth/
  ↓__body [variables.RequestableHttpVariable-1664959341074]: 
    httpMethod: POST
    required: true
  ↓slug [variables.RequestableHttpVariable-1664959341076]: 
    comment: The slug of the grid view to get public information about.
    description: slug
    required: true
    value: 
↓_api_database_views__slug__public_info__GET [transactions.JsonHttpTransaction]: 
  comment: Returns the required public information to display a single shared view.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  subDir: /api/database/views/{slug}/public/info/
  ↓slug [variables.RequestableHttpVariable-1664959341080]: 
    comment: The slug of the view to get public information about.
    description: slug
    required: true
    value: 
↓_api_database_views__view_id___DELETE [transactions.JsonHttpTransaction]: 
  comment: Deletes the existing view if the authorized user has access to the related database's group. Note that all the related settings of the view are going to be deleted also. The data stays intact after deleting the view because this is related to the table and not the view.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  httpVerb: DELETE
  subDir: /api/database/views/{view_id}/
  ↓__header_ClientSessionId [variables.RequestableHttpVariable-1664959341090]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone.
    description: ClientSessionId
  ↓__header_ClientUndoRedoActionGroupId [variables.RequestableHttpVariable-1664959341092]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call.
    description: ClientUndoRedoActionGroupId
  ↓view_id [variables.RequestableHttpVariable-1664959341094]: 
    comment: Deletes the view related to the provided value.
    description: view_id
    required: true
    value: 
↓_api_database_views__view_id___GET [transactions.JsonHttpTransaction]: 
  comment: Returns the existing view if the authorized user has access to the related database's group. Depending on the type different propertiescould be returned.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  subDir: /api/database/views/{view_id}/
  ↓include [variables.RequestableHttpVariable-1664959341084]: 
    comment: A comma separated list of extra attributes to include on the returned view. The supported attributes are `filters`, `sortings` and `decorations`. For example `include=filters,sortings` will add the attributes `filters` and `sortings` to every returned view, containing a list of the views filters and sortings respectively.
    description: include
    httpName: include
  ↓view_id [variables.RequestableHttpVariable-1664959341086]: 
    comment: Returns the view related to the provided value.
    description: view_id
    required: true
    value: 
↓_api_database_views__view_id___PATCH [transactions.JsonHttpTransaction]: 
  comment: Updates the existing view if the authorized user has access to the related database's group. The type cannot be changed. It depends on the existing type which properties can be changed.
  customHttpVerb: PATCH
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/json
  httpVerb: PUT
  subDir: /api/database/views/{view_id}/
  ↓__body [variables.RequestableHttpVariable-1664959341098]: 
    httpMethod: POST
    required: true
  ↓__header_ClientSessionId [variables.RequestableHttpVariable-1664959341100]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone.
    description: ClientSessionId
  ↓__header_ClientUndoRedoActionGroupId [variables.RequestableHttpVariable-1664959341102]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call.
    description: ClientUndoRedoActionGroupId
  ↓include [variables.RequestableHttpVariable-1664959341104]: 
    comment: A comma separated list of extra attributes to include on the returned view. The supported attributes are `filters`, `sortings` and `decorations`. For example `include=filters,sortings` will add the attributes `filters` and `sortings` to every returned view, containing a list of the views filters and sortings respectively.
    description: include
    httpName: include
  ↓view_id [variables.RequestableHttpVariable-1664959341106]: 
    comment: Updates the view related to the provided value.
    description: view_id
    required: true
    value: 
↓_api_database_views__view_id__decorations__GET [transactions.JsonHttpTransaction]: 
  comment: Lists all decorations of the view related to the provided `view_id` if the user has access to the related database's group. A view can have multiple decorations. View decorators can be used to decorate rows. This can, for example, be used to change the border or background color of a row if it matches certain conditions.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  subDir: /api/database/views/{view_id}/decorations/
  ↓view_id [variables.RequestableHttpVariable-1664959341110]: 
    comment: Returns only decoration of the view given to the provided value.
    description: view_id
    required: true
    value: 
↓_api_database_views__view_id__decorations__POST [transactions.JsonHttpTransaction]: 
  comment: Creates a new decoration for the view related to the provided `view_id` parameter if the authorized user has access to the related database's group.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/json
  httpVerb: POST
  subDir: /api/database/views/{view_id}/decorations/
  ↓__body [variables.RequestableHttpVariable-1664959341114]: 
    httpMethod: POST
    required: true
  ↓__header_ClientSessionId [variables.RequestableHttpVariable-1664959341116]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone.
    description: ClientSessionId
  ↓__header_ClientUndoRedoActionGroupId [variables.RequestableHttpVariable-1664959341118]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call.
    description: ClientUndoRedoActionGroupId
  ↓view_id [variables.RequestableHttpVariable-1664959341120]: 
    comment: Creates a decoration for the view related to the given value.
    description: view_id
    required: true
    value: 
↓_api_database_views__view_id__duplicate__POST [transactions.JsonHttpTransaction]: 
  comment: |
    'Duplicates an existing view if the user has access to it. When a view is duplicated everything is copied except:
    - The name is appended with the copy number. Ex: `View Name` -> `View Name (2)` and `View (2)` -> `View (3)`
    - If the original view is publicly shared, the new view will not be shared anymore'
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  httpVerb: POST
  subDir: /api/database/views/{view_id}/duplicate/
  ↓__header_ClientSessionId [variables.RequestableHttpVariable-1664959341124]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone.
    description: ClientSessionId
  ↓__header_ClientUndoRedoActionGroupId [variables.RequestableHttpVariable-1664959341126]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call.
    description: ClientUndoRedoActionGroupId
  ↓view_id [variables.RequestableHttpVariable-1664959341128]: 
    comment: Duplicates the view related to the provided value.
    description: view_id
    required: true
    value: 
↓_api_database_views__view_id__field_options__GET [transactions.JsonHttpTransaction]: 
  comment: Responds with the fields options of the provided view if the authenticated user has access to the related group.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  subDir: /api/database/views/{view_id}/field-options/
  ↓view_id [variables.RequestableHttpVariable-1664959341132]: 
    comment: Responds with field options related to the provided value.
    description: view_id
    required: true
    value: 
↓_api_database_views__view_id__field_options__PATCH [transactions.JsonHttpTransaction]: 
  comment: Updates the field options of a view. The field options differ per field type  This could for example be used to update the field width of a `grid` view if the user changes it.
  customHttpVerb: PATCH
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/json
  httpVerb: PUT
  subDir: /api/database/views/{view_id}/field-options/
  ↓__body [variables.RequestableHttpVariable-1664959341136]: 
    httpMethod: POST
    required: true
  ↓__header_ClientSessionId [variables.RequestableHttpVariable-1664959341138]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone.
    description: ClientSessionId
  ↓__header_ClientUndoRedoActionGroupId [variables.RequestableHttpVariable-1664959341140]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call.
    description: ClientUndoRedoActionGroupId
  ↓view_id [variables.RequestableHttpVariable-1664959341142]: 
    comment: Updates the field options related to the provided value.
    description: view_id
    required: true
    value: 
↓_api_database_views__view_id__filters__GET [transactions.JsonHttpTransaction]: 
  comment: Lists all filters of the view related to the provided `view_id` if the user has access to the related database's group. A view can have multiple filters. When all the rows are requested for the view only those that apply to the filters are returned.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  subDir: /api/database/views/{view_id}/filters/
  ↓view_id [variables.RequestableHttpVariable-1664959341146]: 
    comment: Returns only filters of the view related to the provided value.
    description: view_id
    required: true
    value: 
↓_api_database_views__view_id__filters__POST [transactions.JsonHttpTransaction]: 
  comment: Creates a new filter for the view related to the provided `view_id` parameter if the authorized user has access to the related database's group. When the rows of a view are requested, for example via the `list_database_table_grid_view_rows` endpoint, then only the rows that apply to all the filters are going to be returned. A filter compares the value of a field to the value of a filter. It depends on the type how values are going to be compared.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/json
  httpVerb: POST
  subDir: /api/database/views/{view_id}/filters/
  ↓__body [variables.RequestableHttpVariable-1664959341150]: 
    httpMethod: POST
    required: true
  ↓__header_ClientSessionId [variables.RequestableHttpVariable-1664959341152]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone.
    description: ClientSessionId
  ↓__header_ClientUndoRedoActionGroupId [variables.RequestableHttpVariable-1664959341154]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call.
    description: ClientUndoRedoActionGroupId
  ↓view_id [variables.RequestableHttpVariable-1664959341156]: 
    comment: Creates a filter for the view related to the provided value.
    description: view_id
    required: true
    value: 
↓_api_database_views__view_id__rotate_slug__POST [transactions.JsonHttpTransaction]: 
  comment: Rotates the unique slug of the view by replacing it with a new value. This would mean that the publicly shared URL of the view will change. Anyone with the old URL won't be able to access the viewanymore. Only view types which are sharable can have their slugs rotated.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  httpVerb: POST
  subDir: /api/database/views/{view_id}/rotate-slug/
  ↓__header_ClientSessionId [variables.RequestableHttpVariable-1664959341160]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone.
    description: ClientSessionId
  ↓__header_ClientUndoRedoActionGroupId [variables.RequestableHttpVariable-1664959341162]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call.
    description: ClientUndoRedoActionGroupId
  ↓view_id [variables.RequestableHttpVariable-1664959341164]: 
    comment: Rotates the slug of the view related to the provided value.
    description: view_id
    required: true
    value: 
↓_api_database_views__view_id__sortings__GET [transactions.JsonHttpTransaction]: 
  comment: Lists all sortings of the view related to the provided `view_id` if the user has access to the related database's group. A view can have multiple sortings. When all the rows are requested they will be in the desired order.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  subDir: /api/database/views/{view_id}/sortings/
  ↓view_id [variables.RequestableHttpVariable-1664959341168]: 
    comment: Returns only sortings of the view related to the provided value.
    description: view_id
    required: true
    value: 
↓_api_database_views__view_id__sortings__POST [transactions.JsonHttpTransaction]: 
  comment: Creates a new sort for the view related to the provided `view_id` parameter if the authorized user has access to the related database's group. When the rows of a view are requested, for example via the `list_database_table_grid_view_rows` endpoint, they will be returned in the respected order defined by all the sortings.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/json
  httpVerb: POST
  subDir: /api/database/views/{view_id}/sortings/
  ↓__body [variables.RequestableHttpVariable-1664959341172]: 
    httpMethod: POST
    required: true
  ↓__header_ClientSessionId [variables.RequestableHttpVariable-1664959341174]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone.
    description: ClientSessionId
  ↓__header_ClientUndoRedoActionGroupId [variables.RequestableHttpVariable-1664959341176]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call.
    description: ClientUndoRedoActionGroupId
  ↓view_id [variables.RequestableHttpVariable-1664959341178]: 
    comment: Creates a sort for the view related to the provided value.
    description: view_id
    required: true
    value: 
↓_api_database_views_decoration__view_decoration_id___DELETE [transactions.JsonHttpTransaction]: 
  comment: Deletes the existing decoration if the authorized user has access to the related database's group.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  httpVerb: DELETE
  subDir: /api/database/views/decoration/{view_decoration_id}/
  ↓__header_ClientSessionId [variables.RequestableHttpVariable-1664959341186]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone.
    description: ClientSessionId
  ↓__header_ClientUndoRedoActionGroupId [variables.RequestableHttpVariable-1664959341188]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call.
    description: ClientUndoRedoActionGroupId
  ↓view_decoration_id [variables.RequestableHttpVariable-1664959341190]: 
    comment: Deletes the decoration related to the provided value.
    description: view_decoration_id
    required: true
    value: 
↓_api_database_views_decoration__view_decoration_id___GET [transactions.JsonHttpTransaction]: 
  comment: Returns the existing view decoration if the current user has access to the related database's group.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  subDir: /api/database/views/decoration/{view_decoration_id}/
  ↓view_decoration_id [variables.RequestableHttpVariable-1664959341182]: 
    comment: Returns the view decoration related to the provided id.
    description: view_decoration_id
    required: true
    value: 
↓_api_database_views_decoration__view_decoration_id___PATCH [transactions.JsonHttpTransaction]: 
  comment: Updates the existing decoration if the authorized user has access to the related database's group.
  customHttpVerb: PATCH
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/json
  httpVerb: PUT
  subDir: /api/database/views/decoration/{view_decoration_id}/
  ↓__body [variables.RequestableHttpVariable-1664959341194]: 
    httpMethod: POST
    required: true
  ↓__header_ClientSessionId [variables.RequestableHttpVariable-1664959341196]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone.
    description: ClientSessionId
  ↓__header_ClientUndoRedoActionGroupId [variables.RequestableHttpVariable-1664959341198]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call.
    description: ClientUndoRedoActionGroupId
  ↓view_decoration_id [variables.RequestableHttpVariable-1664959341200]: 
    comment: Updates the view decoration related to the provided value.
    description: view_decoration_id
    required: true
    value: 
↓_api_database_views_filter__view_filter_id___DELETE [transactions.JsonHttpTransaction]: 
  comment: Deletes the existing filter if the authorized user has access to the related database's group.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  httpVerb: DELETE
  subDir: /api/database/views/filter/{view_filter_id}/
  ↓__header_ClientSessionId [variables.RequestableHttpVariable-1664959341208]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone.
    description: ClientSessionId
  ↓__header_ClientUndoRedoActionGroupId [variables.RequestableHttpVariable-1664959341210]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call.
    description: ClientUndoRedoActionGroupId
  ↓view_filter_id [variables.RequestableHttpVariable-1664959341212]: 
    comment: Deletes the filter related to the provided value.
    description: view_filter_id
    required: true
    value: 
↓_api_database_views_filter__view_filter_id___GET [transactions.JsonHttpTransaction]: 
  comment: Returns the existing view filter if the authorized user has access to the related database's group.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  subDir: /api/database/views/filter/{view_filter_id}/
  ↓view_filter_id [variables.RequestableHttpVariable-1664959341204]: 
    comment: Returns the view filter related to the provided value.
    description: view_filter_id
    required: true
    value: 
↓_api_database_views_filter__view_filter_id___PATCH [transactions.JsonHttpTransaction]: 
  comment: Updates the existing filter if the authorized user has access to the related database's group.
  customHttpVerb: PATCH
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/json
  httpVerb: PUT
  subDir: /api/database/views/filter/{view_filter_id}/
  ↓__body [variables.RequestableHttpVariable-1664959341216]: 
    httpMethod: POST
    required: true
  ↓__header_ClientSessionId [variables.RequestableHttpVariable-1664959341218]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone.
    description: ClientSessionId
  ↓__header_ClientUndoRedoActionGroupId [variables.RequestableHttpVariable-1664959341220]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call.
    description: ClientUndoRedoActionGroupId
  ↓view_filter_id [variables.RequestableHttpVariable-1664959341222]: 
    comment: Updates the view filter related to the provided value.
    description: view_filter_id
    required: true
    value: 
↓_api_database_views_form__slug__submit__GET [transactions.JsonHttpTransaction]: 
  comment: Returns the meta data related to the form view if the form is publicly shared or if the user has access to the related group. This data can be used to construct a form with the right fields.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  subDir: /api/database/views/form/{slug}/submit/
  ↓slug [variables.RequestableHttpVariable-1664959341226]: 
    comment: The slug related to the form form.
    description: slug
    required: true
    value: 
↓_api_database_views_form__slug__submit__POST [transactions.JsonHttpTransaction]: 
  comment: Submits the form if the form is publicly shared or if the user has access to the related group. The provided data will be validated based on the fields that are in the form and the rules per field. If valid, a new row will be created in the table.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/json
  httpVerb: POST
  subDir: /api/database/views/form/{slug}/submit/
  ↓__body [variables.RequestableHttpVariable-1664959341230]: 
    httpMethod: POST
    required: true
  ↓slug [variables.RequestableHttpVariable-1664959341232]: 
    comment: The slug related to the form.
    description: slug
    required: true
    value: 
↓_api_database_views_form__slug__upload_file__POST [transactions.JsonHttpTransaction]: 
  comment: Uploads a file anonymously to Baserow by uploading the file contents directly. A `file` multipart is expected containing the file contents.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  httpVerb: POST
  subDir: /api/database/views/form/{slug}/upload-file/
  ↓slug [variables.RequestableHttpVariable-1664959341236]: 
    comment: Submits files only if the view with the provided slughas a public file field.
    description: slug
    required: true
    value: 
↓_api_database_views_gallery__slug__public_rows__GET [transactions.JsonHttpTransaction]: 
  comment: |
    Lists the requested rows of the view's table related to the provided `slug` if the gallery view is public.The response is paginated either by a limit/offset or page/size style. The style depends on the provided GET parameters. The properties of the returned rows depends on which fields the table has. For a complete overview of fields use the **list_database_table_fields** endpoint to list them all. In the example all field types are listed, but normally the number in field_{id} key is going to be the id of the field. The value is what the user has provided and the format of it depends on the fields type.
    
    
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  subDir: /api/database/views/gallery/{slug}/public/rows/
  ↓count [variables.RequestableHttpVariable-1664959341240]: 
    comment: If provided only the count will be returned.
    description: count
    httpName: count
  ↓exclude_fields [variables.RequestableHttpVariable-1664959341242]: 
    comment: All the fields are included in the response by default. You can select a subset of fields by providing the exclude_fields query parameter. If you for example provide the following GET parameter `exclude_fields=field_1,field_2` then the fields with id `1` and id `2` are going to be excluded from the selection and response. 
    description: exclude_fields
    httpName: exclude_fields
  ↓filter__{field}__{filter} [variables.RequestableHttpVariable-1664959341244]: 
    comment: |
      'The rows can optionally be filtered by the same view filters available for the views. Multiple filters can be provided if they follow the same format. The field and filter variable indicate how to filter and the value indicates where to filter on.
      
      For example if you provide the following GET parameter `filter__field_1__equal=test` then only rows where the value of field_1 is equal to test are going to be returned.
      
      The following filters are available: equal, not_equal, filename_contains, has_file_type, contains, contains_not, length_is_lower_than, higher_than, lower_than, date_equal, date_before, date_after, date_not_equal, date_equals_today, date_before_today, date_after_today, date_equals_days_ago, date_equals_months_ago, date_equals_years_ago, date_equals_week, date_equals_month, date_equals_day_of_month, date_equals_year, single_select_equal, single_select_not_equal, link_row_has, link_row_has_not, link_row_contains, link_row_not_contains, boolean, empty, not_empty, multiple_select_has, multiple_select_has_not.'
    description: filter__{field}__{filter}
    httpName: filter__{field}__{filter}
  ↓filter_type [variables.RequestableHttpVariable-1664959341246]: 
    comment: |
      '`AND`: Indicates that the rows must match all the provided filters.
      `OR`: Indicates that the rows only have to match one of the filters.
      
      This works only if two or more filters are provided.'
    description: filter_type
    httpName: filter_type
  ↓include [variables.RequestableHttpVariable-1664959341248]: 
    comment: A comma separated list allowing the values of `field_options` which will add the object/objects with the same name to the response if included. The `field_options` object contains user defined view settings for each field. For example the field's width is included in here.
    description: include
    httpName: include
  ↓include_fields [variables.RequestableHttpVariable-1664959341250]: 
    comment: All the fields are included in the response by default. You can select a subset of fields by providing the fields query parameter. If you for example provide the following GET parameter `include_fields=field_1,field_2` then only the fields with id `1` and id `2` are going to be selected and included in the response.
    description: include_fields
    httpName: include_fields
  ↓limit [variables.RequestableHttpVariable-1664959341252]: 
    comment: Defines how many rows should be returned.
    description: limit
    httpName: limit
  ↓offset [variables.RequestableHttpVariable-1664959341254]: 
    comment: Can only be used in combination with the `limit` parameter and defines from which offset the rows should be returned.
    description: offset
    httpName: offset
  ↓order_by [variables.RequestableHttpVariable-1664959341256]: 
    comment: Optionally the rows can be ordered by provided field ids separated by comma. By default a field is ordered in ascending (A-Z) order, but by prepending the field with a '-' it can be ordered descending (Z-A).
    description: order_by
    httpName: order_by
  ↓page [variables.RequestableHttpVariable-1664959341258]: 
    comment: Defines which page of rows should be returned. Either the `page` or `limit` can be provided, not both.
    description: page
    httpName: page
  ↓search [variables.RequestableHttpVariable-1664959341260]: 
    comment: If provided only rows with data that matches the search query are going to be returned.
    description: search
    httpName: search
  ↓size [variables.RequestableHttpVariable-1664959341262]: 
    comment: Can only be used in combination with the `page` parameter and defines how many rows should be returned.
    description: size
    httpName: size
  ↓slug [variables.RequestableHttpVariable-1664959341264]: 
    comment: Returns only rows that belong to the related view.
    description: slug
    required: true
    value: 
↓_api_database_views_gallery__view_id___GET [transactions.JsonHttpTransaction]: 
  comment: Lists the requested rows of the view's table related to the provided `view_id` if the authorized user has access to the database's group. The response is paginated by a limit/offset style.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  subDir: /api/database/views/gallery/{view_id}/
  ↓count [variables.RequestableHttpVariable-1664959341268]: 
    comment: If provided only the count will be returned.
    description: count
    httpName: count
  ↓include [variables.RequestableHttpVariable-1664959341270]: 
    comment: A comma separated list allowing the values of `field_options` which will add the object/objects with the same name to the response if included. The `field_options` object contains user defined view settings for each field. For example the field's order is included in here.
    description: include
    httpName: include
  ↓limit [variables.RequestableHttpVariable-1664959341272]: 
    comment: Defines how many rows should be returned.
    description: limit
    httpName: limit
  ↓offset [variables.RequestableHttpVariable-1664959341274]: 
    comment: Can only be used in combination with the `limit` parameter and defines from which offset the rows should be returned.
    description: offset
    httpName: offset
  ↓search [variables.RequestableHttpVariable-1664959341276]: 
    comment: If provided only rows with data that matches the search query are going to be returned.
    description: search
    httpName: search
  ↓view_id [variables.RequestableHttpVariable-1664959341278]: 
    comment: Returns only rows that belong to the related view's table.
    description: view_id
    required: true
    value: 
↓_api_database_views_grid__slug__public_rows__GET [transactions.JsonHttpTransaction]: 
  comment: |
    Lists the requested rows of the view's table related to the provided `slug` if the grid view is public.The response is paginated either by a limit/offset or page/size style. The style depends on the provided GET parameters. The properties of the returned rows depends on which fields the table has. For a complete overview of fields use the **list_database_table_fields** endpoint to list them all. In the example all field types are listed, but normally the number in field_{id} key is going to be the id of the field. The value is what the user has provided and the format of it depends on the fields type.
    
    
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  subDir: /api/database/views/grid/{slug}/public/rows/
  ↓count [variables.RequestableHttpVariable-1664959341282]: 
    comment: If provided only the count will be returned.
    description: count
    httpName: count
  ↓exclude_fields [variables.RequestableHttpVariable-1664959341284]: 
    comment: All the fields are included in the response by default. You can select a subset of fields by providing the exclude_fields query parameter. If you for example provide the following GET parameter `exclude_fields=field_1,field_2` then the fields with id `1` and id `2` are going to be excluded from the selection and response. 
    description: exclude_fields
    httpName: exclude_fields
  ↓filter__{field}__{filter} [variables.RequestableHttpVariable-1664959341286]: 
    comment: |
      'The rows can optionally be filtered by the same view filters available for the views. Multiple filters can be provided if they follow the same format. The field and filter variable indicate how to filter and the value indicates where to filter on.
      
      For example if you provide the following GET parameter `filter__field_1__equal=test` then only rows where the value of field_1 is equal to test are going to be returned.
      
      The following filters are available: equal, not_equal, filename_contains, has_file_type, contains, contains_not, length_is_lower_than, higher_than, lower_than, date_equal, date_before, date_after, date_not_equal, date_equals_today, date_before_today, date_after_today, date_equals_days_ago, date_equals_months_ago, date_equals_years_ago, date_equals_week, date_equals_month, date_equals_day_of_month, date_equals_year, single_select_equal, single_select_not_equal, link_row_has, link_row_has_not, link_row_contains, link_row_not_contains, boolean, empty, not_empty, multiple_select_has, multiple_select_has_not.'
    description: filter__{field}__{filter}
    httpName: filter__{field}__{filter}
  ↓filter_type [variables.RequestableHttpVariable-1664959341288]: 
    comment: |
      '`AND`: Indicates that the rows must match all the provided filters.
      `OR`: Indicates that the rows only have to match one of the filters.
      
      This works only if two or more filters are provided.'
    description: filter_type
    httpName: filter_type
  ↓include [variables.RequestableHttpVariable-1664959341290]: 
    comment: A comma separated list allowing the values of `field_options` which will add the object/objects with the same name to the response if included. The `field_options` object contains user defined view settings for each field. For example the field's width is included in here.
    description: include
    httpName: include
  ↓include_fields [variables.RequestableHttpVariable-1664959341292]: 
    comment: All the fields are included in the response by default. You can select a subset of fields by providing the fields query parameter. If you for example provide the following GET parameter `include_fields=field_1,field_2` then only the fields with id `1` and id `2` are going to be selected and included in the response.
    description: include_fields
    httpName: include_fields
  ↓limit [variables.RequestableHttpVariable-1664959341294]: 
    comment: Defines how many rows should be returned.
    description: limit
    httpName: limit
  ↓offset [variables.RequestableHttpVariable-1664959341296]: 
    comment: Can only be used in combination with the `limit` parameter and defines from which offset the rows should be returned.
    description: offset
    httpName: offset
  ↓order_by [variables.RequestableHttpVariable-1664959341298]: 
    comment: Optionally the rows can be ordered by provided field ids separated by comma. By default a field is ordered in ascending (A-Z) order, but by prepending the field with a '-' it can be ordered descending (Z-A).
    description: order_by
    httpName: order_by
  ↓page [variables.RequestableHttpVariable-1664959341300]: 
    comment: Defines which page of rows should be returned. Either the `page` or `limit` can be provided, not both.
    description: page
    httpName: page
  ↓search [variables.RequestableHttpVariable-1664959341302]: 
    comment: If provided only rows with data that matches the search query are going to be returned.
    description: search
    httpName: search
  ↓size [variables.RequestableHttpVariable-1664959341304]: 
    comment: Can only be used in combination with the `page` parameter and defines how many rows should be returned.
    description: size
    httpName: size
  ↓slug [variables.RequestableHttpVariable-1664959341306]: 
    comment: Returns only rows that belong to the related view.
    description: slug
    required: true
    value: 
↓_api_database_views_grid__view_id___GET [transactions.JsonHttpTransaction]: 
  comment: |
    Lists the requested rows of the view's table related to the provided `view_id` if the authorized user has access to the database's group. The response is paginated either by a limit/offset or page/size style. The style depends on the provided GET parameters. The properties of the returned rows depends on which fields the table has. For a complete overview of fields use the **list_database_table_fields** endpoint to list them all. In the example all field types are listed, but normally the number in field_{id} key is going to be the id of the field. The value is what the user has provided and the format of it depends on the fields type.
    
    The filters and sortings are automatically applied. To get a full overview of the applied filters and sortings you can use the `list_database_table_view_filters` and `list_database_table_view_sortings` endpoints.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  subDir: /api/database/views/grid/{view_id}/
  ↓count [variables.RequestableHttpVariable-1664959341310]: 
    comment: If provided only the count will be returned.
    description: count
    httpName: count
  ↓exclude_fields [variables.RequestableHttpVariable-1664959341312]: 
    comment: All the fields are included in the response by default. You can select a subset of fields by providing the exclude_fields query parameter. If you for example provide the following GET parameter `exclude_fields=field_1,field_2` then the fields with id `1` and id `2` are going to be excluded from the selection and response. 
    description: exclude_fields
    httpName: exclude_fields
  ↓include [variables.RequestableHttpVariable-1664959341314]: 
    comment: A comma separated list allowing the values of `field_options` and `row_metadata` which will add the object/objects with the same name to the response if included. The `field_options` object contains user defined view settings for each field. For example the field's width is included in here. The `row_metadata` object includes extra row specific data on a per row basis.
    description: include
    httpName: include
  ↓include_fields [variables.RequestableHttpVariable-1664959341316]: 
    comment: All the fields are included in the response by default. You can select a subset of fields by providing the fields query parameter. If you for example provide the following GET parameter `include_fields=field_1,field_2` then only the fields with id `1` and id `2` are going to be selected and included in the response.
    description: include_fields
    httpName: include_fields
  ↓limit [variables.RequestableHttpVariable-1664959341318]: 
    comment: Defines how many rows should be returned.
    description: limit
    httpName: limit
  ↓offset [variables.RequestableHttpVariable-1664959341320]: 
    comment: Can only be used in combination with the `limit` parameter and defines from which offset the rows should be returned.
    description: offset
    httpName: offset
  ↓page [variables.RequestableHttpVariable-1664959341322]: 
    comment: Defines which page of rows should be returned. Either the `page` or `limit` can be provided, not both.
    description: page
    httpName: page
  ↓search [variables.RequestableHttpVariable-1664959341324]: 
    comment: If provided only rows with data that matches the search query are going to be returned.
    description: search
    httpName: search
  ↓size [variables.RequestableHttpVariable-1664959341326]: 
    comment: Can only be used in combination with the `page` parameter and defines how many rows should be returned.
    description: size
    httpName: size
  ↓view_id [variables.RequestableHttpVariable-1664959341328]: 
    comment: Returns only rows that belong to the related view's table.
    description: view_id
    required: true
    value: 
↓_api_database_views_grid__view_id___POST [transactions.JsonHttpTransaction]: 
  comment: Lists only the rows and fields that match the request. Only the rows with the ids that are in the `row_ids` list are going to be returned. Same goes for the fields, only the fields with the ids in the `field_ids` are going to be returned. This endpoint could be used to refresh data after changes something. For example in the web frontend after changing a field type, the data of the related cells will be refreshed using this endpoint. In the example all field types are listed, but normally  the number in field_{id} key is going to be the id of the field. The value is what the user has provided and the format of it depends on the fields type.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/json
  httpVerb: POST
  subDir: /api/database/views/grid/{view_id}/
  ↓__body [variables.RequestableHttpVariable-1664959341332]: 
    httpMethod: POST
    required: true
  ↓view_id [variables.RequestableHttpVariable-1664959341334]: 
    comment: Returns only rows that belong to the related view's table.
    description: view_id
    required: true
    value: 
↓_api_database_views_grid__view_id__aggregation__field_id___GET [transactions.JsonHttpTransaction]: 
  comment: Computes the aggregation of all the values for a specified field from the selected grid view. You must select the aggregation type by setting the `type` GET parameter. If filters are configured for the selected view, the aggregation is calculated only on filtered rows. You need to have read permissions on the view to request an aggregation.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  subDir: /api/database/views/grid/{view_id}/aggregation/{field_id}/
  ↓field_id [variables.RequestableHttpVariable-1664959341338]: 
    comment: The field id you want to aggregate
    description: field_id
    required: true
    value: 
  ↓include [variables.RequestableHttpVariable-1664959341340]: 
    comment: if `include` is set to `total`, the total row count will be returned with the result.
    description: include
    httpName: include
  ↓type [variables.RequestableHttpVariable-1664959341342]: 
    comment: 'The aggregation type you want. Available aggregation types: empty_count, not_empty_count, unique_count, min, max, sum, average, median, decile, variance, std_dev'
    description: type
    httpName: type
  ↓view_id [variables.RequestableHttpVariable-1664959341344]: 
    comment: Select the view you want the aggregation for.
    description: view_id
    required: true
    value: 
↓_api_database_views_grid__view_id__aggregations__GET [transactions.JsonHttpTransaction]: 
  comment: Returns all field aggregations values previously defined for this grid view. If filters exist for this view, the aggregations are computed only on filtered rows.You need to have read permissions on the view to request aggregations.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  subDir: /api/database/views/grid/{view_id}/aggregations/
  ↓include [variables.RequestableHttpVariable-1664959341348]: 
    comment: if `include` is set to `total`, the total row count will be returned with the result.
    description: include
    httpName: include
  ↓search [variables.RequestableHttpVariable-1664959341350]: 
    comment: If provided the aggregations are calculated only for matching rows.
    description: search
    httpName: search
  ↓view_id [variables.RequestableHttpVariable-1664959341352]: 
    comment: Select the view you want the aggregations for.
    description: view_id
    required: true
    value: 
↓_api_database_views_kanban__slug__public_rows__GET [transactions.JsonHttpTransaction]: 
  comment: |
    Responds with serialized rows grouped by the view's single select field options related to the `slug` if the kanban view is publicly shared. Additional query parameters can be provided to control the `limit` and `offset` per select option. 
    
    This is a **premium** feature.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  subDir: /api/database/views/kanban/{slug}/public/rows/
  ↓limit [variables.RequestableHttpVariable-1664959341356]: 
    comment: Defines how many rows should be returned by default. This value can be overwritten per select option.
    description: limit
    httpName: limit
  ↓offset [variables.RequestableHttpVariable-1664959341358]: 
    comment: Defines from which offset the rows should be returned.This value can be overwritten per select option.
    description: offset
    httpName: offset
  ↓select_option [variables.RequestableHttpVariable-1664959341360]: 
    comment: Accepts multiple `select_option` parameters. If not provided, the rows of all select options will be returned. If one or more `select_option` parameters are provided, then only the rows of those will be included in the response. `?select_option=1&select_option=null` will only include the rows for both select option with id `1` and `null`. `?select_option=1,10,20` will only include the rows of select option id `1` with a limit of `10` and and offset of `20`.
    description: select_option
    httpName: select_option
  ↓slug [variables.RequestableHttpVariable-1664959341362]: 
    comment: Returns only rows that belong to the related view.
    description: slug
    required: true
    value: 
↓_api_database_views_kanban__view_id___GET [transactions.JsonHttpTransaction]: 
  comment: |
    Responds with serialized rows grouped by the view's single select field options if the user is authenticated and has access to the related group. Additional query parameters can be provided to control the `limit` and `offset` per select option.
    
    This is a **premium** feature.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  subDir: /api/database/views/kanban/{view_id}/
  ↓include [variables.RequestableHttpVariable-1664959341366]: 
    comment: Accepts `field_options` as value if the field options must also be included in the response.
    description: include
    httpName: include
  ↓limit [variables.RequestableHttpVariable-1664959341368]: 
    comment: Defines how many rows should be returned by default. This value can be overwritten per select option.
    description: limit
    httpName: limit
  ↓offset [variables.RequestableHttpVariable-1664959341370]: 
    comment: Defines from which offset the rows should be returned.This value can be overwritten per select option.
    description: offset
    httpName: offset
  ↓select_option [variables.RequestableHttpVariable-1664959341372]: 
    comment: Accepts multiple `select_option` parameters. If not provided, the rows of all select options will be returned. If one or more `select_option` parameters are provided, then only the rows of those will be included in the response. `?select_option=1&select_option=null` will only include the rows for both select option with id `1` and `null`. `?select_option=1,10,20` will only include the rows of select option id `1` with a limit of `10` and and offset of `20`.
    description: select_option
    httpName: select_option
  ↓view_id [variables.RequestableHttpVariable-1664959341374]: 
    comment: Returns only rows that belong to the related view's table.
    description: view_id
    required: true
    value: 
↓_api_database_views_sort__view_sort_id___DELETE [transactions.JsonHttpTransaction]: 
  comment: Deletes the existing sort if the authorized user has access to the related database's group.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  httpVerb: DELETE
  subDir: /api/database/views/sort/{view_sort_id}/
  ↓__header_ClientSessionId [variables.RequestableHttpVariable-1664959341382]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone.
    description: ClientSessionId
  ↓__header_ClientUndoRedoActionGroupId [variables.RequestableHttpVariable-1664959341384]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call.
    description: ClientUndoRedoActionGroupId
  ↓view_sort_id [variables.RequestableHttpVariable-1664959341386]: 
    comment: Deletes the sort related to the provided value.
    description: view_sort_id
    required: true
    value: 
↓_api_database_views_sort__view_sort_id___GET [transactions.JsonHttpTransaction]: 
  comment: Returns the existing view sort if the authorized user has access to the related database's group.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  subDir: /api/database/views/sort/{view_sort_id}/
  ↓view_sort_id [variables.RequestableHttpVariable-1664959341378]: 
    comment: Returns the view sort related to the provided value.
    description: view_sort_id
    required: true
    value: 
↓_api_database_views_sort__view_sort_id___PATCH [transactions.JsonHttpTransaction]: 
  comment: Updates the existing sort if the authorized user has access to the related database's group.
  customHttpVerb: PATCH
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/json
  httpVerb: PUT
  subDir: /api/database/views/sort/{view_sort_id}/
  ↓__body [variables.RequestableHttpVariable-1664959341390]: 
    httpMethod: POST
    required: true
  ↓__header_ClientSessionId [variables.RequestableHttpVariable-1664959341392]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone.
    description: ClientSessionId
  ↓__header_ClientUndoRedoActionGroupId [variables.RequestableHttpVariable-1664959341394]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call.
    description: ClientUndoRedoActionGroupId
  ↓view_sort_id [variables.RequestableHttpVariable-1664959341396]: 
    comment: Updates the view sort related to the provided value.
    description: view_sort_id
    required: true
    value: 
↓_api_database_views_table__table_id___GET [transactions.JsonHttpTransaction]: 
  comment: Lists all views of the table related to the provided `table_id` if the user has access to the related database's group. If the group is related to a template, then this endpoint will be publicly accessible. A table can have multiple views. Each view can display the data in a different way. For example the `grid` view shows the in a spreadsheet like way. That type has custom endpoints for data retrieval and manipulation. In the future other views types like a calendar or Kanban are going to be added. Each type can have different properties.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  subDir: /api/database/views/table/{table_id}/
  ↓include [variables.RequestableHttpVariable-1664959341400]: 
    comment: A comma separated list of extra attributes to include on each view in the response. The supported attributes are `filters`, `sortings` and `decorations`. For example `include=filters,sortings` will add the attributes `filters` and `sortings` to every returned view, containing a list of the views filters and sortings respectively.
    description: include
    httpName: include
  ↓limit [variables.RequestableHttpVariable-1664959341402]: 
    comment: The maximum amount of views that must be returned. This endpoint doesn't support pagination, but if you for example just need to fetch the first view, you can do that by setting a limit. There isn't a limit by default.
    description: limit
    httpName: limit
  ↓table_id [variables.RequestableHttpVariable-1664959341404]: 
    comment: Returns only views of the table related to the provided value.
    description: table_id
    required: true
    value: 
  ↓type [variables.RequestableHttpVariable-1664959341406]: 
    comment: Optionally filter on the view type. If provided, only views of that type will be returned.
    description: type
    httpName: type
↓_api_database_views_table__table_id___POST [transactions.JsonHttpTransaction]: 
  comment: Creates a new view for the table related to the provided `table_id` parameter if the authorized user has access to the related database's group. Depending on the type, different properties can optionally be set.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/json
  httpVerb: POST
  subDir: /api/database/views/table/{table_id}/
  ↓__body [variables.RequestableHttpVariable-1664959341410]: 
    httpMethod: POST
    required: true
  ↓__header_ClientSessionId [variables.RequestableHttpVariable-1664959341412]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone.
    description: ClientSessionId
  ↓__header_ClientUndoRedoActionGroupId [variables.RequestableHttpVariable-1664959341414]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call.
    description: ClientUndoRedoActionGroupId
  ↓include [variables.RequestableHttpVariable-1664959341416]: 
    comment: A comma separated list of extra attributes to include on each view in the response. The supported attributes are `filters`, `sortings` and `decorations`. For example `include=filters,sortings` will add the attributes `filters` and `sortings` to every returned view, containing a list of the views filters and sortings respectively.
    description: include
    httpName: include
  ↓table_id [variables.RequestableHttpVariable-1664959341418]: 
    comment: Creates a view for the table related to the provided value.
    description: table_id
    required: true
    value: 
↓_api_database_views_table__table_id__order__POST [transactions.JsonHttpTransaction]: 
  comment: Changes the order of the provided view ids to the matching position that the id has in the list. If the authorized user does not belong to the group it will be ignored. The order of the not provided views will be set to `0`.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/json
  httpVerb: POST
  subDir: /api/database/views/table/{table_id}/order/
  ↓__body [variables.RequestableHttpVariable-1664959341422]: 
    httpMethod: POST
    required: true
  ↓__header_ClientSessionId [variables.RequestableHttpVariable-1664959341424]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone.
    description: ClientSessionId
  ↓__header_ClientUndoRedoActionGroupId [variables.RequestableHttpVariable-1664959341426]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call.
    description: ClientUndoRedoActionGroupId
  ↓table_id [variables.RequestableHttpVariable-1664959341428]: 
    comment: Updates the order of the views in the table related to the provided value.
    description: table_id
    required: true
    value: 
↓_api_database_webhooks__webhook_id___DELETE [transactions.JsonHttpTransaction]: 
  comment: Deletes the existing webhook if the authorized user has access to the related database's group.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  httpVerb: DELETE
  subDir: /api/database/webhooks/{webhook_id}/
  ↓webhook_id [variables.RequestableHttpVariable-1664959341436]: 
    comment: Deletes the webhook related to the provided value.
    description: webhook_id
    required: true
    value: 
↓_api_database_webhooks__webhook_id___GET [transactions.JsonHttpTransaction]: 
  comment: Returns the existing webhook if the authorized user has access to the related database group.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  subDir: /api/database/webhooks/{webhook_id}/
  ↓webhook_id [variables.RequestableHttpVariable-1664959341432]: 
    comment: Returns the webhook related to the provided value.
    description: webhook_id
    required: true
    value: 
↓_api_database_webhooks__webhook_id___PATCH [transactions.JsonHttpTransaction]: 
  comment: Updates the existing view if the authorized user has access to the related database group.
  customHttpVerb: PATCH
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/json
  httpVerb: PUT
  subDir: /api/database/webhooks/{webhook_id}/
  ↓__body [variables.RequestableHttpVariable-1664959341440]: 
    httpMethod: POST
    required: true
  ↓webhook_id [variables.RequestableHttpVariable-1664959341442]: 
    comment: Updates the webhook related to the provided value.
    description: webhook_id
    required: true
    value: 
↓_api_database_webhooks_table__table_id___GET [transactions.JsonHttpTransaction]: 
  comment: Lists all webhooks of the table related to the provided `table_id` if the user has access to the related database group.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  subDir: /api/database/webhooks/table/{table_id}/
  ↓table_id [variables.RequestableHttpVariable-1664959341446]: 
    comment: Returns only webhooks of the table related to this value.
    description: table_id
    required: true
    value: 
↓_api_database_webhooks_table__table_id___POST [transactions.JsonHttpTransaction]: 
  comment: Creates a new webhook for the table related to the provided `table_id` parameter if the authorized user has access to the related database group.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/json
  httpVerb: POST
  subDir: /api/database/webhooks/table/{table_id}/
  ↓__body [variables.RequestableHttpVariable-1664959341450]: 
    httpMethod: POST
    required: true
  ↓table_id [variables.RequestableHttpVariable-1664959341452]: 
    comment: Creates a webhook for the table related to the provided value.
    description: table_id
    required: true
    value: 
↓_api_database_webhooks_table__table_id__test_call__POST [transactions.JsonHttpTransaction]: 
  comment: This endpoint triggers a test call based on the provided data if the user has access to the group related to the table. The test call will be made immediately and a copy of the request, response and status will be included in the response.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/json
  httpVerb: POST
  subDir: /api/database/webhooks/table/{table_id}/test-call/
  ↓__body [variables.RequestableHttpVariable-1664959341456]: 
    httpMethod: POST
    required: true
  ↓table_id [variables.RequestableHttpVariable-1664959341458]: 
    comment: The id of the table that must be tested.
    description: table_id
    required: true
    value: 
↓_api_groups__GET [transactions.JsonHttpTransaction]: 
  comment: Lists all the groups of the authorized user. A group can contain multiple applications like a database. Multiple users can have access to a group. For example each company could have their own group containing databases related to that company. The order of the groups are custom for each user. The order is configurable via the **order_groups** endpoint.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  subDir: /api/groups/
↓_api_groups__group_id___DELETE [transactions.JsonHttpTransaction]: 
  comment: Deletes an existing group if the authorized user belongs to the group. All the applications, databases, tables etc that were in the group are going to be deleted also.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  httpVerb: DELETE
  subDir: /api/groups/{group_id}/
  ↓__header_ClientSessionId [variables.RequestableHttpVariable-1664959341470]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone.
    description: ClientSessionId
  ↓__header_ClientUndoRedoActionGroupId [variables.RequestableHttpVariable-1664959341472]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call.
    description: ClientUndoRedoActionGroupId
  ↓group_id [variables.RequestableHttpVariable-1664959341474]: 
    comment: Deletes the group related to the provided value.
    description: group_id
    required: true
    value: 
↓_api_groups__group_id___PATCH [transactions.JsonHttpTransaction]: 
  comment: Updates the existing group related to the provided `group_id` parameter if the authorized user belongs to the group. It is not yet possible to add additional users to a group.
  customHttpVerb: PATCH
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/json
  httpVerb: PUT
  subDir: /api/groups/{group_id}/
  ↓__body [variables.RequestableHttpVariable-1664959341478]: 
    httpMethod: POST
    required: true
  ↓__header_ClientSessionId [variables.RequestableHttpVariable-1664959341480]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone.
    description: ClientSessionId
  ↓__header_ClientUndoRedoActionGroupId [variables.RequestableHttpVariable-1664959341482]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call.
    description: ClientUndoRedoActionGroupId
  ↓group_id [variables.RequestableHttpVariable-1664959341484]: 
    comment: Updates the group related to the provided value.
    description: group_id
    required: true
    value: 
↓_api_groups__group_id__leave__POST [transactions.JsonHttpTransaction]: 
  comment: Makes the authenticated user leave the group related to the provided `group_id` if the user is in that group. If the user is the last admin in the group, he will not be able to leave it. There must always be one admin in the group, otherwise it will be left without control. If that is the case, he must either delete the group or give another member admin permissions first.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  httpVerb: POST
  subDir: /api/groups/{group_id}/leave/
  ↓group_id [variables.RequestableHttpVariable-1664959341488]: 
    comment: Leaves the group related to the value.
    description: group_id
    required: true
    value: 
↓_api_groups__POST [transactions.JsonHttpTransaction]: 
  comment: Creates a new group where only the authorized user has access to. No initial data like database applications are added, they have to be created via other endpoints.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/json
  httpVerb: POST
  subDir: /api/groups/
  ↓__body [variables.RequestableHttpVariable-1664959341464]: 
    httpMethod: POST
    required: true
  ↓__header_ClientSessionId [variables.RequestableHttpVariable-1664959341466]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone.
    description: ClientSessionId
↓_api_groups_invitations__group_invitation_id___DELETE [transactions.JsonHttpTransaction]: 
  comment: Deletes a group invitation if the authorized user has admin rights to the related group.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  httpVerb: DELETE
  subDir: /api/groups/invitations/{group_invitation_id}/
  ↓group_invitation_id [variables.RequestableHttpVariable-1664959341496]: 
    comment: Deletes the group invitation related to the provided value.
    description: group_invitation_id
    required: true
    value: 
↓_api_groups_invitations__group_invitation_id___GET [transactions.JsonHttpTransaction]: 
  comment: Returns the requested group invitation if the authorized user has admin right to the related group
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  subDir: /api/groups/invitations/{group_invitation_id}/
  ↓group_invitation_id [variables.RequestableHttpVariable-1664959341492]: 
    comment: Returns the group invitation related to the provided value.
    description: group_invitation_id
    required: true
    value: 
↓_api_groups_invitations__group_invitation_id___PATCH [transactions.JsonHttpTransaction]: 
  comment: Updates the existing group invitation related to the provided `group_invitation_id` param if the authorized user has admin rights to the related group.
  customHttpVerb: PATCH
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/json
  httpVerb: PUT
  subDir: /api/groups/invitations/{group_invitation_id}/
  ↓__body [variables.RequestableHttpVariable-1664959341500]: 
    httpMethod: POST
    required: true
  ↓group_invitation_id [variables.RequestableHttpVariable-1664959341502]: 
    comment: Updates the group invitation related to the provided value.
    description: group_invitation_id
    required: true
    value: 
↓_api_groups_invitations__group_invitation_id__accept__POST [transactions.JsonHttpTransaction]: 
  comment: Accepts a group invitation with the given id if the email address of the user matches that of the invitation.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  httpVerb: POST
  subDir: /api/groups/invitations/{group_invitation_id}/accept/
  ↓group_invitation_id [variables.RequestableHttpVariable-1664959341506]: 
    comment: Accepts the group invitation related to the provided value.
    description: group_invitation_id
    required: true
    value: 
↓_api_groups_invitations__group_invitation_id__reject__POST [transactions.JsonHttpTransaction]: 
  comment: Rejects a group invitation with the given id if the email address of the user matches that of the invitation.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  httpVerb: POST
  subDir: /api/groups/invitations/{group_invitation_id}/reject/
  ↓group_invitation_id [variables.RequestableHttpVariable-1664959341510]: 
    comment: Rejects the group invitation related to the provided value.
    description: group_invitation_id
    required: true
    value: 
↓_api_groups_invitations_group__group_id___GET [transactions.JsonHttpTransaction]: 
  comment: Lists all the group invitations of the group related to the provided `group_id` parameter if the authorized user has admin rights to that group.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  subDir: /api/groups/invitations/group/{group_id}/
  ↓group_id [variables.RequestableHttpVariable-1664959341514]: 
    comment: Returns only invitations that are in the group related to the provided value.
    description: group_id
    required: true
    value: 
↓_api_groups_invitations_group__group_id___POST [transactions.JsonHttpTransaction]: 
  comment: Creates a new group invitations for an email address if the authorized user has admin rights to the related group. An email containing a sign up link will be send to the user.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/json
  httpVerb: POST
  subDir: /api/groups/invitations/group/{group_id}/
  ↓__body [variables.RequestableHttpVariable-1664959341518]: 
    httpMethod: POST
    required: true
  ↓group_id [variables.RequestableHttpVariable-1664959341520]: 
    comment: Creates a group invitation to the group related to the provided value.
    description: group_id
    required: true
    value: 
↓_api_groups_invitations_token__token___GET [transactions.JsonHttpTransaction]: 
  comment: Responds with the serialized group invitation if an invitation with the provided token is found.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  subDir: /api/groups/invitations/token/{token}/
  ↓token [variables.RequestableHttpVariable-1664959341524]: 
    comment: Returns the group invitation related to the provided token.
    description: token
    required: true
    value: 
↓_api_groups_order__POST [transactions.JsonHttpTransaction]: 
  comment: Changes the order of the provided group ids to the matching position that the id has in the list. If the authorized user does not belong to the group it will be ignored. The order will be custom for each user.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/json
  httpVerb: POST
  subDir: /api/groups/order/
  ↓__body [variables.RequestableHttpVariable-1664959341528]: 
    httpMethod: POST
    required: true
  ↓__header_ClientSessionId [variables.RequestableHttpVariable-1664959341530]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId header this action can be undone/redone.
    description: ClientSessionId
  ↓__header_ClientUndoRedoActionGroupId [variables.RequestableHttpVariable-1664959341532]: 
    comment: An optional header that marks the action performed by this request as having occurred in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId header, all the actions belonging to the same action group can be undone/redone together in a single API call.
    description: ClientUndoRedoActionGroupId
↓_api_groups_users__group_user_id___DELETE [transactions.JsonHttpTransaction]: 
  comment: Deletes a group user if the authorized user has admin rights to the related group.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  httpVerb: DELETE
  subDir: /api/groups/users/{group_user_id}/
  ↓group_user_id [variables.RequestableHttpVariable-1664959341536]: 
    comment: Deletes the group user related to the provided value.
    description: group_user_id
    required: true
    value: 
↓_api_groups_users__group_user_id___PATCH [transactions.JsonHttpTransaction]: 
  comment: Updates the existing group user related to the provided `group_user_id` param if the authorized user has admin rights to the related group.
  customHttpVerb: PATCH
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/json
  httpVerb: PUT
  subDir: /api/groups/users/{group_user_id}/
  ↓__body [variables.RequestableHttpVariable-1664959341540]: 
    httpMethod: POST
    required: true
  ↓group_user_id [variables.RequestableHttpVariable-1664959341542]: 
    comment: Updates the group user related to the provided value.
    description: group_user_id
    required: true
    value: 
↓_api_groups_users_group__group_id___GET [transactions.JsonHttpTransaction]: 
  comment: Lists all the users that are in a group if the authorized user has admin permissions to the related group. To add a user to a group an invitation must be send first.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  subDir: /api/groups/users/group/{group_id}/
  ↓group_id [variables.RequestableHttpVariable-1664959341546]: 
    comment: Updates the group user related to the provided value.
    description: group_id
    required: true
    value: 
↓_api_jobs__GET [transactions.JsonHttpTransaction]: 
  comment: List all existing jobs. Jobs are task executed asynchronously in the background. You can use the `get_job` endpoint to read the currentprogress of a the job.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  subDir: /api/jobs/
↓_api_jobs__job_id___GET [transactions.JsonHttpTransaction]: 
  comment: Returns the information related to the provided job id. This endpoint can for example be polled to get the state and progress of the job in real time.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  subDir: /api/jobs/{job_id}/
  ↓job_id [variables.RequestableHttpVariable-1664959341556]: 
    comment: The job id to lookup information about.
    description: job_id
    required: true
    value: 
↓_api_jobs__POST [transactions.JsonHttpTransaction]: 
  comment: Creates a new job. This job runs asynchronously in the background and execute the task specific to the provided typeparameters. The `get_job` can be used to get the current state of the job.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/json
  httpVerb: POST
  subDir: /api/jobs/
  ↓__body [variables.RequestableHttpVariable-1664959341552]: 
    httpMethod: POST
    required: true
↓_api_licenses__GET [transactions.JsonHttpTransaction]: 
  comment: Lists all the valid licenses that are registered to this instance. A premium license can be used to unlock the premium features for a fixed amount of users. More information about self hosted licenses can be found on our pricing page https://baserow.io/pricing.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  subDir: /api/licenses/
↓_api_licenses__id___DELETE [transactions.JsonHttpTransaction]: 
  comment: Removes the existing license related to the provided parameter. If the license is active, then all the users that are using the license will lose access to the premium version.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  httpVerb: DELETE
  subDir: /api/licenses/{id}/
  ↓id [variables.RequestableHttpVariable-1664959341570]: 
    comment: The internal identifier of the license, this is `id` and not `license_id`.
    description: id
    required: true
    value: 
↓_api_licenses__id___GET [transactions.JsonHttpTransaction]: 
  comment: Responds with detailed information about the license related to the provided parameter.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  subDir: /api/licenses/{id}/
  ↓id [variables.RequestableHttpVariable-1664959341566]: 
    comment: The internal identifier of the license.
    description: id
    required: true
    value: 
↓_api_licenses__id___user_id___DELETE [transactions.JsonHttpTransaction]: 
  comment: Removes the user related to the provided parameter and to the license related to the parameter. This only happens if the user is on the license, otherwise nothing will happen.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  httpVerb: DELETE
  subDir: /api/licenses/{id}/{user_id}/
  ↓id [variables.RequestableHttpVariable-1664959341580]: 
    comment: The internal identifier of the license, this is `id` and not `license_id`.
    description: id
    required: true
    value: 
  ↓user_id [variables.RequestableHttpVariable-1664959341582]: 
    comment: The ID of the user that must be removed from the license.
    description: user_id
    required: true
    value: 
↓_api_licenses__id___user_id___POST [transactions.JsonHttpTransaction]: 
  comment: Adds the user related to the provided parameter and to the license related to the parameter. This only happens if there are enough seats left on the license and if the user is not already on the license.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  httpVerb: POST
  subDir: /api/licenses/{id}/{user_id}/
  ↓id [variables.RequestableHttpVariable-1664959341574]: 
    comment: The internal identifier of the license, this is `id` and not `license_id`.
    description: id
    required: true
    value: 
  ↓user_id [variables.RequestableHttpVariable-1664959341576]: 
    comment: The ID of the user that must be added to the license.
    description: user_id
    required: true
    value: 
↓_api_licenses__id__check__GET [transactions.JsonHttpTransaction]: 
  comment: This endpoint checks with the authority if the license needs to be updated. It also checks if the license is operating within its limits and might take action on that. It could also happen that the license has been deleted because there is an instance id mismatch or because it's invalid. In that case a `204` status code is returned.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  subDir: /api/licenses/{id}/check/
  ↓id [variables.RequestableHttpVariable-1664959341586]: 
    comment: The internal identifier of the license, this is `id` and not `license_id`.
    description: id
    required: true
    value: 
↓_api_licenses__id__fill_seats__POST [transactions.JsonHttpTransaction]: 
  comment: Fills the remaining empty seats of the license with the first users that are found.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  httpVerb: POST
  subDir: /api/licenses/{id}/fill-seats/
  ↓id [variables.RequestableHttpVariable-1664959341590]: 
    comment: The internal identifier of the license, this is `id` and not `license_id`.
    description: id
    required: true
    value: 
↓_api_licenses__id__lookup_users__GET [transactions.JsonHttpTransaction]: 
  comment: This endpoint can be used to lookup users that must be added to a premium license. Users that are already in the license are not returned here. Optionally a `search` query parameter can be provided to filter the results.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  subDir: /api/licenses/{id}/lookup-users/
  ↓id [variables.RequestableHttpVariable-1664959341594]: 
    comment: The internal identifier of the license, this is `id` and not `license_id`.
    description: id
    required: true
    value: 
  ↓page [variables.RequestableHttpVariable-1664959341596]: 
    comment: Defines which page of users should be returned.
    description: page
    httpName: page
  ↓search [variables.RequestableHttpVariable-1664959341598]: 
    comment: If provided, only users where the name or email contains the value are returned.
    description: search
    httpName: search
  ↓size [variables.RequestableHttpVariable-1664959341600]: 
    comment: Defines how many users should be returned per page.
    description: size
    httpName: size
↓_api_licenses__id__remove_all_users__POST [transactions.JsonHttpTransaction]: 
  comment: Removes all the users the users that are on the license. This will empty all the seats.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  httpVerb: POST
  subDir: /api/licenses/{id}/remove-all-users/
  ↓id [variables.RequestableHttpVariable-1664959341604]: 
    comment: The internal identifier of the license, this is `id` and not `license_id`.
    description: id
    required: true
    value: 
↓_api_licenses__POST [transactions.JsonHttpTransaction]: 
  comment: Registers a new license. After registering you can assign users to the license that will be able to use the premium features while the license is active. If an existing license with the same `license_id` already exists and the provided license has been issued later than that one, the existing one will be upgraded.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/json
  httpVerb: POST
  subDir: /api/licenses/
  ↓__body [variables.RequestableHttpVariable-1664959341562]: 
    httpMethod: POST
    required: true
↓_api_row_comments__table_id___row_id___GET [transactions.JsonHttpTransaction]: 
  comment: Returns all row comments for the specified table and row.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  subDir: /api/row_comments/{table_id}/{row_id}/
  ↓limit [variables.RequestableHttpVariable-1664959341608]: 
    comment: Defines how many rows should be returned.
    description: limit
    httpName: limit
  ↓offset [variables.RequestableHttpVariable-1664959341610]: 
    comment: Can only be used in combination with the `limit` parameter and defines from which offset the rows should be returned.
    description: offset
    httpName: offset
  ↓page [variables.RequestableHttpVariable-1664959341612]: 
    comment: Defines which page of rows should be returned. Either the `page` or `limit` can be provided, not both.
    description: page
    httpName: page
  ↓row_id [variables.RequestableHttpVariable-1664959341614]: 
    comment: The row to get row comments for.
    description: row_id
    required: true
    value: 
  ↓size [variables.RequestableHttpVariable-1664959341616]: 
    comment: Can only be used in combination with the `page` parameter and defines how many rows should be returned.
    description: size
    httpName: size
  ↓table_id [variables.RequestableHttpVariable-1664959341618]: 
    comment: The table the row is in.
    description: table_id
    required: true
    value: 
↓_api_row_comments__table_id___row_id___POST [transactions.JsonHttpTransaction]: 
  comment: Creates a comment on the specified row.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/json
  httpVerb: POST
  subDir: /api/row_comments/{table_id}/{row_id}/
  ↓__body [variables.RequestableHttpVariable-1664959341622]: 
    httpMethod: POST
    required: true
  ↓row_id [variables.RequestableHttpVariable-1664959341624]: 
    comment: The row to create a comment for.
    description: row_id
    required: true
    value: 
  ↓table_id [variables.RequestableHttpVariable-1664959341626]: 
    comment: The table to find the row to comment on in.
    description: table_id
    required: true
    value: 
↓_api_settings__GET [transactions.JsonHttpTransaction]: 
  comment: Responds with all the admin configured settings.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  subDir: /api/settings/
↓_api_settings_instance_id__GET [transactions.JsonHttpTransaction]: 
  comment: Responds with the self hosted instance id. Only a user with staff permissions can request it.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  subDir: /api/settings/instance-id/
↓_api_settings_update__PATCH [transactions.JsonHttpTransaction]: 
  comment: Updates the admin configured settings if the user has admin permissions.
  customHttpVerb: PATCH
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/json
  httpVerb: PUT
  subDir: /api/settings/update/
  ↓__body [variables.RequestableHttpVariable-1664959341634]: 
    httpMethod: POST
    required: true
↓_api_snapshots__snapshot_id___DELETE [transactions.JsonHttpTransaction]: 
  comment: Deletes a snapshot. Deleting a snapshot doesn't affect the application that the snapshot is made from and doesn't affect any applications that were created by restoring it. Snapshot deletion is permanent and can't be undone.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  httpVerb: DELETE
  subDir: /api/snapshots/{snapshot_id}/
  ↓snapshot_id [variables.RequestableHttpVariable-1664959341638]: 
    comment: Id of the snapshot to delete.
    description: snapshot_id
    required: true
    value: 
↓_api_snapshots__snapshot_id__restore__POST [transactions.JsonHttpTransaction]: 
  comment: Restores a snapshot. When an application snapshot is restored, a new application will be created in the same group that the original application was placed in with the name of the snapshot and data that were in the original application at the time the snapshot was taken. The original application that the snaphot was taken from is unaffected. Snapshots can be restored multiple times and a number suffix is added to the new application name in the case of a collision.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  httpVerb: POST
  subDir: /api/snapshots/{snapshot_id}/restore/
  ↓snapshot_id [variables.RequestableHttpVariable-1664959341642]: 
    comment: Id of the snapshot to restore.
    description: snapshot_id
    required: true
    value: 
↓_api_snapshots_application__application_id___GET [transactions.JsonHttpTransaction]: 
  comment: Lists snapshots that were created for a given application.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  subDir: /api/snapshots/application/{application_id}/
  ↓application_id [variables.RequestableHttpVariable-1664959341646]: 
    comment: Application ID for which to list snapshots.
    description: application_id
    required: true
    value: 
↓_api_snapshots_application__application_id___POST [transactions.JsonHttpTransaction]: 
  comment: Creates a new application snapshot. Snapshots represent a state of an application at a specific point in time and can be restored later, making it easy to create backups of entire applications.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/json
  httpVerb: POST
  subDir: /api/snapshots/application/{application_id}/
  ↓__body [variables.RequestableHttpVariable-1664959341650]: 
    httpMethod: POST
    required: true
  ↓application_id [variables.RequestableHttpVariable-1664959341652]: 
    comment: Application ID for which to list snapshots.
    description: application_id
    required: true
    value: 
↓_api_templates__GET [transactions.JsonHttpTransaction]: 
  comment: Lists all the template categories and the related templates that are in that category. The template's `group_id` can be used for previewing purposes because that group contains the applications that are in the template. All the `get` and `list` endpoints related to that group are publicly accessible.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  subDir: /api/templates/
↓_api_templates_install__group_id___template_id___POST [transactions.JsonHttpTransaction]: 
  comment: Installs the applications of the given template into the given group if the user has access to that group. The response contains those newly created applications.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  httpVerb: POST
  subDir: /api/templates/install/{group_id}/{template_id}/
  ↓group_id [variables.RequestableHttpVariable-1664959341658]: 
    comment: The id related to the group where the template applications must be installed into.
    description: group_id
    required: true
    value: 
  ↓template_id [variables.RequestableHttpVariable-1664959341660]: 
    comment: The id related to the template that must be installed.
    description: template_id
    required: true
    value: 
↓_api_trash__GET [transactions.JsonHttpTransaction]: 
  comment: Responds with the groups and applications available for the requesting user to inspect the trash contents of.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  subDir: /api/trash/
↓_api_trash_group__group_id___DELETE [transactions.JsonHttpTransaction]: 
  comment: Empties the specified group and/or application of trash, including the group and application themselves if they are trashed also.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  httpVerb: DELETE
  subDir: /api/trash/group/{group_id}/
  ↓application_id [variables.RequestableHttpVariable-1664959341674]: 
    comment: Optionally filters down the trash to delete to only items for this application in the group.
    description: application_id
    httpName: application_id
  ↓group_id [variables.RequestableHttpVariable-1664959341676]: 
    comment: The group whose trash contents to empty, including the group itself if it is also trashed.
    description: group_id
    required: true
    value: 
↓_api_trash_group__group_id___GET [transactions.JsonHttpTransaction]: 
  comment: Responds with trash contents for a group optionally filtered to a specific application.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  subDir: /api/trash/group/{group_id}/
  ↓application_id [variables.RequestableHttpVariable-1664959341666]: 
    comment: Optionally filters down the trash to only items for this application in the group.
    description: application_id
    httpName: application_id
  ↓group_id [variables.RequestableHttpVariable-1664959341668]: 
    comment: Returns the trash for the group with this id.
    description: group_id
    required: true
    value: 
  ↓page [variables.RequestableHttpVariable-1664959341670]: 
    comment: Selects which page of trash contents should be returned.
    description: page
    httpName: page
↓_api_trash_restore__PATCH [transactions.JsonHttpTransaction]: 
  comment: Restores the specified trashed item back into baserow.
  customHttpVerb: PATCH
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/json
  httpVerb: PUT
  subDir: /api/trash/restore/
  ↓__body [variables.RequestableHttpVariable-1664959341680]: 
    httpMethod: POST
    required: true
↓_api_user__POST [transactions.JsonHttpTransaction]: 
  comment: Creates a new user based on the provided values. If desired an authentication token can be generated right away. After creating an account the initial group containing a database is created.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/json
  httpVerb: POST
  subDir: /api/user/
  ↓__body [variables.RequestableHttpVariable-1664959341684]: 
    httpMethod: POST
    required: true
↓_api_user_account__PATCH [transactions.JsonHttpTransaction]: 
  comment: Updates the account information of the authenticated user.
  customHttpVerb: PATCH
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/json
  httpVerb: PUT
  subDir: /api/user/account/
  ↓__body [variables.RequestableHttpVariable-1664959341694]: 
    httpMethod: POST
    required: true
↓_api_user_change_password__POST [transactions.JsonHttpTransaction]: 
  comment: Changes the password of an authenticated user, but only if the old password matches.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/json
  httpVerb: POST
  subDir: /api/user/change-password/
  ↓__body [variables.RequestableHttpVariable-1664959341698]: 
    httpMethod: POST
    required: true
↓_api_user_dashboard__GET [transactions.JsonHttpTransaction]: 
  comment: Lists all the relevant user information that for example could be shown on a dashboard. It will contain all the pending group invitations for that user.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  subDir: /api/user/dashboard/
↓_api_user_files_upload_file__POST [transactions.JsonHttpTransaction]: 
  comment: Uploads a file to Baserow by uploading the file contents directly. A `file` multipart is expected containing the file contents.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/x-www-form-urlencoded
  httpVerb: POST
  subDir: /api/user-files/upload-file/
↓_api_user_files_upload_via_url__POST [transactions.JsonHttpTransaction]: 
  comment: Uploads a file to Baserow by downloading it from the provided URL.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/json
  httpVerb: POST
  subDir: /api/user-files/upload-via-url/
  ↓__body [variables.RequestableHttpVariable-1664959341690]: 
    httpMethod: POST
    required: true
↓_api_user_redo__PATCH [transactions.JsonHttpTransaction]: 
  comment: Redoes the latest redoable action performed by the user making the request. a ClientSessionId header must be provided and only actions which were performed the same user with the same ClientSessionId value set on the api request that performed the action will be redone.Additionally the ClientSessionId header must be between 1 and 256 characters long and must only contain alphanumeric or the - characters.
  customHttpVerb: PATCH
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/json
  httpVerb: PUT
  subDir: /api/user/redo/
  ↓__body [variables.RequestableHttpVariable-1664959341704]: 
    httpMethod: POST
    required: true
  ↓__header_ClientSessionId [variables.RequestableHttpVariable-1664959341706]: 
    comment: The particular client session to redo actions for. The actions must have been performed with this same header set with the same value for them to be redoable by this endpoint.
    description: ClientSessionId
    required: true
    value: 
↓_api_user_reset_password__POST [transactions.JsonHttpTransaction]: 
  comment: Changes the password of a user if the reset token is valid. The **send_password_reset_email** endpoint sends an email to the user containing the token. That token can be used to change the password here without providing the old password.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/json
  httpVerb: POST
  subDir: /api/user/reset-password/
  ↓__body [variables.RequestableHttpVariable-1664959341710]: 
    httpMethod: POST
    required: true
↓_api_user_schedule_account_deletion__POST [transactions.JsonHttpTransaction]: 
  comment: Schedules the account deletion of the authenticated user. The user will be permanently deleted after the grace delay defined by the instance administrator.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/json
  httpVerb: POST
  subDir: /api/user/schedule-account-deletion/
  ↓__body [variables.RequestableHttpVariable-1664959341714]: 
    httpMethod: POST
    required: true
↓_api_user_send_reset_password_email__POST [transactions.JsonHttpTransaction]: 
  comment: Sends an email containing the password reset link to the email address of the user. This will only be done if a user is found with the given email address. The endpoint will not fail if the email address is not found. The link is going to the valid for 48 hours.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/json
  httpVerb: POST
  subDir: /api/user/send-reset-password-email/
  ↓__body [variables.RequestableHttpVariable-1664959341718]: 
    httpMethod: POST
    required: true
↓_api_user_token_auth__POST [transactions.JsonHttpTransaction]: 
  comment: Authenticates an existing user based on their username, which is their email address, and their password. If successful a JWT token will be generated that can be used to authorize for other endpoints that require authorization. The token will be valid for 60 minutes, so it has to be refreshed using the **token_refresh** endpoint before that time.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/json
  httpVerb: POST
  subDir: /api/user/token-auth/
  ↓__body [variables.RequestableHttpVariable-1664959341722]: 
    httpMethod: POST
    required: true
↓_api_user_token_refresh__POST [transactions.JsonHttpTransaction]: 
  comment: Refreshes an existing JWT token. If the token is valid, a new token will be included in the response. It will be valid for 60 minutes.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/json
  httpVerb: POST
  subDir: /api/user/token-refresh/
  ↓__body [variables.RequestableHttpVariable-1664959341726]: 
    httpMethod: POST
    required: true
↓_api_user_token_verify__POST [transactions.JsonHttpTransaction]: 
  comment: Verifies if the token is still valid.
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/json
  httpVerb: POST
  subDir: /api/user/token-verify/
  ↓__body [variables.RequestableHttpVariable-1664959341730]: 
    httpMethod: POST
    required: true
↓_api_user_undo__PATCH [transactions.JsonHttpTransaction]: 
  comment: undoes the latest undoable action performed by the user making the request. a ClientSessionId header must be provided and only actions which were performed the same user with the same ClientSessionId value set on the api request that performed the action will be undone.Additionally the ClientSessionId header must be between 1 and 256 characters long and must only contain alphanumeric or the - characters.
  customHttpVerb: PATCH
  httpInfo: true
  httpParameters: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Accept
            - java.lang.String: 
              - ↑value: application/json
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: Content-Type
            - java.lang.String: 
              - ↑value: application/json
  httpVerb: PUT
  subDir: /api/user/undo/
  ↓__body [variables.RequestableHttpVariable-1664959341734]: 
    httpMethod: POST
    required: true
  ↓__header_ClientSessionId [variables.RequestableHttpVariable-1664959341736]: 
    comment: The particular client session to undo actions for. The actions must have been performed with this same header set with the same value for them to be undoable by this endpoint.
    description: ClientSessionId
    required: true
    value: 