databaseName: lib_baserow_fullsync
↓GetServerInfo [transactions.couchdb.GetServerInfoTransaction]: 
  ↑default: true
↓GetView [transactions.couchdb.GetViewTransaction]: 
  ↓_use_ddoc [variables.RequestableVariable-1672159183368]: 
    description: Design document name
  ↓_use_view [variables.RequestableVariable-1672159183370]: 
    description: View function name
  ↓_use_startkey [variables.RequestableVariable-1672159183372]: 
    description: (string) – Return records starting with the specified key. Optional
  ↓_use_endkey [variables.RequestableVariable-1672159183374]: 
    description: (string) – Stop returning records when the specified key is reached. Optional
  ↓_use_limit [variables.RequestableVariable-1672159500167]: 
    description: (number) – Limit the number of the returned documents to the specified number. Optional
↓PostBulkDocuments [transactions.couchdb.PostBulkDocumentsTransaction]: 
  policy: override
  useHash: true
  ↓data [variables.RequestableMultiValuedVariable-1670758251925]: 
    description: Documents contents
  ↓_id [variables.RequestableMultiValuedVariable-1670758251927]: 
    description: Document ids
  ↓_use_json_base [variables.RequestableVariable-1672138062511]: 
    description: (string) – JSON use as a base for the array of documents (js array), or for individual documents (js object). Optional
↓DataSources [couchdb.DesignDocument]: 
  docdata: 
    →: |
      '{
        "_id": "_design\/DataSources",
        "filters": {},
        "updates": {},
        "views": {
          "formssource_GetTableData": {
            "map": "\/\/formssource_GetTableData\r\n
      \/\/ Hybrid Ready \r\n
      \/*Begin_map_meta\r\n
      {\r\n
              \"en\": {\r\n
                  \"displayName\": \"<p>Get data from a baserow table<\/p>\",\r\n
                  \"comment\": \"<div>This offline data source returns data from a BaseRow table<\/div>\"\r\n
              },\r\n
              \"fr\": {\r\n
                  \"displayName\": \"<p>Retourne les données d''un table Baserow<\/p>\",\r\n
                  \"comment\": \"<div>Cette source de données disponible hors ligne renvoie les données d''une table BaseRow<\/div>\"\r\n
              }\r\n
      }\r\n
      End_map_meta*\/\r\n
      function (doc) {\r\n
          try {\r\n
              if (doc._id.indexOf(''baserow_table_'') == 0)\r\n
                  emit(doc._id.substring(14), doc);\r\n
          } catch (err) {\r\n
              log(err.message);\r\n
          }\r\n
          \r\n
          \r\n
          \/*Begin_c8oformComputeKeys_meta\r\n
          {\r\n
              \"forms_table_id\": {\r\n
                  \"en\": {\r\n
                      \"displayName\": \"<p>Table ID<\/p>\",\r\n
                      \"comment\": \"<div>Baserow Table ID to get data from<\/div>\"\r\n
                  },\r\n
                  \"fr\": {\r\n
                      \"displayName\": \"<p>Table ID<\/p>\",\r\n
                      \"comment\": \"<div>L''ID de la table bBaseRow demandée<\/div>\"\r\n
                  }\r\n
              }\r\n
          }\r\n
          End_c8oformComputeKeys_meta*\/\r\n
      \r\n
          \/*Begin_c8oformComputeKeys_function*\/\r\n
          var c8oformComputeKeys = function (forms_table_id){\r\n
              var _use_startkey = forms_table_id;\r\n
              var _use_endkey      = forms_table_id + ''\\uffff'';\r\n
      \r\n
              console.log(\"BR Offline Connector : startkey :\" +  _use_startkey);\r\n
              console.log(\"BR Offline Connector : endkey :\" +  _use_endkey);\r\n
              \r\n
                if (navigator.onLine && !allReady) {\r\n
                  console.log(\"BR Offline Connector : We are On line and not fully indexed, so call Backend CallSequence  \");\r\n
                  \r\n
                  var paramsOffline = {\r\n
                      startkey: _use_startkey,\r\n
                      endkey:_use_endkey,\r\n
                  };\r\n
                  \r\n
                  return {\r\n
                      __requestable: \"lib_BaseRow.FSExecuteView\",\r\n
                      _use_ddoc: \"DataSources\",\r\n
                      _use_view: \"formssource_GetTableData\",\r\n
                      _use_startkey: JSON.stringify(_use_startkey),\r\n
                      _use_endkey: JSON.stringify(_use_endkey),\r\n
                      __prepare: {\r\n
                          \"__params\":paramsOffline\r\n
                      }\r\n
                  };\r\n
              } else{\r\n
                  console.log(\"BR Offline Connector : Using local view\");\r\n
                  \/\/ stale option returns results immediately\r\n
                  paramsOffline[\"stale\"] = ''update_after'';\r\n
                  return paramsOffline;\r\n
              }\r\n
          }    \r\n
          \/*End_c8oformComputeKeys_function*\/\r\n
          \r\n
          \/*Begin_c8oformPostQuery_function*\/\r\n
          var c8oformPostQuery = function (response, type, parameters){\r\n
              console.log(\"BR Offline Connector : Response data is - \" +  JSON.stringify(response));\r\n
              \r\n
              if(response === undefined || response.rows === undefined || response.rows.length < 1){\r\n
                  console.log(\"No data from Base offline Source !\");\r\n
                  return {_c8o_update: true, _c8o_forceLoader: 1, data: []};\r\n
              }\r\n
              res = {_c8o_update: true, _c8o_forceLoader: 1, data: []};\r\n
              reponse.rows.forEach((item, index) => {\r\n
                  res.data.push(item.value);\r\n
              })\r\n
              return res;\r\n
          }\r\n
          \/*End_c8oformPostQuery_function*\/    \r\n
      }\r\n
      "
          }
        }
      }'